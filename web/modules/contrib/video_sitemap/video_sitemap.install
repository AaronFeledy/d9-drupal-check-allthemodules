<?php

/**
 * @file
 * Module install and update procedures.
 */

/**
 * Implements hook_requirements().
 */
function video_sitemap_requirements($phase) {
  $requirements = [];

  if (!extension_loaded('xmlwriter')) {
    $requirements['video_sitemap_php_extensions'] = [
      'title' => t('Video Sitemap PHP extensions'),
      'value' => t('Missing PHP xmlwriter extension'),
      'description' => t('In order to be able to generate sitemaps, the Video Sitemap module requires the <em>xmlwriter</em> PHP extension to be enabled.'),
      'severity' => REQUIREMENT_ERROR,
    ];
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function video_sitemap_uninstall() {
  \Drupal::service('queue')
    ->get('node_with_video_queue')
    ->deleteQueue();
}

/**
 * Implements hook_schema().
 */
function video_sitemap_schema() {
  $schema['video_sitemap_index'] = [
    'description' => 'The base table for Video Sitemap links.',
    'fields' => [
      'loc_id' => [
        'description' => 'ID of the object using the file (Node ID).',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
      'loc' => [
        'description' => 'URL of host page.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'data' => [
        'description' => 'URL data.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'normal',
      ],
    ],
    'unique keys' => [
      'loc_id' => ['loc_id'],
    ],
    'indexes' => [
      'loc' => ['loc'],
    ],
  ];

  $schema['video_sitemap'] = [
    'description' => 'Holds XML video sitemap chunks as strings for quick retrieval.',
    'fields' => [
      'id' => [
        'description' => 'Video sitemap chunk unique identifier.',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'delta' => [
        'description' => 'Delta of the chunk.',
        'type' => 'int',
        'size' => 'small',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'sitemap_string' => [
        'description' => 'XML video sitemap chunk string.',
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ],
      'sitemap_created' => [
        'description' => 'Timestamp of video sitemap chunk generation.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['id'],
  ];

  return $schema;
}
