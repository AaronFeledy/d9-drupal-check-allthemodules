<?php

/**
 * @file
 * Main module file.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_cron().
 */
function video_sitemap_cron() {
  $config = \Drupal::config('video_sitemap.settings');
  if (!$config->get('cron_generate')) {
    return;
  }
  /** @var \Drupal\video_sitemap\VideoSitemapGenerator $generator */
  $generator = \Drupal::service('video_sitemap.generator');
  // If the minimum sitemap lifetime hasn't been passed, skip.
  $last_generated = $generator->getLastGenerated();

  $lifetime = \Drupal::time()->getRequestTime() - $last_generated;
  if ($lifetime < $config->get('cron_generate_interval')) {
    return;
  }

  $generator->generateSitemap('cron');
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function video_sitemap_node_insert(EntityInterface $entity) {
  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
  $entity_manager = \Drupal::service('video_sitemap.entity_manager');
  $entity_manager->addEntityToQueue($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function video_sitemap_node_update(EntityInterface $entity) {
  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
  $entity_manager = \Drupal::service('video_sitemap.entity_manager');
  $entity_manager->addEntityToQueue($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 *
 * Removes node for video sitemap index table..
 */
function video_sitemap_node_delete(EntityInterface $entity) {
  /** @var \Drupal\video_sitemap\VideoSitemapEntityManager $entity_manager */
  $entity_manager = \Drupal::service('video_sitemap.entity_manager');
  $entity_manager->deleteLocRecord($entity);
}
