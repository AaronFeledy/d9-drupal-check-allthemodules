////
/// Helpers
////

/// Return a map from the specified key. Optionally specify a sub key.
/// Works similarly to map-get but with support for sub keys.
/// @param {map} $map
/// @param {string} $key - The map key to retrieve.
/// @param {string} $sub-key [null] - A sub-key of $key
/// @returns {*|null} The value of the supplied key
/// @example
///   key($colors, default, light)
@function key($map, $key, $sub-key: null) {
  @if map-has-key($map, $key) {
    $val: map-get($map, $key);

    @if $sub-key and map-has-key($val, $sub-key) {
      $val: map-get($val, $sub-key);
    }

    @return $val;
  }

  @warn "Unknown '#{$key}' in '#{$map}'.";
  @return null;
}

$ph-z-layers: (
  bottomless-pit: -9999,
  default: 0,
  debug: 1000
) !default;

/// Retrieve the z-index from $z-layers.
/// @see $z-layers
/// @example
///   z(banner, default)
@function z($key, $sub-key: null) {
  @return key($ph-z-layers, $key, $sub-key);
}

/// Easily set a border with the box shadow property.
/// @example
///   @include ph-box-shadow-border(#000)
@mixin ph-box-shadow-border($color, $size: 5px) {
  box-shadow: inset 0 0 0 $size $color;
}
