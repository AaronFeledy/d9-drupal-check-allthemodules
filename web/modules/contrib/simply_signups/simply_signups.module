<?php

/**
 * @file
 * Provides a signups node form.
 */

use Drupal\node\Entity\Node;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\simply_signups\Form\SimplySignupsForm;
use Drupal\simply_signups\Utility\SimplySignupsUtility;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_entity_extra_field_info().
 */
function simply_signups_entity_extra_field_info() {
  $extra = [];
  $config = \Drupal::config('simply_signups.config');
  $bundles = $config->get('bundles');
  foreach ($bundles as $bundle) {
    $extra['node'][$bundle]['display']['simply_signups_form'] = [
      'label' => t('Sign up form'),
      'description' => t('This field variable is a placeholder for the signup form.'),
      'weight' => 0,
      'visible' => TRUE,
    ];
  }
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function simply_signups_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($view_mode == 'full') {
    $bundle = $entity->bundle();
    $config = \Drupal::config('simply_signups.config');
    $bundles = $config->get('bundles');
    /* content is published */
    if ($entity->isPublished() == 1) {
      /* content type is in the enabled list */
      if (in_array($bundle, $bundles, TRUE)) {
        $build['#cache']['max-age'] = 0;
        \Drupal::service('page_cache_kill_switch')->trigger();
        $path = \Drupal::service('path.current')->getPath();
        $currentPath = ltrim($path, '/');
        $arg = explode('/', $currentPath);
        $nid = $arg[1];
        $node = Node::load($nid);
        $id = $node->id();
        $isValidNode = (isset($node)) ? TRUE : FALSE;
        /* the nid is attached to a valid node */
        if ($isValidNode) {
          $db = \Drupal::database();
          $query = $db->select('simply_signups_settings', 'p');
          $query->fields('p');
          $query->condition('nid', $nid, '=');
          $count = $query->countQuery()->execute()->fetchField();
          /* settings are available in the database */
          if ($count > 0) {
            $results = $query->execute()->fetchAll();
            $nodeSettings = [];
            foreach ($results as $row) {
              $nodeSettings['nid'] = $row->nid;
              $nodeSettings['startDate'] = $row->start_date;
              $nodeSettings['endDate'] = $row->end_date;
              $nodeSettings['maxSignups'] = $row->max_signups;
              $nodeSettings['status'] = $row->status;
            }
            /* signup is enabled for this node */
            if ($nodeSettings['status'] == 1) {
              $now = \Drupal::time()->getCurrentTime();
              /* signup is displayed if the current datetime is before start datetime */
              if (($now > $nodeSettings['startDate']) and ($now < $nodeSettings['endDate'])) {
                $db = \Drupal::database();
                $query = $db->select('simply_signups_data', 'p');
                $query->fields('p');
                $query->condition('nid', $nid, '=');
                $count = $query->countQuery()->execute()->fetchField();
                /* there are 0 signup entries */
                if ($count == 0) {
                  $query = $db->select('simply_signups_fields', 'p');
                  $query->fields('p');
                  $query->orderBy('weight');
                  $query->condition('nid', $nid, '=');
                  $results = $query->execute()->fetchAll();
                  $fieldCount = $query->countQuery()->execute()->fetchField();
                  if ($fieldCount > 0) {
                    $formObject = 'Drupal\simply_signups\Form\SimplySignupsForm';
                    $form = \Drupal::formBuilder()->getForm($formObject, $nid);
                    $build['simply_signups_form'] = [
                      '#markup' => render($form),
                    ];
                  }
                }
                else {
                  $numberOfAttending = SimplySignupsUtility::getNumberOfAttending($id);
                  $maxAttending = SimplySignupsUtility::getMaxAttending($nid);
                  /* max signups is set to unlimited (zero) */
                  if ($maxAttending == 0) {
                    $formObject = new SimplySignupsForm();
                    $form = \Drupal::formBuilder()->getForm($formObject, $nid);
                    $build['simply_signups_form'] = [
                      '#markup' => render($form),
                    ];
                  }
                  else {
                    /* max signups has not been reached yet */
                    if ($numberOfAttending < $maxAttending) {
                      $remainingSlots = ($maxAttending - $numberOfAttending);
                      if ($remainingSlots <= 5 and $remainingSlots > 0) {
                        drupal_set_message(t('This event is almost filled - reserve your spot today!'), 'warning');
                      }
                      $formObject = new SimplySignupsForm();
                      $form = \Drupal::formBuilder()->getForm($formObject, $nid);
                      $build['simply_signups_form'] = [
                        '#markup' => render($form),
                      ];
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_help().
 */
function simply_signups_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the simply signups module.
    case 'help.page.simply_signups':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Event signup form') . '</p>';
      return $output;

    default:
  }

}
