# Schema for configuration files for chunker settings and methods.
#
chunker.settings:
  type: config_object
  label: 'Chunker Settings'
  mapping:
    chunker_debuglevel:
      type: integer
      label: 'Debug level'

# Developers may provide additional chunker.method plugins to describe their
# desired structure or css syntax-of-the-week.
# This can be done by building or serializing a chunker.method.{methodname}.yml
# config file.
# After importing, such method config files should become available to the
# chunker UI, and may be previewed at /admin/help/chunker/examples
# and used in the chunker rendering choices.
#
# This schema describes the known and accepted parameters a developer may
# want to tweak. Usually, just adjusting some classes, and if needed, some
# tag types should achieve most results.
#
# Rare cases need adjustment of other tag attributes, such as data-@ values
# for javascript libraries.
# {tag}_attributes will let an arbitrary attribute be inserted into the tag.

chunker.method.*:
  type: mapping
  label: 'Chunker method'
  description: 'A Chunker method is a ruleset for how to treat renderable text in a Drupal context.'
  mapping:
    name:
      label: 'Name'
      type: string
    label:
      label: 'Label'
      type: label
    description:
      label: 'Description'
      type: string
    settings:
      type: mapping
      label: 'Settings'
      description: 'Method settings are passed through to the semantic chunker, and contain semantic rewriting rules about how to handle the markup. They do not contain Drupal-specific extras like the attached libraries.'
      mapping:

        start_level:
          label: 'Start level'
          type: integer
        enwrap_first_element:
          label: 'Enwrap first element'
          type: boolean
        enwrap_first_elements:
          label: 'Enwrap first elements'
          description: 'What to do with content (freetext or stuff) that appears before the first heading. You probably want to keep it out of the chunking process, so enwrap it and it will be kept separate.'
          type: boolean
        reset:
          label: 'Reset'
          description: 'Use a blank field template (no default Drupal divs). This is useful/necessary if merging chunked content with field_group containers.'
          type: boolean
        permalink_string:
          label: 'Permalink string'
          description: 'Choose a character or string to bookmark anchors alongside the headings. Example <code>#</code>'
          type: string

        wrapper_tag:
          label: 'Wrapper tag'
          type: string
          description: 'Outer HTML element to wrap the content with. eg "div"'
        wrapper_class:
          label: 'Wrapper class'
          type: string
          description: 'Class to apply to the wrapper tag. Only used if using a wrapper tag. Default <em>none</em>; Example <code>vertical-tabs-panes</code>'
        wrapper_attributes:
          label: 'Wrapper attributes'
          description: 'Additional arbitrary html attributes to apply to the wrapper tag.'
          type: sequence
          sequence:
            type: string
          # It's a set of key/val string pairs that
          # we don't know the keys for. Hopefully that will map OK.
          # Docs allege that keys can be integers or strings
          # https://www.drupal.org/node/1905070

        section_tag:
          label: 'Section tag'
          description: 'Element to wrap the title+content with. Default: <code>div</code>. Example: <code>section</code>. Set it to blank to prevent this behavior and prevent nesting.'
          type: string
        section_class:
          label: 'Section class'
          description: 'Class to apply to the section element. Default: <code>chunker-section</code>'
          type: string

        content_tag:
          label: 'Content tag'
          type: string
        content_class:
          label: 'Content attributes'
          type: string

        heading_tag:
          label: 'Heading tag'
          type: string
        heading_class:
          label: 'Heading attributes'
          type: string
        heading_inner_tag:
          label: 'Heading inner tag'
          type: string
          description: 'Advanced. Some methods require an additional element <em>inside</em> the heading to behave as expected. Example: an additional <code>span</code> is necessary for collapsed fieldsets'
        heading_inner_class:
          label: 'Heading inner class'
          type: string
          description: 'Advanced. Some methods require an additional element and class inside the heading to behave as expected. Example: an additional <code>fieldset-legend</code> is necessary for collapsed fieldsets'

    attached:
      label: 'Attached extras'
      type: mapping
      mapping:
        library:
          label: 'Attached libraries'
          type: sequence
          sequence:
            type: string

    # Just listing this to give it a descriptive  name in the config debugger.
    _core:
      label: 'Core'
      description: 'Core config management adds its own settings (UUID) to every config)entity.'
