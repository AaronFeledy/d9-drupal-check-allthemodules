<?php

/**
 * @file
 * Devel ace module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function devel_ace_form_devel_execute_form_alter(&$form, FormStateInterface $form_state) {
  $autocomplete_functions = [];
  $form['#attached']['library'][] = 'devel_ace/devel_ace';
  $form['devel_ace'] = [
    '#markup' => '<div id="devel-ace"></div>',
    '#weight' => -1,
  ];

  // The classes which are supported for autocomplete in the editor.
  $autocomplete_classes = [
    'Drupal',
    'Drupal\node\Entity\Node',
    'Drupal\taxonomy\Entity\Term',
    'Drupal\user\Entity\User',
    'Drupal\file\Entity\File',
    'Drupal\block_content\Entity\BlockContent',
    'Drupal\comment\Entity\Comment',
  ];
  \Drupal::moduleHandler()->alter('devel_ace_autocomplete_classes', $autocomplete_classes);

  foreach ($autocomplete_classes as $class) {
    $autocomplete_functions += array_merge($autocomplete_functions, _devel_ace_get_class_functions($class));
  }

  // Attach our autocomplete functions.
  $form['#attached']['drupalSettings']['devel_ace'] = [
    'autocomplete_functions' => $autocomplete_functions,
  ];
}

/**
 * Helper to get $class::$func strings for auto completing.
 *
 * @param string $class
 *   The full path to the class.
 *
 * @return array
 *   An array of full class paths and functions for auto completion.
 */
function _devel_ace_get_class_functions($class) {
  $autocomplete_functions = [];
  $reflection = new ReflectionClass($class);
  foreach ($reflection->getMethods(ReflectionMethod::IS_STATIC) as $class_func) {
    $autocomplete_functions[] = $class . '::' . $class_func->getName();
  }
  return $autocomplete_functions;
}
