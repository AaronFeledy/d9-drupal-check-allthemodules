<?php

/**
 * @file
 * Main procedural code file for the Watchdog Mailer module.
 *
 * This module sends e-mail about watchdog log entries.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function watchdog_mailer_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.watchdog_mailer':
      $text = file_get_contents(dirname(__FILE__) . "/README.txt");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function watchdog_mailer_form_system_logging_settings_alter(&$form, FormStateInterface $form_state) {

  $config = \Drupal::config('watchdog_mailer.settings');

  $form['logging_settings']['watchdog_mailer'] = [
    '#type' => 'fieldset',
    '#title' => t('Watchdog Mailer'),
  ];

  $form['logging_settings']['watchdog_mailer']['mail_address'] = [
    '#type' => 'email',
    '#title' => t('Recipient email'),
    '#description' => t('Enter the e-mail address that should receive copies of watchdog entries.'),
    '#default_value' => $config->get('mail_address'),
  ];

  $form['logging_settings']['watchdog_mailer']['php_notices'] = [
    '#title'         => t('Send all PHP entries'),
    '#type'          => 'checkbox',
    '#description'   => t('If the PHP creates any watchdog log entry, then email it out.'),
    '#default_value' => $config->get('php_notices'),
  ];

  $form['#submit'][] = 'watchdog_mailer_form_system_site_information_settings_submit';
}

/**
 * Submission handler for "system_logging_settings" form.
 *
 * Saves variables to key/value storage.
 */
function watchdog_mailer_form_system_site_information_settings_submit($form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('watchdog_mailer.settings')
    ->set('mail_address', $form_state->getValue('mail_address'))
    ->set('php_notices', $form_state->getValue('php_notices'))
    ->save();
}

/**
 * Implements hook_mail().
 */
function watchdog_mailer_mail($key, &$message, $params) {
  switch ($key) {
    case 'watchdog_mailer':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];

      break;
  }
}
