<?php

/**
 * @file
 * This module provide domain wise aggregation of css and js.
 */

use Drupal\Core\Url;
use Drupal\domain\DomainInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_domain_operations().
 */
function domain_wise_aggregation_domain_operations(DomainInterface $domain, AccountInterface $account) {
  $operations = [];
  // Check permissions.
  if ($account->hasPermission('administer domain aggregation')) {
    // Add aliases to the list.
    $id = $domain->id();
    $operations['domain_aggregate'] = [
      'title' => t('Aggregate'),
      'url' => Url::fromRoute('domain.aggregation', ['domain' => $id]),
      'weight' => 60,
    ];
  }
  return $operations;
}

/**
 * Get domain wise setting for css aggregation.
 */
function domain_wise_aggregation_css_domain_setting() {
  $db = \Drupal::database();
  $query = $db->select('domain_aggregate_compress', 'aadv');
  $query->fields('aadv', ['css_optimization_status']);
  $query->condition('aadv.domain_id', str_replace(".", "_", $_SERVER['HTTP_HOST']));
  $result = $query->execute()->fetchObject();
  if (count($result) > 0 && !empty($result->css_optimization_status)) {
    return $result->css_optimization_status;
  }
}

/**
 * Get domain wise setting for js aggregation.
 */
function domain_wise_aggregation_js_domain_setting() {
  $db = \Drupal::database();
  $query = $db->select('domain_aggregate_compress', 'aadv');
  $query->fields('aadv', ['js_optimization_status']);
  $query->condition('aadv.domain_id', str_replace(".", "_", $_SERVER['HTTP_HOST']));
  $result = $query->execute()->fetchObject();
  if (count($result) > 0 && !empty($result->js_optimization_status)) {
    return $result->js_optimization_status;
  }
}
