<?php

/**
 * @file
 * Contains ssp_idp.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function ssp_idp_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ssp_idp module.
    case 'help.page.ssp_idp':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module provides the ability make Drupal as IDP using SimpleSamlphp.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_user_login().
 */
function ssp_idp_user_login($account) {
   $login = new \Drupal\ssp_idp\SSPIDP();

   // Get the configuration information from SimpleSAMLphp
   $sspConfig = $login->getConfig();
   
    var_dump($account->id());
    // If we don't have configuration, exit without doing anything
    if (!is_array($sspConfig)) {
      $message = 'Could not use drupalauth , could not get the SimpleSAMLphp configuration.';
      \Drupal::logger('ssp_idp')->notice($message);
      // The least we can do is write something to the watchdog so someone will know what's happening.
      //watchdog('drupalauth4ssp', 'Could not use drupalauth for %name, could not get the SimpleSAMLphp configuration.', array('%name' => $user->name));
      return;
    }

    // Store the authenticated user's uid in the cookie (create a validation hash to ensure nobody tampers with the uid)
    setcookie($sspConfig['cookie_name'], sha1($sspConfig['secretsalt'] . $account->id()) . ':' . $account->id(), 0, $sspConfig['baseurlpath']);
    // if the ReturnTo URL is present, send the user to the URL
    if (isset($_GET['ReturnTo']) && $_GET['ReturnTo']) {
      header('Location: ' . $_GET['ReturnTo']);
      die;
    }
}
