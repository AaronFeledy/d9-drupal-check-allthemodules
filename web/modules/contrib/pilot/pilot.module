<?php

/**
 * @file
 * Contains pilot.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function pilot_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pilot module.
    case 'help.page.pilot':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Pilot is a Drupal backend to help you manage your modules, backups and other Drupal related components.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Get all of the modules and format it to send to Pilot.
 * @return Array
 */
function pilot_module_list() {
  // Load module handler and get list
  $extensions = system_rebuild_module_data();

  $modules = [];

  foreach ($extensions as $extension) {
    // Filter out test modules/themes.
    if (strpos($extension->getPath(), 'tests')) {
      continue;
    }

    // Filter out core
    if ($extension->origin == 'core') {
      continue;
    }

    // Filter out disabled modules
    if ($extension->status !== 1) {
      continue;
    }

    $modules[$extension->getName()] = [
      'version' => @$extension->info['version'],
      'update' => false,
      'security' => false
    ];
  }

  return $modules;
}

/**
 * Get the Drupal core version.
 * @return String
 */
function pilot_core_version() {
  return \Drupal::VERSION;
}

/**
 * Implements hook_cron().
 *
 * Every day (once) we send a dump of this sites enabled modules
 * and their versions to Pilot backend.
 */
function pilot_cron() {
  // We access our configuration.
  $pilot_config = \Drupal::configFactory()->getEditable('pilot.settings');

  if (empty($pilot_config->get('pilot.token'))) {
    return;
  }

  // Send modules every day
  $interval = 86400;

  // Determine what the next execution time is
  $next_execution = \Drupal::state()->get('pilot.next_execution');
  $next_execution = !empty($next_execution) ? $next_execution : 0;
  if (REQUEST_TIME >= $next_execution) {
    // If we have passed our time (an entire day) rerun module send.
    $modules = pilot_module_list();
    $core = pilot_core_version();

    $response = \Drupal::httpClient()
      ->post('https://drupalpilot.com/api/site?api_token=' . $pilot_config->get('pilot.token'), [
        'body' => json_encode([
          'domain' => \Drupal::request()->getHost(),
          'modules' => $modules,
          'core_version' => $core
        ]),
        'headers' => [
          'Accept' => 'application/json',
          'Content-Type' => 'application/json'
        ]
      ]);

    // Log details in watchdog
    \Drupal::logger('pilot')->notice('Module dump has been sent to Pilot.');
    \Drupal::state()->set('pilot.next_execution', REQUEST_TIME + $interval);
  }
}
