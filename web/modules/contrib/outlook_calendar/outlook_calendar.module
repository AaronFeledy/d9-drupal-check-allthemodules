<?php

/**
 * @file
 * Displays the outlook calendar events.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

module_load_include('inc', 'outlook_calendar', 'outlook_calendar.auth');

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function outlook_calendar_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.outlook_calendar':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Outlook Calendar module is used to fetch Outlook Calendar events
        and display them in a block. This block can be configured and displayed like a normal drupal
        block.') . '</p>';
      $output .= '<h3>' . t('Configuration') . '</h3>';
      $output .= '<dt>' . t('Adding Outlook Account') . '</dt>';
      $output .= '<dd>' . t('Outlook Account can be configured on the <a href=":accounts">Outlook Accounts</a>
        page.', [':accounts' => Url::fromRoute('outlook_calendar.account')->toString()]
       ) . '</dd>';
      $output .= '<dt>' . t('View Outlook Events') . '</dt>';
      $output .= '<dd>' . t('Outlook Events of the configured accounts can be viewed on <a href=":events">
        Outlook Calendar</a> page.', [':events' => Url::fromRoute('outlook_calendar.form')->toString()]
       ) . '</dd>';
      return $output;
  }
}

/**
 * Returns the dates within date range().
 */
function outlook_calendar_date_range($first, $last, $step = '+1 day', $output_format = 'Y-m-d') {

  $dates = [];
  $current = strtotime($first);
  $last = strtotime($last);

  while ($current <= $last) {
    $dates[] = date($output_format, $current);
    $current = strtotime($step, $current);
  }

  return $dates;
}

/**
 * Returns the date range().
 */
function outlook_calendar_week_range($date) {
  $ts = strtotime($date);
  $start = (date('w', $ts) == 0) ? $ts : strtotime('now', $ts);
  return [
    date('c', $start),
    date('c', strtotime('next month', $start)),
  ];
}

/**
 * Returns the outlook calendar().
 */
function outlook_calendar_display($range = '+7day') {
  list($start_date, $end_date) = outlook_calendar_week_range(date('Y-m-d H:i:s'));
  $dates = outlook_calendar_date_range($start_date, $end_date);
  $outlook_calendar_accounts = outlook_calendar_accounts();
  $scheduler = [];
  $i = 0;
  foreach ($outlook_calendar_accounts as $account) {
    $events = outlook_calendar_list($account);
    foreach ($events as $event) {
      if (!empty($event)) {
        $start = $event->Start;
        $end = $event->End;
        $subject = $event->Subject;
        $location = $event->Location;
        $organizer = $event
          ->Organizer
          ->Mailbox->Name;
        if (in_array(date('Y-m-d', strtotime($start)), $dates)) {
          date_default_timezone_set('Asia/Kolkata');
          $scheduler[$i]['title'] = $subject;
          $scheduler[$i]['organizer'] = $organizer;
          $scheduler[$i]['location'] = $location;
          $scheduler[$i]['start_ist'] = date('Y-m-d H:i:s', strtotime($start));
          $scheduler[$i]['end_ist'] = date('Y-m-d H:i:s', strtotime($end));
          $i++;
        }
      }
    }

  }
  return $scheduler;
}

/**
 * Returns the outlook accounts().
 */
function outlook_calendar_accounts() {
  $query = \Drupal::database()->select('outlook_calendar', 'oe');
  $query->fields('oe', ['uid', 'mail', 'password']);
  $results = $query->execute()
    ->fetchAll();
  return $results;
}

/**
 * Returns the  range().
 */
function outlook_calendar_account_list() {
  // Select outlook id from table.
  $query = \Drupal::database()->select('outlook_calendar', 'oe');
  $query->fields('oe', ['id', 'mail']);
  $results = $query->execute()
    ->fetchAll();
  $rows = [];
  foreach ($results as $data) {
    $delete = Url::fromUserInput('/admin/config/services/outlook-account/form/delete/' . $data->id);
    $edit = Url::fromUserInput('/admin/config/services/outlook-account/form/edit/?num=' . $data->id);
    // Print the data from table.
    $rows[] = [
      'id' => $data->id,
      'mail' => $data->mail,
      'opt' => \Drupal::l('Edit', $edit) ,
      'opt1' => \Drupal::l('Delete', $delete) ,
    ];
  }
  return $rows;
}
