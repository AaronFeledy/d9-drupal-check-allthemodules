<?php

/**
 * @file
 * Containers cision_feed.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_feeds_after_save().
 */
function cision_feed_feeds_after_save(FeedsSource $source, $entity, $item, $entity_id) {
  if ($entity->feeds_item->entity_type == 'node') {
    if (isset($item['tid'])) {
      $tid = \Drupal::database()->query('SELECT entity_id FROM {feeds_item} WHERE guid = :guid', [
        ':guid' => $item['tid'],
      ])->fetch(PDO::FETCH_COLUMN);
      $entity->tnid = $tid;
      node_save($entity);
    }
  }
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function cision_feed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.cision_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.txt");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
