<?php

/**
 * @file
 * Drupal Module: Acquia Content Hub - Publisher.
 *
 * Publisher exports content from your Drupal site to Content Hub services.
 */

use Drupal\acquia_contenthub_publisher\ContentHubPublisherEvents;
use Drupal\acquia_contenthub_publisher\Event\ContentHubEntityEligibilityEvent;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_insert().
 *
 * @throws \Exception
 */
function acquia_contenthub_publisher_entity_insert(EntityInterface $entity) {
  _acquia_contenthub_publisher_enqueue_entity($entity, 'insert');
}

/**
 * Implements hook_entity_update().
 *
 * @throws \Exception
 */
function acquia_contenthub_publisher_entity_update(EntityInterface $entity) {
  _acquia_contenthub_publisher_enqueue_entity($entity, 'update');
}

/**
 * Implements hook_entity_delete().
 *
 * @throws \Exception
 */
function acquia_contenthub_publisher_entity_delete(EntityInterface $entity) {
  $uuid = $entity->uuid();
  if (!$uuid) {
    return;
  }
  /** @var \Drupal\acquia_contenthub\ContentHubCommonActions $common */
  $common = \Drupal::service('acquia_contenthub_common_actions');
  try {
    $common->deleteRemoteEntity($uuid);
  }
  catch (\Exception $e) {
    \Drupal::logger('acquia_contenthub')->error('@error_message', ['@error_message' => $e->getMessage()]);
  }
}

/**
 * Enqueues candidate entities for publishing.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity to enqueue to ContentHub.
 * @param string $op
 *   Operation.
 *
 * @throws \Exception
 */
function _acquia_contenthub_publisher_enqueue_entity(EntityInterface $entity, $op) {
  $event = new ContentHubEntityEligibilityEvent($entity, $op);
  /** @var \Symfony\Component\EventDispatcher\EventDispatcherInterface $dispatcher */
  $dispatcher = \Drupal::service('event_dispatcher');
  $dispatcher->dispatch(ContentHubPublisherEvents::ENQUEUE_CANDIDATE_ENTITY, $event);
  if ($event->getEligibility()) {
    /** @var \Drupal\Core\Queue\QueueFactory $queue_factory */
    $queue_factory = \Drupal::service('queue');
    $queue = $queue_factory->get('acquia_contenthub_publish_export');
    $item = new \stdClass();
    $item->type = $entity->getEntityTypeId();
    $item->uuid = $entity->uuid();
    $queue->createItem($item);
    /** @var \Drupal\acquia_contenthub_publisher\PublisherTracker $tracker */
    $tracker = \Drupal::service('acquia_contenthub_publisher.tracker');
    $tracker->queue($entity);
  }
}
