<?php
/**
 * @file
 * Install, update, and uninstall functions for the Haystack module.
 */

use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_uninstall().
 */
function haystack_uninstall() {
  // Drupal::configFactory()->getEditable('haystack.settings')->delete();
  Drupal::configFactory()->getEditable('image.style.haystack_thumb')->delete();
}

/**
 * Get configuration 'client_hash' from previously stored 'client_link'.
 */
function haystack_update_8101() {
  $haystack = \Drupal::service('haystack.core');

  // Like es1.haystack.menu/SomeHash/_search.
  $client_link = $haystack->getSetting('client_link');
  $tokens = explode('/', $client_link);
  $client_hash = $tokens[1];
  if (!empty($client_hash)) {
    $haystack->setSetting('client_hash', $client_hash);
  }
}

/**
 * Add new Haystack menu for quick links.
 */
function haystack_update_8102() {
  $haystack = \Drupal::service('haystack.core');

  // Set the default option fo the menu.
  $quick_links = $haystack->getSetting('quick_links');
  if (empty($quick_links)) {
    $haystack->setSetting('quick_links_menu', 'none');
  }
  else {
    $haystack->setSetting('quick_links_menu', 'custom');
  }

  // Create the new Haystack menu.
  $configName = 'system.menu.haystack';
  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
  $active_storage = \Drupal::service('config.storage');
  if (!$active_storage->exists($configName)) {
    $source = new FileStorage(__DIR__ . '/config/install');
    $active_storage->write($configName, $source->read($configName));
  }

}
