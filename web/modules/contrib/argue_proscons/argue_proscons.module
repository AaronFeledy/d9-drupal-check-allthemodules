<?php

/**
 * @file
 * Contains argue_proscons.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function argue_proscons_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the argue_proscons module.
    case 'help.page.argue_proscons':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a subentity list with arguments for a rule represented by a node.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function argue_proscons_theme() {
  return [
    'argument' => [
      'render element' => 'content',
    ],
    'argument__teaser' => [
      'render element' => 'content',
    ],
    'argue_proscons' => [
      'render element' => 'children',
    ],
  ];
}


/**
 * Implements hook_theme_suggestions_HOOK().
 */
function argue_proscons_theme_suggestions_argument(array $variables) {
  $suggestions = [];
  $sanitized_view_mode = strtr($variables['content']['#view_mode'], '.', '_');

  $suggestions[] = 'argument__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Prepares variables for Argument templates.
 *
 * Default template: argument.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - content: An associative array containing the user information and any
 *   - attributes: HTML attributes for the containing element.
 */
function argue_proscons_argument_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  if ($build['#view_mode'] == 'teaser' && isset($build['votingapi_links'])) {
    // add library
    if (!isset($build['#attached']['library'])) {
      $build['#attached']['library'] = [];
    }
    $build['#attached']['library'][] = 'argue_proscons/proscons.teaser';

    // move voting widget to own region.
    $build['voting'] = [
      '#type' => 'container',
      '#weight' => 10,
      '#attributes' => ['class' => ['voting']],
      '#tree' => TRUE,
      '#access' => TRUE,
      'votingapi_links' => $build['votingapi_links'],
    ];
    $build['voting']['votingapi_links']['#group'] = 'voting';
    unset($build['votingapi_links']);

    /* @todo find better way as unset pre_render, problem: items come back in content. */
    unset($build['#pre_render']);
  }

}
