<?php

use Drupal\mcapi\Entity\Wallet;
use Drupal\mcapi\Storage\WalletStorage;
use Drupal\Core\Url;

/**
 * Implements hook_entity_extra_field_info().
 */
function cforge_entity_extra_field_info() {
  return [
    'smallad' => [
      'offer' => [
        'display' => [
          'transact' => [
            'label' => 'Link to credit form',
            'weight' => 10,
            'visible' => TRUE
          ]
        ]
      ],
      'want' => [
        'display' => [
          'transact' => [
            'label' => 'Link to billing form',
            'weight' => 10,
            'visible' => TRUE,
          ]
        ]
      ]
    ]
  ];
}


/**
 * Implements hook_ENTITY_TYPE_view().
 *
 * Adds a link to the smallad to jump to a prefilled payment form. This link,
 * since it uses url query parameters, doesn't have access control as part of
 * the route so this function only shows the link when needed.
 */
function smallads_mcapi_smallad_view(&$build, $entity, $display, $view_mode) {
  $current_user = \Drupal::currentUser();
  if ($display->getComponent('transact') and $entity->getOwnerId() != $current_user->id()) {
    $my_wallets = WalletStorage::walletsOf($current_user);
    if ($wids = WalletStorage::walletsOf($entity->getOwner())) {
      $form_displays = mcapi_form_displays_load();
      $query = [
        'description' => $entity->title->value,
      ];
      $query['category'] = $entity->categories->getValue()[0]['target_id'];
      $account = \Drupal::currentUser();
      $accessManager = \Drupal::accessManager();
      foreach ($wids as $wid) {
        if ($entity->bundle() == 'offer') {
          $query['payee'] = $wid;
          $query['payer'] = reset($my_wallets);
        }
        elseif ($entity->bundle() == 'want') {
          $query['payer'] = $wid;
          $query['payee'] = reset($my_wallets);
        }
        $wallet = Wallet::load($wid);
        foreach ($form_displays as $form_id => $form_display) {
          $settings = $form_display->getThirdPartySettings('mcapi_forms');
          if ($walletLinkTitle = $settings['wallet_link_title']) {
            // Get the route from the path, so we can check access.
            $url = Url::fromUserInput($settings['path'], ['query' => $query]);
            $name = $url->getRouteName();
            $params = $url->getRouteParameters();
            if ($accessManager->checkNamedRoute($name, $params, $account, FALSE)) {
              $build['links']['#links']['transact_' . $form_id] = [
                'title' => wallet_link_title($wallet, $walletLinkTitle),
                'url' => $url,
              ];
            }
          }
        }
      }
    }
  }
}
