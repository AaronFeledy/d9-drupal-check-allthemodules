<?php
/**
 * @file
 * Installation hooks for Miro Simple Sitemap module.
 */

/**
 * Implements hook_install().
 */
function micro_simple_sitemap_install() {
  /** @var \Drupal\micro_simple_sitemap\MicroSimpleSitemapManagerInterface $microSitemapManager */
  $microSimpleSitemapManager = \Drupal::service('micro_simple_sitemap.manager');
  $entityTypeManager = \Drupal::entityTypeManager();
  $sites = $entityTypeManager->getStorage('site')->loadMultiple();
  /** @var \Drupal\micro_site\Entity\SiteInterface $site */
  foreach ($sites as $site) {
    $sitemap_variants = $microSimpleSitemapManager->getSitemapVariants('micro_site');
    $variant_name = $microSimpleSitemapManager->getVariantName($site);
    if (!isset($sitemap_variants[$variant_name])) {
      $microSimpleSitemapManager->createSitemapVariant($site);
    }
    if ($site->isPublished()) {

    }
  }
}

/**
 * Create variants for existing micro site.
 */
function micro_simple_sitemap_update_8301() {
  /** @var \Drupal\micro_simple_sitemap\MicroSimpleSitemapManagerInterface $microSitemapManager */
  $microSimpleSitemapManager = \Drupal::service('micro_simple_sitemap.manager');
  $entityTypeManager = \Drupal::entityTypeManager();
  $sites = $entityTypeManager->getStorage('site')->loadMultiple();
  /** @var \Drupal\micro_site\Entity\SiteInterface $site */
  foreach ($sites as $site) {
    $sitemap_variants = $microSimpleSitemapManager->getSitemapVariants('micro_site');
    $variant_name = $microSimpleSitemapManager->getVariantName($site);
    if (!isset($sitemap_variants[$variant_name])) {
      $microSimpleSitemapManager->createSitemapVariant($site);
    }
    if ($site->isPublished()) {

    }
  }
}
