<?php
/**
 * @file
 * Drupal Module: SnapEngage.
 *
 * Adds the required Javascript to the bottom of all your Drupal pages
 * to add the SnapEngage widget.
 *
 * Code heavily inspired by the Google Analytics module,
 * http://drupal.org/project/google_analytics.
 */

use Drupal\Component\Utility\Unicode;
use Drupal\Core\Path\PathMatcher;
use Drupal\Core\Url;
use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Language\LanguageManagerInterface;
use Drupal\language\ConfigurableLanguageManagerInterface;
use Drupal\user\Plugin\LanguageNegotiation\LanguageNegotiationUser;
use Drupal\user\Plugin\LanguageNegotiation\LanguageNegotiationUserAdmin;
use Drupal\Core\Site\Settings;
use Drupal\Core\Session\AccountInterface;
use Drupal\user\Entity\User;
use Drupal\user\Entity\Role;
use Drupal\user\UserData;


/**
 * Implements hook_page_attachemnts_alter().
 */
function snapengage_page_attachments_alter(array &$page) {
  $enabled = FALSE;
  // Get roles array, that are enabled in the snapengage settings page.
  $roles_enabled = \Drupal::config('snapengage.settings')->get('snapengage_roles');
  // Get roles array of current user.
  $users_roles = \Drupal::currentUser()->getRoles();
  /**
   * Function to check if any roles enabled.
   * If enabled not 0.
   */
  function any_roles_enabled($array, $predicate) {
    return array_filter($array, $predicate) === $array;
  }

  // Check if any values of $roles_enabled is other than 0.
  // If yes, rolespecific settings enabled.
  if (!any_roles_enabled($roles_enabled, 'is_int')) {
    if (array_intersect($roles_enabled, $users_roles)) {
      $enabled = TRUE;
    }
  }
  else {
    // No roles selected for tracking, therefor the widget should be
    // visible for all roles.
    $enabled = TRUE;
  }
  static $page_match;

  if (\Drupal::config('snapengage.settings')->get('snapengage_widget_language') == 'user') {
    $default_language = \Drupal::currentUser()->getPreferredLangcode();
  }
  elseif (\Drupal::config('snapengage.settings')->get('snapengage_widget_language') == 'default') {
    $default_language = \Drupal::LanguageManager()->getDefaultLanguage()->getId();
  }
  else {
    $default_language = 'en';
  }

  // Cache visibility setting in hook_init for hook_footer.
  if (!isset($page_match)) {
    // Visibility is defined by either 0 (except this path) and 1 (listed paths only).
    $visibility = \Drupal::config('snapengage.settings')->get('snapengage_visibility');
    $pages = Unicode::strtolower(\Drupal::config('snapengage.settings')->get('snapengage_pages'));

    $path = Url::fromRoute('<current>')->toString();
    $path_alias = Unicode::strtolower(\Drupal::service('path.alias_storage')->lookupPathAlias($path, 'en'));
    $page_match = \Drupal::service('path.matcher')->matchPath($path_alias, $pages);
    if ($path_alias != $path) {
      $page_match = $page_match || \Drupal::service('path.matcher')->matchPath($path, $pages);
    }
    $page_match = (!$page_match && !$visibility) || ($page_match && $visibility);
  }

  if ($enabled == TRUE && $page_match == TRUE) {
    $page['#attached']['library'][] = 'snapengage/snapengage';
    $page['#attached']['drupalSettings']['snapengage']['snapengage']['widget_id'] = \Drupal::config('snapengage.settings')->get('snapengage_widget_id');
    $page['#attached']['drupalSettings']['snapengage']['snapengage']['default_language'] = $default_language;

  }
}
