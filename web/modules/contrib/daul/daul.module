<?php

/**
 * @file
 * Enable feature which helps to upload unique logo for each domain.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\domain\Entity\Domain;
use Drupal\file\Entity\File;

/**
 * Implements hook_help().
 */
function daul_help($route_name, RouteMatchInterface $route_match) {
  $output = '';
  switch ($route_name) {
    case 'help.page.daul':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Enable utility to upload unique logo for each domain.') . '</p>';
      $output .= '<p>' . t('You can read more in the <a href="@readme">readme</a> file or our <a href="@project">project page on Drupal.org</a>.', [
        '@readme' => $GLOBALS['base_url'] . '/' . drupal_get_path('module', 'daul') . '/README.txt',
        '@project' => 'https://drupal.org/project/daul',
      ]) . '</p>';

      break;

    default:
  }
  return $output;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function daul_form_domain_edit_form_alter(&$form, FormStateInterface $form_state) {

  $domain = $form_state->getFormObject()->getEntity();
  $form['domain_logo'] = [
    '#title' => 'Domain logo',
    '#type' => 'managed_image',
    '#default_value' => $domain->getThirdPartySetting('daul', 'domain_logo'),
    '#description' => t('Uploaded image can render using domain_logo variable in template'),
    '#upload_location' => 'public://domain_logo/',
    '#multiple' => FALSE,
    '#upload_validators' => [
      'file_validate_extensions' => ['png gif jpg jpeg'],
      'file_validate_size' => [25600],
    ],
  ];
  $form['#entity_builders'][] = 'daul_form_domain_add_form_builder';
  $form['actions']['submit']['#submit'][] = 'daul_form_domain_submit';

}

/**
 * Entity builder for the menu configuration entity.
 */
function daul_form_domain_add_form_builder($entity_type, Domain $domain, &$form, FormStateInterface $form_state) {
  if ($form_state->getValue('domain_logo')) {
    $domain->setThirdPartySetting('daul', 'domain_logo', $form_state->getValue('domain_logo'));
    return;
  }
  $domain->unsetThirdPartySetting('daul', 'domain_logo');
}

/**
 * Implements hook_form_submit().
 */
function daul_form_domain_submit($form, FormStateInterface $form_state) {
  if (reset($form_state->getValue('domain_logo'))) {
    _daul_set_permanent(reset($form_state->getValue('domain_logo')));
    return;
  }
  _daul_file_delete();
}

/**
 * Helper function to save logo as permanent.
 */
function _daul_set_permanent($domain_logo = NULL) {
  if (!empty($domain_logo)) {
    $file = File::load($domain_logo);
    $file->setPermanent();
    $file->save();
    $file_usage = \Drupal::service('file.usage');
    $file_usage->add($file, 'daul', 'domain', $domain_logo);
  }
}

/**
 * Helper function to delete logo as permanent.
 */
function _daul_file_delete() {
  $loader = \Drupal::service('domain.negotiator');
  $current_domain = $loader->getActiveDomain();
  $domain_logo_id = $current_domain->getThirdPartySetting('daul', 'domain_logo');
  $fid = is_array($domain_logo_id) ? reset($domain_logo_id) : NULL;
  if (!empty($fid)) {
    $file = File::load($fid);
    $file_usage = \Drupal::service('file.usage');
    $file_usage->listUsage($file);
    $file_usage->delete($file, 'daul', 'domain', $fid, 0);
    file_delete($fid);
  }
}

/**
 * Implements hook_preprocess_page() for page templates.
 */
function daul_preprocess_page(&$variables) {
  $loader = \Drupal::service('domain.negotiator');
  $current_domain = $loader->getActiveDomain();
  $domain_logo_id = $current_domain->getThirdPartySetting('daul', 'domain_logo');
  if (isset($domain_logo_id)) {
    $file = File::load(reset($domain_logo_id));
    if ($file) {
      $variables['domain_logo'] = file_create_url($file->getFileUri());
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function daul_preprocess_block(&$variables) {
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      $loader = \Drupal::service('domain.negotiator');
      $current_domain = $loader->getActiveDomain();
      $domain_logo_id = $current_domain->getThirdPartySetting('daul', 'domain_logo');
      if (isset($domain_logo_id)) {
        $file = File::load(reset($domain_logo_id));
        if ($file) {
          $file_path = file_create_url($file->getFileUri());
          $variables['content']['site_logo']['#uri'] = $file_path;
        }
      }
      break;
  }
}
