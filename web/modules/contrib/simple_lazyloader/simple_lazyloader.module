<?php

/**
 * @file
 * BEE Lazyloader module.
 */

/**
 * Implements hook_page_attachments().
 */
function simple_lazyloader_page_attachments(array &$attachments) {
  // Check if the lazyloader is activated in order to attach the js library.
  $config = \Drupal::config('simple_lazyloader.settings');
  $is_activated = $config->get('lazyloader_settings')['is_activated'];
  if ($is_activated) {
    $attachments['#attached']['library'][] = 'simple_lazyloader/lazyloader';
  }
}

/**
 * Implements hook_preprocess_image().
 */
function simple_lazyloader_preprocess_image(&$variables) {
  if (!empty($variables['attributes']['class']) && in_array('lazy', $variables['attributes']['class'])) {
    $src = $variables['attributes']['src'];
    $variables['attributes']['data-original'][] = $src;
  }
}

/**
 * Implements hook_preprocess_field().
 */
function simple_lazyloader_preprocess_field(&$variables) {
  $themes = [
    'image_formatter',
    'media',
  ];
  foreach ($variables['items'] as $key => $item) {
    if (!empty($item['content']['#theme']) && in_array($item['content']['#theme'], $themes)) {

      // Check if the bundle is allowed for lazyloading.
      $config = \Drupal::config('simple_lazyloader.settings');
      $is_activated = $config->get('lazyloader_settings')['is_activated'];
      $all_configs = $config->get('lazyloader_settings');

      // Check if the Lazyload is activated from the settings page.
      if ($is_activated) {
        if ($all_configs['activated_for_all'] == 1) {
          $variables['items'][$key]['content']['#item_attributes']['class'][] = 'lazy';
        }
        else {
          $bundle = !empty($variables['element']['#bundle']) ? $variables['element']['#bundle'] : '';
          if (!empty($all_configs[$bundle]) && $all_configs[$bundle] == 1) {
            $variables['items'][$key]['content']['#item_attributes']['class'][] = 'lazy';
          }
        }
      }
    }
  }
}
