<?php

/**
 * @file
 * Module file for Past Test hidden.
 */

/**
 * Implements hook_init().
 */
function past_testhidden_init() {
  // E_STRICT is not part of E_ALL on PHP 5.3 and earlier, make sure
  // that they are logged and reported.
  error_reporting(E_ALL | E_STRICT);
}

/**
 * Implements hook_menu().
 */
function past_testhidden_menu() {
  $items['past_trigger_error'] = [
    'title' => 'Past test errors',
    'description' => 'should never be visible',
    'page callback' => 'past_testhidden_errors',
    'access callback' => TRUE,
  ];
  $items['past_trigger_error/%'] = [
    'title' => 'Past test hidden',
    'description' => 'should never be visible',
    'page callback' => 'past_testhidden_trigger_error',
    'page arguments' => [1],
    'access callback' => TRUE,
  ];
  return $items;
}

/**
 * List existing error cases.
 */
function past_testhidden_errors() {
  return [
    '#theme' => 'links',
    '#links' => [
      ['href' => 'past_trigger_error/E_ERROR', 'title' => 'E_ERROR'],
      ['href' => 'past_trigger_error/E_WARNING', 'title' => 'E_WARNING'],
      ['href' => 'past_trigger_error/E_COMPILE_ERROR', 'title' => 'E_COMPILE_ERROR'],
      ['href' => 'past_trigger_error/E_COMPILE_WARNING', 'title' => 'E_COMPILE_WARNING'],
      ['href' => 'past_trigger_error/E_DEPRECATED', 'title' => 'E_DEPRECATED'],
      ['href' => 'past_trigger_error/E_NOTICE', 'title' => 'E_NOTICE'],
      ['href' => 'past_trigger_error/E_PARSE', 'title' => 'E_PARSE'],
      ['href' => 'past_trigger_error/E_RECOVERABLE_ERROR', 'title' => 'E_RECOVERABLE_ERROR'],
      ['href' => 'past_trigger_error/E_STRICT', 'title' => 'E_STRICT'],
      ['href' => 'past_trigger_error/E_STRICT_parse', 'title' => 'E_STRICT during file parsing'],
      ['href' => 'past_trigger_error/Exception', 'title' => 'Exception'],
    ],
  ];
}

/**
 * Past backend factory function that does not return an instance.
 *
 * Used to test the null fallback and requirements check.
 */
function past_testhidden_create_broken_event() {

}
