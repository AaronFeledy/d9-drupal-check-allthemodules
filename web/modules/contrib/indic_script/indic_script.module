<?php

/**
 * @file
 * Contains indic_script.module.
 */
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 */
function indic_script_theme() {
  $theme = [];
  return $theme;
}

/**
 * Implementation of hook_element_info_alter().
 *
 * Add the attributes to textfield, textareas and body fields.
 */
function indic_script_element_info_alter(&$types) {
  $types['textfield']['#pre_render'][] = 'indic_script_process_text_format';
  $types['text_format']['#pre_render'][] = 'indic_script_process_text_format';
  $types['textarea']['#pre_render'][] = 'indic_script_process_text_format';
  $types['search']['#process'][] = 'indic_script_process_text_format'; 
}


/**
 * Helper function.
 *
 * @param $element
 *   A fully populated form element to add the editor to
 * @return
 *   The same $element with extra indic_script markup and initialization.
 */
function indic_script_process_text_format($element) {  

  // Skip disabled text fields.
  if (isset($element['#attributes']['disabled']) && $element['#attributes']['disabled'] == 'disabled') {
    return $element;
  }
  
  // Disable for these elements.
  // TODO: move this to admin configure form?
  switch ($element['#id']) {
    case 'edit-excl-list':
    case 'edit-simple-incl-list':
    case 'edit-simple-incl-paths':
    case 'edit-simple-incl-fields':
    case 'edit-excl-fields':
    case 'edit-excl-paths':
    case 'edit-js-conf':
    case 'indic_script_excl_fields':
    case 'edit-pass':
    case 'edit-openid-identifier':
    case 'edit-mail':
    case 'edit-captcha':
      return $element;
      break;
  }

  if(!_indic_script_element_check($element['#id'])) {
    return $element;
  }
  
  // Add the kanni-enabled class so kanni will bind the key events.
  $element['#attributes']['class'][]  = 'kanni-enabled';

  return $element;
}

function indic_script_page_attachments_alter(array &$page) {

  if ((!_indic_script_path_check())) {
    return;
  }
  
  $page['#attached']['library'][] = 'indic_script/drupal.indic_script';

  $langs = indic_script_get_languages('lang');
  $enabled_langs = \Drupal::config('indic_script.settings')->get('indic_script_langs');
	$enabled = array();
  foreach ($langs as $lang) {
    if (isset($enabled_langs[$lang['method']]) && $enabled_langs[$lang['method']]) {
		$enabled[$lang['lang_name']]['methods'][$lang['method']] = $lang['title'];
      switch($lang['method']) {
        case 'ta_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ta_en';
          break;

        case 'ta_99':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ta_99';
          break;

        case 'ta_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ta_tw';
          break;

        case 'ma_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ma_en';
          break;

        case 'ma_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ma_tw';
          break;

        case 'hi_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.hi_en';
          break;

        case 'hi_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.hi_tw';
          break;

        case 'hi_tw_re':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.hi_tw_re';
          break;

        case 'be_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.be_en';
          break;

        case 'be_unijoy':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.be_unijoy';
          break;

        case 'be_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.be_tw';
          break;

        case 'gu_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.gu_en';
          break;

        case 'gu_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.gu_tw';
          break;

        case 'ka_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ka_en';
          break;

        case 'ka_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.ka_tw';
          break;

        case 'or_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.or_en';
          break;

        case 'or_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.or_tw';
          break;

        case 'pu_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.pu_en';
          break;

        case 'pu_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.pu_tw';
          break;

        case 'te_en':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.te_en';
          break;

        case 'te_tw':
          $page['#attached']['library'][] = 'indic_script/drupal.indic_script.te_tw';
        break;
      }	 
    } 
  }
  // Conditionally attach an asset to the page.
	if(!empty($enabled)) {
    $page['#attached']['drupalSettings']['kanniConfig']['enabledLanguages'] = $enabled;	
	}

}

/**
 * indic_script_select_form
 * @return
 *   elect_form
 */
 
function indic_script_type_method_form() {
  static $options;	
  if (!$options) {
    $langs = indic_script_get_languages('lang');
    $enabled_langs = \Drupal::config('indic_script.settings')->get('indic_script_langs');
    $options['en'] = t('English');
    foreach ($langs as $lang) {
      if (isset($enabled_langs[$lang['method']]) && $enabled_langs[$lang['method']]) {
	      $options[$lang['method']] = $lang['title'];
      }
    }
  }

  $cook_lang = 'en';
  
  if(isset($_COOKIE['kanni_user_lang']) && $_COOKIE['kanni_user_lang'] && isset($options[$cook_lang])) {
    $cook_lang = $_COOKIE['kanni_user_lang'];
  }
  
  $form['indic_script_typein'] = array(
    '#type' => 'select',
    '#title' => t('Type in (F9)'),
    '#options' => $options,
    '#default_value' => $cook_lang,
    '#weight' => 0,
    '#attributes' => array(
      'onchange' => 'Kanni.change_lang(this);'
    ),
  );
  
  $form['indic_script_show_tips'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show Tips?'),
    '#default_value' => TRUE,
  );
  
  return $form;  
}

/**
 * This function helper function.
 *
 */
function _indic_script_path_check() {

  static $visible;
  
  if (isset($visible) && $visible !='') {
    return $visible;
  }

  $excl_mode = \Drupal::config('indic_script.settings')->get('indic_script_page_excl_mode');

  $excl_paths = \Drupal::config('indic_script.settings')->get('indic_script_excl_paths');
 
  if ($excl_mode < 2) {
    $path = \Drupal::service('path.current')->getPath(); 
    //Compare with the internal and path alias (if any).	
		$page_match = \Drupal::service('path.matcher')->matchPath($path,$excl_paths);	
    		
    if ($excl_mode == 1 && $page_match) {
      $visible = TRUE;
    }
    else if ($excl_mode == 0 && !$page_match) {
      $visible = TRUE;
    } else {
      $visible = FALSE;
    }
  } else {
    $visible = drupal_eval($excl_paths);
  }

  return $visible;
}

/**
 * This function helper function.
 *
 */
function _indic_script_element_check($element_id) {

  $path_found = _indic_script_path_check();

  // path is the first priority
  if (!$path_found) {
    return $path_found;
  }

  static $excl_mode, $excl_fields, $excl_paths;

  if(!isset($excl_mode)) {
    $excl_mode = \Drupal::config('indic_script.settings')->get('indic_script_excl_mode'); //if not default 0
  }
  if(!isset($excl_fields)) {
    $excl_fields = \Drupal::config('indic_script.settings')->get('indic_script_excl_fields');
  }
  if(!isset($excl_paths)) {
    $excl_paths = \Drupal::config('indic_script.settings')->get('indic_script_excl_paths');
  }

  $arr_excl_fields = preg_split("/[\s,]+/", strip_tags($excl_fields));

  $field_found = _indic_script_element_id_check($element_id, $arr_excl_fields);

  $result =  ($excl_mode == 1) ? $field_found : !$field_found;

  return $result;

}

/**
 * This function helper function
 *
 */
function _indic_script_element_id_check($search, $array) {
  foreach ($array as $key => $value) {
    if (!empty($value) && preg_match('/^'. str_replace('*', '.*', addslashes($value)) .'$/i', $search)) {
      return true;
    }
  }
  return false;
}

/**
 * Implementation of indic_script_api.
 *
 */
function indic_script_get_languages($op) {

  $path = drupal_get_path('module', 'indic_script');

  switch($op) {
    case 'lang':
      $lang[] = array(
			  'lang_name' => 'tamil',	
	      'lang' 	=> 'ta',
	      'method' 	=> 'ta_en',
	      'title' => 'Tamil Thanglish',
	      'js' => $path . '/kanni/lang/' . 'tamil.js',
      );

      $lang[] = array(
			  'lang_name' => 'tamil',
	      'lang' 	=> 'ta',
	      'method' 	=> 'ta_99',
	      'title' => 'Tamil 99',
	      'js' => $path . '/kanni/lang/' . 'tamil.js',
      );

      $lang[] = array(
			  'lang_name' => 'tamil',
	      'lang' 	=> 'ta',
	      'method' 	=> 'ta_tw',
	      'title' => 'Tamil TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'tamil.js',
      );

      $lang[] = array(
			  'lang_name' => 'malayalam',
	      'lang' 	=> 'ma',
	      'method' 	=> 'ma_en',
	      'title' => 'Malayalam Phonetic',
	      'js' => $path . '/kanni/lang/' . 'malayalam.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'malayalam',
	      'lang' 	=> 'ma',
	      'method' 	=> 'ma_tw',
	      'title' => 'Malayalam TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'malayalam.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'hindi',
	      'lang' 	=> 'hi',
	      'method' 	=> 'hi_en',
	      'title' => 'Hindi Phonetic',
	      'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'hindi',
	      'lang' 	=> 'hi',
	      'method' 	=> 'hi_tw',
	      'title' => 'Hindi TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'hindi',
	      'lang' 	=> 'hi',
	      'method' 	=> 'hi_tw_re',
	      'title' => 'Hindi Remington TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'hindi.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'bengali',
	      'lang' 	=> 'be',
	      'method' 	=> 'be_en',
	      'title' => 'Bengali Phonetic',
	      'js' => $path . '/kanni/lang/' . 'bengali.js',
      );

      $lang[] = array(
			  'lang_name' => 'bengali',
	      'lang' 	=> 'be',
	      'method' 	=> 'be_unijoy',
	      'title' => 'Bengali unijoy',
	      'js' => $path . '/kanni/lang/' . 'bengali.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'bengali',
	      'lang' 	=> 'be',
	      'method' 	=> 'be_tw',
	      'title' => 'Bengali TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'bengali.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'gujarati',
	      'lang' 	=> 'gu',
	      'method' 	=> 'gu_en',
	      'title' => 'Gujarati Phonetic',
	      'js' => $path . '/kanni/lang/' . 'gujarati.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'gujarati',
	      'lang' 	=> 'gu',
	      'method' 	=> 'gu_tw',
	      'title' => 'Gujarati TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'gujarati.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'kannada',
	      'lang' 	=> 'ka',
	      'method' 	=> 'ka_en',
	      'title' => 'Kannada Phonetic',
	      'js' => $path . '/kanni/lang/' . 'kannada.js',
      );

      $lang[] = array(
			  'lang_name' => 'kannada',
	      'lang' 	=> 'ka',
	      'method' 	=> 'ka_tw',
	      'title' => 'Kannada TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'kannada.js',
      );

      $lang[] = array(
			  'lang_name' => 'oriya',
	      'lang' 	=> 'or',
	      'method' 	=> 'or_en',
	      'title' => 'Oriya Phonetic',
	      'js' => $path . '/kanni/lang/' . 'oriya.js',
      );

      $lang[] = array(
			  'lang_name' => 'oriya',
	      'lang' 	=> 'or',
	      'method' 	=> 'or_tw',
	      'title' => 'Oriya TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'oriya.js',
      );

      $lang[] = array(
			  'lang_name' => 'punjabi',
	      'lang' 	=> 'pu',
	      'method' 	=> 'pu_en',
	      'title' => 'Punjabi Phonetic',
	      'js' => $path . '/kanni/lang/' . 'punjabi.js',
      );

      $lang[] = array(
			  'lang_name' => 'punjabi',
	      'lang' 	=> 'pu',
	      'method' 	=> 'pu_tw',
	      'title' => 'Punjabi TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'punjabi.js',
      );
			
      $lang[] = array(
			  'lang_name' => 'telugu',
	      'lang' 	=> 'te',
	      'method' 	=> 'te_en',
	      'title' => 'Telugu Phonetic',
	      'js' => $path . '/kanni/lang/' . 'telugu.js',
      );

      $lang[] = array(
			  'lang_name' => 'telugu',
	      'lang' 	=> 'te',
	      'method' 	=> 'te_tw',
	      'title' => 'Telugu TypeWriter',
	      'js' => $path . '/kanni/lang/' . 'telugu.js',
      );
      return $lang;
  }
}
