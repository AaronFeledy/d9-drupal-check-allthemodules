<?php

/**
 * @file
 * Basic module file for sitesearch_360 module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sitesearch_360_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.sitesearch_360':

      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        $output = '';
        $output .= '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('Provides integration with the Site Search 360 service.') . '</p>';

        return $output;
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);

        return $filter->process($text, 'en');
      }

    default:
      return '';
  }
}

/**
 * Implements hook_element_info_alter().
 */
function sitesearch_360_element_info_alter(array &$types) {
  if (isset($types['search'])) {
    $plugin = sitesearch_360_get_page_plugin();

    if (!$plugin) {
      return;
    }

    $types['search']['#attached']['library'][] = 'sitesearch_360/sitesearch_360.base';

    if ($plugin->enableSuggests()) {
      $types['search']['#attached']['library'][] = 'sitesearch_360/awesomplete';
      $types['search']['#attached']['library'][] = 'sitesearch_360/jquery_throttle_debounce';
      $types['search']['#attached']['library'][] = 'sitesearch_360/sitesearch_360.suggestions';

      $types['search']['#attached']['drupalSettings']['sitesearch_360']['suggests_forms'] = explode(',', $plugin->getConfiguration()['suggests_forms']);
      $types['search']['#attached']['drupalSettings']['sitesearch_360']['suggests_min_chars'] = $plugin->getConfiguration()['suggests_min_chars'];
    }
  }
}

/**
 * Implements hook_preprocess_search_result().
 */
function sitesearch_360_preprocess_search_result(&$variables) {
  if ($variables['plugin_id'] == 'site_search_360') {
    $variables['image'] = $variables['result']['image'];
  }
}

/**
 * Retrieves the instance of the Site Search 360 page plugin.
 *
 * @return \Drupal\sitesearch_360\Plugin\Search\SiteSearch360
 *   The plugin instance.
 */
function sitesearch_360_get_page_plugin() {
  $searchPages = \Drupal::service('search.search_page_repository')->getActiveSearchPages();

  if (isset($searchPages['site_search_360'])) {
    return $searchPages['site_search_360']->getPlugin();
  }
  else {
    return NULL;
  }
}
