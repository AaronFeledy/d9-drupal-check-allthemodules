<?php

/**
 * @file
 * Contains zoom.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_help().
 */
function simple_zoom_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the zoom module.
    case 'help.page.zoom':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Adds lightbox functionality to images') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function simple_zoom_theme() {
  return [
    'zoom' => [
      'render element' => 'children',
    ],
    'zoom_image_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'item_attributes' => NULL,
        'url' => NULL,
        'image_style' => NULL,
      ),
    ),
  ];
}


/**
 * Prepares variables for image formatter templates.
 *
 * Default template: image-formatter.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - item: An ImageItem object.
 *   - item_attributes: An optional associative array of html attributes to be
 *     placed in the img tag.
 *   - image_style: An optional image style.
 *   - url: An optional \Drupal\Core\Url object.
 */
function template_preprocess_zoom_image_formatter(array &$variables) {
  if ($variables['image_style']) {
    $variables['image'] = [
      '#theme' => 'image_style',
      '#style_name' => $variables['image_style'],
    ];
  }
  else {
    $variables['image'] = [
      '#theme' => 'image',
    ];
  }
  $variables['image']['#attributes'] = $variables['item_attributes'];
  $item = $variables['item'];

  // Do not output an empty 'title' attribute.
  if (Unicode::strlen($item->title) != 0) {
    $variables['image']['#title'] = $item->title;
  }

  if (($entity = $item->entity) && empty($item->uri)) {
    $variables['image']['#uri'] = $entity->getFileUri();
  }
  else {
    $variables['image']['#uri'] = $item->uri;
  }
  foreach (['width', 'height', 'alt'] as $item => $key) {
    $variables['image']["#$key"] = $item->$key;
  }
}
