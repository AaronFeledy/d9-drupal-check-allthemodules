<?php

namespace Drupal\Tests\field_wistia\Functional;


use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\node\Entity\Node;
use Drupal\node\Entity\NodeType;
use Drupal\Tests\BrowserTestBase;

class FieldWistiaTest extends BrowserTestBase {

  /**
   * Modules to enable.
   *
   * @var array
   */
  public static $modules = ['node', 'field_wistia', 'field'];

  public function testEmbed() {

    $node = Node::create(['type' => 'page', 'title' => 'test']);
    $node->get('field_wistia')->setValue('https://home.wistia.com/medias/e4a27b971d');
    $node->save();

    // to URL generates url object, if empty default paramter value is canonical (how you view the node)
    $this->drupalGet($node->toUrl());

    $this->assertSession()->pageTextContains('Field Wistia');
    //print_r($this->getSession()->getPage()->getContent());
    $this->assertSession()->elementExists('css', 'iframe.wistia_embed');
  }

  protected function setUp() {
    parent::setUp(); // TODO: Change the autogenerated stub

    NodeType::create(['type' => 'page', 'name' => 'Page'])->save();

    //$field_name = Unicode::strtolower($this->randomMachineName());
    $field_storage = FieldStorageConfig::create([
      'field_name' => 'field_wistia',
      'entity_type' => 'node',
      'type' => 'field_wistia',
    ]);
    $field_storage->save();

    FieldConfig::create([
      'field_storage' => $field_storage,
      'label' => 'Field Wistia',
      'bundle' => 'page',
    ])->save();

    entity_get_display('node', 'page', 'default')
        ->setComponent('field_wistia', ['type' => 'field_wistia_video'])->save();

  }


}
