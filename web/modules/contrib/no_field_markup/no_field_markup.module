<?php

/**
 * @file
 * Clean Markup the configuration and field template generation.
 */

use Drupal\Core\Config\Entity\ThirdPartySettingsInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function no_field_markup_theme($existing, $type, $theme, $path) {
  return [
    'clean_markup' => [
      'variables' => ['element' => NULL],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function no_field_markup_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'field_config_edit_form') {
    $entity = $form_state->getFormObject()->getEntity();
    $form['third_party_settings']['no_field_markup'] = [
      '#title' => 'No Field Markup',
      '#type' => 'fieldset',
      '#weight' => -1,
    ];
    $form['third_party_settings']['no_field_markup']['clean_markup'] = [
      '#title' => t('Do not write drupal standard markup around the field'),
      '#type' => 'checkbox',
      '#description' => t('Remove the outter DIV containers and markup.'),
      '#default_value' => $entity->getThirdPartySetting('no_field_markup', 'clean_markup', 0),
    ];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function no_field_markup_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  $bundle = $variables['element']['#bundle'];
  $field_name = $variables['element']['#field_name'];

  $node_type = \Drupal::entityManager()->getFieldDefinitions('node', $bundle);
  $fieldObject = $node_type[$field_name];
  // Check third party settings for field.
  if ($fieldObject instanceof ThirdPartySettingsInterface) {
    $config = $fieldObject->getThirdPartySetting('no_field_markup', 'clean_markup');
    if ($config == 1) {
      $suggestions[] = 'clean_markup';
    }
  }
  return $suggestions;
}

/**
 * Prepares variables for clean markup field templates.
 *
 * Template: clean-markup.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: A render element representing the field.
 */
function template_preprocess_clean_markup(array &$variables) {
  $element = $variables['element'];

  $variables['items'] = [];
  $delta = 0;
  while (!empty($element[$delta])) {
    $variables['items'][$delta]['content'] = $element[$delta];
    $delta++;
  }
}
