<?php

/**
 * @file
 * Functions to configure the module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * @file
 * Hook implementations for the Custom panels blocks module.
 */

/**
 * Implements hook_help().
 */
function custom_panels_blocks_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'custom_panels_blocks.settings':
      return '<p>' . t('Permissions let you control what users can do and see on your site. You can define a specific set of permissions for each role. (See the <a href=":role">Roles</a> page to create a role.) Any permissions granted to the Authenticated user role will be given to any user who is logged in to your site. From the <a href=":settings">Account settings</a> page, you can make any role into an Administrator role for the site, meaning that role will be granted all new permissions automatically. You should be careful to ensure that only trusted users are given this access and level of control of your site.', [':role' => \Drupal::url('entity.user_role.collection'), ':settings' => \Drupal::url('entity.user.admin_form')]) . '</p>';
  }
}

/**
 * Update category name of the panelÂ´s block.
 *
 * @param string $category
 *   The category block name.
 */
function _custom_panels_blocks_category_blocks($category) {
  $key_category = strtolower($category);
  return str_replace(" ", "_", $key_category);
}

/**
 * Return settings and permissions saved.
 */
function _custom_panels_blocks_get_config() {
  return \Drupal::config('custom_panels_blocks.settings');
}
