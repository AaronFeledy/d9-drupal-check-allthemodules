<?php

/**
 * @file
 * Contains box.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field_ui\FieldUI;

/**
 * Implements hook_help().
 */
function box_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the box module.
    case 'help.page.box':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides box entity and embedding functionality.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function box_theme() {
  $theme = [];
  $theme['box'] = [
    'render element' => 'elements',
    'file' => 'box.page.inc',
    'template' => 'box',
  ];
  $theme['box_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'box.page.inc',
  ];
  $theme['box_edit_form'] = [
    'render element' => 'form',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function box_theme_suggestions_box(array $variables) {
  $suggestions = [];
  /** @var \Drupal\box\Entity\BoxInterface $entity */
  $entity = $variables['elements']['#box'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'box__' . $sanitized_view_mode;
  $suggestions[] = 'box__' . $entity->bundle();
  $suggestions[] = 'box__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'box__' . $entity->id();
  $suggestions[] = 'box__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_menu_links_discovered_alter().
 */
function box_menu_links_discovered_alter(&$links) {
  $links['entity.box.add_page']['parent'] = 'system.admin_content';
  // Add links for each box type.
  foreach (\Drupal::entityTypeManager()->getStorage('box_type')->loadMultiple() as $type) {
    $links['box.add.' . $type->id()] = [
      'title' => t($type->label()),
      'route_name' => 'entity.box.add_form',
      'parent' => 'entity.box.add_page',
      'route_parameters' => ['box_type' => $type->id()],
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds a button 'Save and manage fields' to the 'Create box type' form.
 */
function box_form_box_type_add_form_alter(&$form, FormStateInterface $form_state) {
  if (!\Drupal::moduleHandler()->moduleExists('field_ui')) {
    return;
  }

  $form['actions']['save_continue'] = $form['actions']['submit'];
  $form['actions']['save_continue']['#value'] = t('Save and manage fields');
  $form['actions']['save_continue']['#weight'] = $form['actions']['save_continue']['#weight'] + 5;
  $form['actions']['save_continue']['#submit'][] = 'box_form_box_type_add_form_submit';
  // Hide the 'Save' button.
  $form['actions']['submit']['#access'] = FALSE;
}

/**
 * Form submission handler for the 'Save and manage fields' button.
 */
function box_form_box_type_add_form_submit($form, FormStateInterface $form_state) {
  if ($form_state->getTriggeringElement()['#parents'][0] === 'save_continue' && $route_info = FieldUI::getOverviewRouteInfo('box', $form_state->getValue('id'))) {
    $form_state->setRedirectUrl($route_info);
  }
}
