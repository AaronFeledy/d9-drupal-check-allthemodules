<?php

use Drupal\box\Entity\Box;
use Drupal\Core\Url;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_type_build().
 */
function box_clone_entity_type_build(array &$entity_types) {
  if (isset($entity_types['box'])) {
    $entity_types['box']->setFormClass('box_clone', 'Drupal\box_clone\Form\BoxCloneForm');
  }

}

/**
 * Implements hook_entity_operation().
 */
function box_clone_entity_operation(EntityInterface $entity) {
  $operations = [];

  // Only add an operation for box entities.
  if ($entity->getEntityTypeId() !== 'box') {
    return $operations;
  }

  $bundle = $entity->bundle();
  $currentUser = \Drupal::currentUser();
  if ($currentUser->hasPermission("clone $bundle box") && $currentUser->hasPermission("create $bundle box")) {
    $path = "/box/{$entity->id()}/duplicate";
    $operations['duplicate'] = [
      'title' => t('Duplicate'),
      'weight' => '100',
      'url' => Url::fromUri('internal:/' . trim($path, '/')),
    ];
  }

  return $operations;
}

/**
 * Get the title of a cloned box.
 *
 * @param \Drupal\box\Entity\Box $box
 *   The box entity.
 * @param string $langcode
 *   The language to use.
 *
 * @return string
 *   The cloned box title.
 */
function box_clone_get_default_title(Box $box, $langcode = NULL) {
  $bc_config = \Drupal::config('box_clone.settings');
  $cloned_box_title = $bc_config->get('cloned_box_title');
  return format_string($cloned_box_title, ['@box_title' => $box->getTitle()]);
}
