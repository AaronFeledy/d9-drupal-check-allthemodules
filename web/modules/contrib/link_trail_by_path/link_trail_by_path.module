<?php

/**
 * @file
 * Main module file.
 */

declare(strict_types = 1);

use Drupal\Core\Url;

/**
 * Implements hook_preprocess_breadcrumb().
 */
function link_trail_by_path_preprocess_breadcrumb(array &$variables) {
  $route = '/' . Url::fromRouteMatch(\Drupal::routeMatch())->getInternalPath();
  $current_path = \Drupal::service('path.alias_manager')->getAliasByPath($route);
  $current_path_parent_candidates = _link_trail_by_path_get_parent_candidates($current_path);

  foreach ($variables['links'] as &$link) {
    $url = $link->getUrl();

    if (!$url->isRouted()) {
      continue;
    }

    $link_parent_candidates = _link_trail_by_path_get_parent_candidates($url->getInternalPath());

    if (empty($link_parent_candidates) || empty($current_path_parent_candidates)) {
      continue;
    }

    if (!in_array(end($link_parent_candidates), $current_path_parent_candidates, TRUE)) {
      continue;
    }

    if (empty($link->options['attributes']['class'])) {
      $link->options['attributes']['class'] = [];
    }

    if (!in_array('active-trail', $link->options['attributes']['class'], TRUE)) {
      $link->options['attributes']['class'][] = 'active-trail';
    }
  }
}

/**
 * Implements hook_preprocess_links().
 */
function link_trail_by_path_preprocess_links(array &$variables) {
  $route = '/' . Url::fromRouteMatch(\Drupal::routeMatch())->getInternalPath();
  $current_path = \Drupal::service('path.alias_manager')->getAliasByPath($route);
  $current_path_parent_candidates = _link_trail_by_path_get_parent_candidates($current_path);

  foreach ($variables['links'] as &$link) {
    if (!isset($link['link'])) {
      continue;
    }

    if (empty($link['link']['#url'])) {
      continue;
    }

    /* @var \Drupal\Core\Url $url */
    $url = $link['link']['#url'];

    if (!$url->isRouted()) {
      continue;
    }

    $link_parent_candidates = _link_trail_by_path_get_parent_candidates($url->getInternalPath());

    if (empty($link_parent_candidates) || empty($current_path_parent_candidates)) {
      continue;
    }

    if (!in_array(end($link_parent_candidates), $current_path_parent_candidates, TRUE)) {
      continue;
    }

    $link += [
      'options' => [
        'attributes' => [
          'class' => [],
        ],
      ],
    ];

    if (!in_array('active-trail', $link['options']['attributes']['class'], TRUE)) {
      $link['options']['attributes']['class'][] = 'active-trail';
    }
  }
}

/**
 * Inspired from the Menu Trail By Path module.
 *
 * Returns an array of parent candidates.
 *
 * e.g. given the argument 'foo/bar/zee', this returns an array of
 * internal Drupal paths for 'foo', 'foo/bar', 'foo/bar/zee'.
 *
 * @param string $path
 *   A Drupal path alias.
 *
 * @return string[]
 *   An array of internal Drupal paths.
 */
function _link_trail_by_path_get_parent_candidates($path) {
  $path_exploded = explode('/', trim($path, '/'));

  do {
    $parent_path_temporary = implode('/', $path_exploded);

    $parent_path_candidates[] = '/' . $parent_path_temporary;
    $parent_path_candidates[] = \Drupal::service('path.alias_manager')->getAliasByPath('/' . $parent_path_temporary);
    $parent_path_candidates[] = \Drupal::service('path.alias_manager')->getPathByAlias('/' . $parent_path_temporary);

    array_pop($path_exploded);
  } while (!empty($path_exploded));

  $parent_path_candidates = array_unique(array_filter($parent_path_candidates));

  return array_values($parent_path_candidates);
}

/**
 * Implements hook_link_alter().
 */
function link_trail_by_path_link_alter(array &$variables) {
  /** @var \Drupal\link_trail_by_path\Path\CurrentPathHelper $path_helper */
  $path_helper = \Drupal::service('link_trail_by_path.path_helper');

  foreach ($path_helper->getUrls() as $url) {
    if ($variables['url']->isRouted() && $url->isRouted() && $variables['url']->getInternalPath() === $url->getInternalPath()) {
      $variables['options']['attributes']['class'][] = 'active-trail';
    }
  }
}
