<?php

/**
 * @file
 * Contains node_title_ps.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeTypeInterface;

/**
 * Implements hook_help().
 */
function node_title_ps_help(string $route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the node_title_ps module.
    case 'help.page.node_title_ps':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Add prefix and suffix for node title') . '</p>';

      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for \Drupal\node\NodeTypeForm.
 *
 * Adds title prefix and suffix options to the node type form.
 *
 * @see NodeTypeForm::form()
 * @see node_title_ps_form_node_type_form_submit()
 */
function node_title_ps_form_node_type_form_alter(array &$form, FormStateInterface $form_state) {
  /** @var \Drupal\node\NodeTypeInterface $type */
  $type = $form_state->getFormObject()->getEntity();

  $form['submission']['title_prefix'] = [
    '#type' => 'textfield',
    '#title' => t('Prefix'),
    '#weight' => 0,
    '#default_value' => $type->getThirdPartySetting('node_title_ps', 'title_prefix', ''),
  ];
  $form['submission']['title_suffix'] = [
    '#type' => 'textfield',
    '#title' => t('Suffix'),
    '#weight' => 0,
    '#default_value' => $type->getThirdPartySetting('node_title_ps', 'title_suffix', ''),
  ];

  $form['#entity_builders'][] = 'node_title_ps_form_node_type_form_builder';
}

/**
 * Entity builder for the node type form with title prefix and suffix options.
 *
 * @see node_title_ps_form_node_type_form_alter()
 */
function node_title_ps_form_node_type_form_builder(string $entity_type, NodeTypeInterface $type, array &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('node_title_ps', 'title_prefix', $form_state->getValue('title_prefix'));
  $type->setThirdPartySetting('node_title_ps', 'title_suffix', $form_state->getValue('title_suffix'));
}

/**
 * Implements hook_preprocess_HOOK().
 */
function node_title_ps_preprocess_field(array &$variables) {
  if ('node_title' === "{$variables['element']['#entity_type']}_{$variables['field_name']}") {
    /** @var \Drupal\node\NodeTypeInterface $node_type */
    $node_type = $variables['element']['#object']->type->entity;

    $title_prefix = $node_type->getThirdPartySetting('node_title_ps', 'title_prefix', '');
    $title_suffix = $node_type->getThirdPartySetting('node_title_ps', 'title_suffix', '');
    
    // Add prefix and suffix.
    array_unshift($variables['items'], node_title_ps_generate($title_prefix));
    $variables['items'][] = node_title_ps_generate($title_suffix);
  }
}

/**
 * Generate array render.
 *
 * @param string $value
 *   The element value.
 *
 * @return array
 *   A renderable array.
 */
function node_title_ps_generate(string $value) {
  return [
    'content' => [
      "#type" => "inline_template",
      "#template" => "{{ value }}",
      '#context' => [
        'value' => $value,
      ],
    ],
  ];
}
