<?php

/**
 * @file
 * Enables functionality for Role specific user block.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_help().
 */
function role_specific_user_block_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.role_specific_user_block':
      $output = t('This module allows admin to block all user from a particular role to get login into the site.');
      $output .= t('It is also compatible with email_registration, so you will not face any conflict.');
      return $output;
  }
}

/**
 * Implements hook_form_alter().
 */
function role_specific_user_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $login_form_id = 'user_login_form';
  if ($form_id == $login_form_id) {
    array_unshift($form['#validate'], 'role_specific_user_block_form_validate');
  }
}

/**
 * Implements role_specific_user_block_form_validate().
 */
function role_specific_user_block_form_validate($form, FormStateInterface &$form_state) {
  $values = $form_state->getValues();
  $role_config_var = (\Drupal::config('role_specific_user_block.settings')->get('role_specific_user_block'));
  $role_specific_block_roles = array_filter($role_config_var);
  if (count($role_specific_block_roles)) {
    $error_message = (\Drupal::config('role_specific_user_block.settings')->get('role_specific_user_block_err_message'));
    $user_id = role_specific_user_block_get_id(trim($values['name']));
    if (isset($user_id) && !empty($user_id)) {
      $user = User::load($user_id);
      if (array_intersect((array) $role_specific_block_roles, $user->getRoles())) {
        if (!empty($error_message)) {
          $form_state->setErrorByName('name', $error_message);
        }
        else {
          $form_state->setErrorByName('name', t('Invalid credentials !'));
        }
      }
    }
  }
}

/**
 * Helper function to get uid by name.
 *
 * @param string $name
 *   Get user name.
 */
function role_specific_user_block_get_id($name) {
  if (!empty($name)) {
    $query = \Drupal::database()->select('users_field_data', 'u')
      ->fields('u', ['uid']);
    if (role_specific_user_block_is_email_registration_enabled()) {
      $or = db_or();
      $or->condition('name', $name, '=');
      $or->condition('mail', $name, '=');
      $query->condition($or);
    }
    else {
      $query->condition('name', $name, '=');
    }
    $result = $query->execute()->fetchField();
    return $result;
  }
}

/**
 * Get if email_registration is enabled.
 *
 * @return bool
 *   True if module exist.
 */
function role_specific_user_block_is_email_registration_enabled() {
  $moduleHandler = \Drupal::moduleHandler();
  if ($moduleHandler->moduleExists('email_registration')) {
    return TRUE;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function role_specific_user_block_preprocess_page(&$variables) {
  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();
  $role_config_var = (\Drupal::config('role_specific_user_block.settings')->get('role_specific_user_block'));
  $role_specific_block_roles = array_filter($role_config_var);
  if (array_intersect((array) $role_specific_block_roles, $roles)) {
    user_logout();
  }
}
