<?php

/**
 * @file
 * Provides settings to customize the placeholder text on Options field widgets.
 */

use Drupal\Component\Utility\Xss;
use Drupal\Component\Utility\Html;


/**
 * Implements hook_field_widget_third_party_settings_form().
 */
function options_widget_placeholder_field_widget_third_party_settings_form(\Drupal\Core\Field\WidgetInterface $plugin, \Drupal\Core\Field\FieldDefinitionInterface $field_definition, $form_mode, $form, $form_state) {
  $element = array();
  if (in_array($plugin->getPluginId(), array('options_select', 'options_buttons'))) {
    $element['placeholder'] = array(
      '#type' => 'textfield',
      '#title' => t('Custom placeholder'),
      // @todo '#description' => '',
      '#default_value' => Html::escape($plugin->getThirdPartySetting('options_widget_placeholder', 'placeholder')),
    );
  }
  return $element;
}


/**
 * Implements hook_field_widget_settings_summary_alter().
 */
function options_widget_placeholder_field_widget_settings_summary_alter(&$summary, $context) {
  if (in_array($context['widget']->getPluginId(), array('options_select', 'options_buttons'))) {
    $setting = $context['widget']->getThirdPartySetting('options_widget_placeholder', 'placeholder');
    if ($setting) {
      $summary[] = t('Custom placeholder: @placeholder', array('@placeholder' => Xss::filter($setting, array())));
    }
  }
}


/**
 * Implements hook_field_widget_form_alter().
 *
 * Targets these field widget types:
 *  - options_select
 *  - options_buttons
 */
function options_widget_placeholder_field_widget_form_alter(&$element, &$form_state, $context) {

  if (in_array($context['widget']->getPluginId(), array('options_select', 'options_buttons'))) {

    $setting = $context['widget']->getThirdPartySetting('options_widget_placeholder', 'placeholder');

    // Modify the _none option if it is present.
    // N.B.: We don't determine whether the _none option gets displayed,
    // just what it will will say.
    if (isset($element['#options']['_none']) && $setting) {
      $element['#options']['_none'] = Html::escape($setting);
    }
  }
}
