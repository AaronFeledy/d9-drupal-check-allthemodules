<?php

/**
 * Implements HOOK_toolbar_alter().
 */
function wwaf_toolbar_alter(&$items) {
  $items['administration']['#attached']['library'][] = 'wwaf/toolbar';
}


/**
 * Implements HOOK_theme().
 */
function wwaf_theme($existing, $type, $theme, $path) {
  return [
    'wwaf_main' => [
      'variables' => [
        'radiuses' => [],
        'curr_radius' => 30,
        'search' => '',
        'custom_suggestion' => '',
        'enable_countries' => FALSE,
      ],
    ],
    'wwaf_entity' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements HOOK_theme_suggestions_HOOK().
 */
function wwaf_theme_suggestions_wwaf_entity(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#wwaf_entity'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'wwaf_entity__' . $sanitized_view_mode;
  $suggestions[] = 'wwaf_entity__' . $entity->id();
  $suggestions[] = 'wwaf_entity__' . $entity->id() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements HOOK_theme_suggestions_alter()
 */
function wwaf_theme_suggestions_wwaf_main(array $variables) {
  $suggestions = [];
  if (isset($variables['custom_suggestion']) && !empty($variables['custom_suggestion']))
    $suggestions[] = 'wwaf_main__'.$variables['custom_suggestion'];
}

function template_preprocess_wwaf_entity(&$variables) {
  $variables['wwaf_entity'] = $variables['elements']['#wwaf_entity'];
  
  $variables['label'] = $variables['elements']['#wwaf_entity']->label();
  
  $variables['attributes']['class'] = [
    'wwaf-entity',
    'wwaf-entity--' . $variables['elements']['#view_mode'],
  ];
  
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  
  // Provide a distinct $teaser boolean.
  $variables['teaser'] = $variables['view_mode'] == 'teaser';
}