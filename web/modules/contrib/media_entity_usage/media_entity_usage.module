<?php

/**
 * @file
 * Provides information about media entities usage.
 * This module does nothing itself - only provides schema and tools for its submodules and then expose that information for use in views.
 */

function media_entity_usage_media_delete(\Drupal\media_entity\Entity\Media $entity) {
  \Drupal::database()->delete('media_usage', [
    'mid' => $entity->id(),
  ]);
  return true;
}

/**
 * Implements hook_views_data_alter().
 */
function media_entity_usage_views_data_alter(array &$data) {
  $data['media']['media_usage'] = [
    'title' => t('Media usage count'),
    'field' => [
      'title' => t('Media usage count'),
      'help' => t('Displays media entity usage count'),
      'id' => 'media_usage',
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function media_entity_usage_entity_type_alter(array &$entity_types) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(\Drupal\media_entity_usage\EntityTypeInfo::class)
    ->entityTypeAlter($entity_types);
}

/**
 * Implements hook_entity_operation().
 */
function media_entity_usage_entity_operation(\Drupal\Core\Entity\EntityInterface $entity) {
  return \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(\Drupal\media_entity_usage\EntityTypeInfo::class)
    ->entityOperation($entity);
}

/**
 * Implements hook_form_alter().
 */
function media_entity_usage_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\media_entity_usage\Service\MediaUsageInfo $info */
  $info = \Drupal::service('media_entity_usage.reference_info');
  if (preg_match('/^media_(.+)_delete_form$/iu', $form_id)) {
    $object = $form_state->getFormObject();
    if ($object instanceof \Drupal\Core\Entity\EntityForm) {
      $entity = $object->getEntity();
      if ($entity instanceof \Drupal\media_entity\MediaInterface) {
        $count = $info->getRefsCount($entity);
        if ($count) {
          $form['description'] = [
            'alert' => [
              '#markup' => t('This action cannot be undone.'),
            ],
            'references' => [
              '#prefix' => '<br/>',
              '#markup' => t('This media is referenced at @count place(s).', ['@count' => $count]),
            ],
            'link' => [
              '#prefix' => '<br/>',
              '#type' => 'link',
              '#title' => t('Browse references'),
              '#url' => \Drupal\Core\Url::fromRoute('entity.media.media_usage_refs', ['media' => $entity->id()]),
              '#attributes' => ['target' => '_blank'],
            ],
          ];
        }
      }
    }
  }
}