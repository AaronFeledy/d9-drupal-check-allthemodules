<?php

/**
 * @file
 * Medium blog articles module file.
 */

use Drupal\Core\Cache\Cache;
use GuzzleHttp\Client;

/**
 * Implements hook_theme().
 */
function medium_blog_articles_theme($existing, $type, $theme, $path) {
  return [
    'medium_template' => [
      'variables' => [
        'text' => NULL,
        'medium_array' => [],
        'config_fields_medium_array' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function medium_blog_articles_cron() {
  $pub_url = \Drupal::config('medium_blog_articles.settings')->get('medium_blog_articles.publication_name');
  $count_article = \Drupal::config('medium_blog_articles.settings')->get('medium_blog_articles.articles_count');
  $client = new Client();

  if (!empty($pub_url) && !empty($count_article)) {
    $response = $client->request('GET', $pub_url . '/latest?limit=' . $count_article, [
      'headers' => [
        'Accept'     => 'application/json',
        'Accept-Charset' => 'utf-8',
        'Cache-Control' => 'no-cache',
      ],
    ]);
    $string = $response->getBody();
    $string = str_replace("\n", "", $string);
    $string = str_replace("\r", "", $string);
    $string = ltrim($string, '])}while(1);</x>');
    $json_string = json_decode($string, TRUE);
    $posts = $json_string['payload']['posts'];

    if (isset($json_string['payload']) && isset($json_string['payload']['posts'])) {
      $connection = \Drupal::service('database');
      $connection->truncate('medium_blog_articles')
        ->execute();
      foreach ($posts as $post) {
        $blog_articles = [
          'title' => (strlen($post['title']) > 35) ? substr($post['title'], 0, 32) . '...' : $post['title'],
          'post_date' => date('M jS, g:i a', $post['updatedAt']),
          'image' => 'https://cdn-images-1.medium.com/max/800/' . $post['virtuals']['previewImage']['imageId'],
          'url' => 'https://medium.com/' . $json_string['payload']['collection']['slug'] . '/' . $post['uniqueSlug'],
          'claps' => $post['virtuals']['totalClapCount'],
          'author' => $json_string['payload']['references']['User'][$post['creatorId']]['name'],
        ];

        $query = $connection->insert('medium_blog_articles')->fields($blog_articles)
          ->execute();

        $module_handler = \Drupal::moduleHandler();
        // Flush all persistent caches.
        // This is executed based on old/previously known information, which is
        // sufficient, since new extensions cannot have any primed caches yet.
        $module_handler->invokeAll('cache_flush');
        foreach (Cache::getBins() as $service_id => $cache_backend) {
          $cache_backend->deleteAll();
          if ($service_id == "page") {
            $cache_backend->delete('page');
          }
        }
      }
    }
  }
}
