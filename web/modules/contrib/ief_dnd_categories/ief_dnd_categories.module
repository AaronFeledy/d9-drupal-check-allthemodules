<?php

use Drupal\ief_dnd_categories\Services\IefDndCategoriesFormHandler;

function ief_dnd_categories_form_alter(&$form, &$form_state, $form_id) {

  $config = ief_dnd_get_config();
  foreach ($config as $key => $config_value) {

    if (!empty($config[$key]) && isset($form[$config[$key]['entity_ief_field']])) {
      $form['#attributes']['class'][] = 'ief-dnd-categories-form';
      // Remove the "Revision log" textarea,  it can't be disabled in the
      // form display and doesn't make sense in the inline form context.
      $form['revision_log_message']['#access'] = FALSE;
      $form['field_document_type']['#access'] = FALSE;

      // Adds submit function to save updated files categories:
      $form['actions']['submit']['#submit'][] = 'ief_dnd_categories_inline_entity_form_submit';
      $form['actions']['submit']['#ief_entity_type'] = $config[$key]['entity_type'];
      $form['actions']['submit']['#ief_entity_bundle'] = $config[$key]['entity_bundle'];
      $form['actions']['submit']['#ief_entity_field'] = $config[$key]['entity_ief_field'];

      // Overrides inline entity form default theme function:
      $form[$config[$key]['entity_ief_field']]['widget']['entities']['#theme'] = 'ief_dnd_categories_list_inline_entity_form';
      $form[$config[$key]['entity_ief_field']]['widget']['entities']['#entity_type'] = $config[$key]['entity_type'];
      $form[$config[$key]['entity_ief_field']]['widget']['entities']['#entity_bundle'] = $config[$key]['entity_bundle'];
      $form[$config[$key]['entity_ief_field']]['widget']['entities']['#entity_field'] = $config[$key]['entity_ief_field'];

      // See inline_entity_form.module theme_inline_entity_form_entity_table().
      $cols = &$form['field_multiple_file_upload']['widget']['entities']['#table_fields'];
      $cols['field_document_type'] = [
        'type' => 'field',
        'label' => t('Type'),
        'weight' => 105,
      ];

      // Injects catagories weight updates to the custom ajax submit function.
      $form['#attached']['library'][] = 'ief_dnd_categories/inline-documents-form';
      $vid = $config[$key]['field_category_vid'];
      $terms = \Drupal::service('entity_type.manager')->getStorage('taxonomy_term')->loadTree($vid);
      foreach ($terms as $term) {
        $form['categories_weights']['category-' . $term->tid] = [
          '#type' => 'hidden',
          '#value' => $term->weight,
        ];
        $categoryOptions[$term->tid] = $term->name;
      }

      // Field and ajax function to add new categories form the d&d table:
      $form[$config[$key]['entity_ief_field']]['widget']['actions']['category_select'] = [
        '#type' => 'select',
        '#options' => $categoryOptions,
        '#id' => 'inline-entity-form-add-category',
        '#weight' => 100,
        '#attributes' => ['class' => ['category-form-option']]
      ];
      $form[$config[$key]['entity_ief_field']]['widget']['actions']['ief_submit'] = [
        '#type' => 'submit',
        '#value' => t('Ajouter une catÃ©gorie'),
        '#ajax' => [
          'callback' => 'ief_dnd_categories_inline_entity_form_add_cateogry',
        ],
        '#attributes' => ['class' => ['category-form-option']]
      ];
    }

  }
}

function ief_dnd_categories_theme() {
  return [
    'ief_dnd_categories_list_inline_entity_form' => [
      'render element' => 'form',
      'function' => 'theme_ief_dnd_categories_list_inline_entity_form',

    ],
  ];
}

/**
 * @see theme_inline_entity_form_entity_table.
 */
function theme_ief_dnd_categories_list_inline_entity_form(&$variables) {
  $inlineDocumentsFormService = new IefDndCategoriesFormHandler($variables['form']['#entity_type'], $variables['form']['#entity_bundle'], $variables['form']['#entity_field']);
  return $inlineDocumentsFormService->renderTable($variables);
}

function ief_dnd_categories_inline_entity_form_submit(&$form, $form_state) {
  $inlineDocumentsFormService = new IefDndCategoriesFormHandler($form['actions']['submit']['#ief_entity_type'], $form['actions']['submit']['#ief_entity_bundle'], $form['actions']['submit']['#ief_entity_field']);
  $inlineDocumentsFormService->submit($form, $form_state);
}

function ief_dnd_categories_inline_entity_form_add_cateogry($form, $form_state) {
  $inlineDocumentsFormService = new IefDndCategoriesFormHandler($form['actions']['submit']['#ief_entity_type'], $form['actions']['submit']['#ief_entity_bundle'], $form['actions']['submit']['#ief_entity_field']);
  $response = $inlineDocumentsFormService->addCategory($form, $form_state);
  return $response;
}

function ief_dnd_categories_js_alter(&$javascript, $assets) {

  $config = ief_dnd_get_config();
  foreach ($config as $key => $config_value) {

    $route = \Drupal::request()->attributes->get('_route');
    $entityAdminType = NULL;
    if ($route === $config[$key]['entity_type'] . 'add') {
      $entityAdminType = \Drupal::request()->attributes->get($config[$key]['entity_type'] . '_type')->get('type');
    }
    if ($route === 'entity.' . $config[$key]['entity_type'] . '.edit_form') {
      $entityAdminType = \Drupal::request()->attributes->get($config[$key]['entity_type'])->getType();
    }
    if ($entityAdminType === $config[$key]['entity_bundle'] && isset($javascript['core/misc/tabledrag.js'])) {
      $javascript['core/misc/tabledrag.js']['data'] = \Drupal::service('module_handler')->getModule('ief_dnd_categories')->getPath() . '/js/tabledrag.js';
    }
  }
}

function ief_dnd_get_config() {

  $config = Drupal::config('ief_dnd_categories.settings')->get('category_fields');

  foreach ($config as $key => $config_value) {

    $config_values = explode('::', $config_value);
    if (count($config_values) === 6) {
      $config[$key] = [
        'entity_type' => $config_values[0],
        'entity_bundle' => $config_values[1],
        'entity_ief_field' => $config_values[2],
        'field_entity_type' => $config_values[3],
        'field_category' => $config_values[4],
        'field_category_vid' => $config_values[5],
      ];
    }
  }

  return $config;
}
