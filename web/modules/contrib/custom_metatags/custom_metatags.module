<?php

/**
 * @file
 * Contains custom_metatags.module.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implementation of hook_help().
 */
function custom_metatags_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    case 'help.page.custom_metatags':
      return '<p>' . t(
        'View complete documentation at <a href=":link">Custom Metatags Documentation</a>.',
        [':link' => 'https://www.drupal.org/project/custom_metatags']
      ) . '</p>';
  }
}

/**
 * Implements hook_page_attachments().
 */
function custom_metatags_page_attachments(&$variables) {
  // Ignore admin paths.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    return FALSE;
  }

  $node = \Drupal::routeMatch()->getParameter('node');

  if (!$node) {
    return FALSE;
  }

  if (isset($node->custom_metatags->value)) {
    foreach ($node->custom_metatags->getValue() as $delta => $custom_meta_tag) {
      $data_meta_tag = explode("|", $custom_meta_tag['value']);
      $custom_metatags = [
        '#tag' => 'meta',
        '#attributes' => [
          'name' => strip_tags($data_meta_tag[0]),
          'content' => strip_tags($data_meta_tag[1]),
        ],
      ];
      $variables['#attached']['html_head'][] = [$custom_metatags, 'custom_metatags_' . $delta];
      unset($custom_metatags);
    }
  }
}

/**
 * Implements hook_entity_base_field_info().
 */
function custom_metatags_entity_base_field_info(EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'node') {
    $fields = [];
    $fields['custom_metatags'] = BaseFieldDefinition::create('string')
      ->setName('custom_metatags')
      ->setLabel('Custom Metatags')
      ->setDescription('The text is displayed in the metatag structure. Fill the field in this format: name|value')
      ->setTranslatable(TRUE)
      ->setDisplayConfigurable('form', TRUE)
      ->setCardinality(-1)
      ->setSetting('default_value', NULL);
    return $fields;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_metatags_form_node_form_alter(&$form, FormStateInterface $form_state) {
  $form['custom_metatags_settings'] = [
    '#type' => 'details',
    '#title' => t('Custom Metatags'),
    '#open' => FALSE,
    '#group' => 'advanced',
    '#weight' => 10,
  ];

  $form['custom_metatags']['#group'] = 'custom_metatags_settings';
}
