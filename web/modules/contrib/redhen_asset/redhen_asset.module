<?php

/**
 * @file
 * Contains redhen_asset.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\redhen_asset\Entity\AssetType;
use Drupal\Core\Config\Entity\ConfigEntityType;

/**
 * Denotes that the asset is not active.
 */
const REDHEN_ASSET_INACTIVE = 0;

/**
 * Denotes that the asset is active.
 */
const REDHEN_ASSET_ACTIVE = 1;

/**
 * Implements hook_help().
 */
function redhen_asset_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the redhen_asset module.
    case 'help.page.redhen_asset':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines the base asset entity and features.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function redhen_asset_theme() {
  $theme = [];
  $theme['redhen_asset'] = [
    'render element' => 'elements',
    'file' => 'redhen_asset.page.inc',
    'template' => 'redhen_asset',
  ];
  $theme['redhen_asset_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'redhen_asset.page.inc',
  ];
  return $theme;
}

/**
 * Return an associative array of asset types to be used as an options list.
 *
 * @return array
 *   Keyed by name with a label value.
 */
function redhen_asset_type_options_list() {
  $options = array();
  foreach (AssetType::loadMultiple() as $type) {
    $options[$type->id()] = $type->label();
  }

  return $options;
}

/**
 * Implements hook_tokens().
 */
function redhen_asset_tokens($type, $tokens, array $data, array $options, \Drupal\Core\Render\BubbleableMetadata $bubbleable_metadata) {
  $replacements = array();

  if (($type == 'entity') && isset($data['entity_type']) && ($data['entity_type'] == 'redhen_asset')) {

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'id':
          $replacements[$original] = $data['entity']->id();
          break;

        case 'name':
          $replacements[$original] = $data['entity']->getName();
          break;

        case 'type':
          $replacements[$original] = $data['entity']->getType();
          break;

        case 'status':
          $replacements[$original] = $data['entity']->isActive();
          break;

        case 'created':
          $replacements[$original] = $data['entity']->getCreatedTime();
          break;
      }
    }

  }

  return $replacements;
}


/**
 * Implements hook_entity_type_alter().
 *
 * Adds the Auto Label tab to the entity configuration page.
 */
function redhen_asset_entity_type_alter(array &$entity_types) {
  $module_handler = \Drupal::moduleHandler();
  if (Drupal::moduleHandler()->moduleExists('auto_entitylabel') == FALSE) {
    return FALSE;
  }
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  foreach ($entity_types as $entity_type_id => $entity_type) {
    $module_name = $entity_type->getProvider();
    if ($module_name == 'redhen_asset') {
      if ($entity_type instanceof ConfigEntityType && $entity_type->hasLinkTemplate('edit-form')) {
        $entity_type->setLinkTemplate('auto-label', $entity_type->getLinkTemplate('edit-form') . "/auto-label");
      }
    }
  }
}

/**
 * Implements hook_token_info().
 */
function redhen_asset_token_info() {
  $type = array(
    'name' => t('Asset'),
    'description' => t('Tokens related to an individual Assets.'),
    'needs-data' => 'redhen_asset',
  );

  $redhen_asset['id'] = array(
    'name' => t('Asset ID'),
    'description' => t('The unique ID of the Asset.'),
  );

  $redhen_asset['name'] = array(
    'name' => t('Asset Name'),
    'description' => t('The name of the Asset.'),
  );

  $redhen_asset['type'] = array(
    'name' => t('Asset Type'),
    'description' => t('The type (bundle) of the Asset.'),
  );

  $redhen_asset['status'] = array(
    'name' => t('Asset Status'),
    'description' => t('The status of the Asset.'),
  );

  $redhen_asset['created'] = array(
    'name' => t('Asset Created'),
    'description' => t('The timestamp the Asset was created.'),
  );

  return array(
    'types' => array('redhen_asset' => $type),
    'tokens' => array('redhen_asset' => $redhen_asset),
  );
}
