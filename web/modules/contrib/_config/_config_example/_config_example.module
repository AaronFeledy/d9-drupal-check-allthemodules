<?php

/**
 * @file
 * Provides examples for using the _config.module to add help text, alter forms, and add descriptions to roles.
 */

use Drupal\Component\Render\FormattableMarkup;
use Drupal\Component\Utility\NestedArray;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function _config_example_help($route_name, RouteMatchInterface $route_match) {
  // DEBUG: (Requires devel.module)
  // print($route_name); exit;
  if (_config_exists("_config_example.help.$route_name")) {
    $parameters = $route_match->getRawParameters();
    foreach ($parameters as $name => $value) {
      if ($help = _config("_config_example.help.$route_name", "$name.$value")) {
        return $help;
      }
    }
  }

  return _config("_config_example.help", $route_name);
}

/**
 * Implements hook_form_FORM_BASE_ID_alter().
 */
function _config_example_form_user_form_alter(&$form, FormStateInterface $form_state) {
  // Adds descriptions to role on user edit form.
  if (isset($form['account']['roles']) && isset($form['account']['roles']['#options'])) {
    $role_descriptions = _config('_config_example.user.roles', 'descriptions');
    foreach ($form['account']['roles']['#options'] as $role_name => &$role_label) {
      if (isset($role_descriptions[$role_name])) {
        $role_label = new FormattableMarkup('<b>@role</b> - @description', ['@role' => $role_label, '@description' => $role_descriptions[$role_name]]);
      }
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function _config_example_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if _config _config_example.form.{form_id} exists.
  if (_config_exists("_config_example.form.$form_id")) {
    $form = NestedArray::mergeDeep($form, _config("_config_example.form.$form_id"));
  }

  // DEBUG: (Requires devel.module)
  // dsm($form_id); dsm($form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function _config_example_form_views_exposed_form_alter(&$form, FormStateInterface $form_state) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $form_state->get('view');
  $name = $view->storage->id();
  $display_id = $view->current_display;

  // Check if _config _config_example.views_exposed_form.{name} exists.
  if (_config_exists("_config_example.views_exposed_form.$name")) {
    $form = NestedArray::mergeDeep($form, _config("_config_example.views_exposed_form.$name"));
  }

  // Check if _config _config_example.views_exposed_form.{name}.{display_id}
  // exists.
  if (_config_exists("_config_example.views_exposed_form.$name.$display_id")) {
    $form = NestedArray::mergeDeep($form, _config("_config_example.views_exposed_form.$name.$display_id"));
  }

  // DEBUG: (Requires devel.module)
  // dsm("_config_example.views_exposed_form.$name"); dsm("_config_example.views_exposed_form.$name.$display_id"); dsm($form);
}
