<?php

/**
 * @file
 * Contains patreon_user.module.
 */

define('PATREON_USER_NO_LOGIN', 0);
define('PATREON_USER_COPY_ACCOUNT', 1);
define('PATREON_USER_SINGLE_SIGN_ON', 2);
define('PATREON_USER_ONLY_PATRONS', 1);
define('PATREON_USER_ALL_USERS', 2);

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function patreon_user_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the patreon_user module.
    case 'help.page.patreon_user':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Links drupal User accounts to an account on the Patreon website') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function patreon_user_form_user_admin_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $section = &$form['registration_cancellation'];
  $position = (array_search('user_register', array_keys($section))) ?: count($section) - 1;
  $config = \Drupal::config('patreon_user.settings');
  $register = $config->get('patreon_user_registration');
  $method = $config->get('patreon_user_login_method');

  $insert = array(
    'patreon_user_registration' => array(
      '#title' => t('Which Patreon users can log in?'),
      '#description' => t('Select which users you wish to be logged in via the Patreon API.'),
      '#type' => 'radios',
      '#default_value' => $register,
      '#options' => array(
        PATREON_USER_NO_LOGIN => t('No login via Patreon'),
        PATREON_USER_ONLY_PATRONS => t('Only my patrons'),
        PATREON_USER_ALL_USERS => t('All users from Patreon'),
      ),
    ),
    'patreon_user_registration_method' => array(
      '#type' => 'radios',
      '#title' => t('Patreon user login method'),
      '#options' => array(
        PATREON_USER_COPY_ACCOUNT => t('Users must set a Drupal password'),
        PATREON_USER_SINGLE_SIGN_ON => t('Users sign in directly via Patreon'),
      ),
      '#description' => t('Choose whether users must log in as normal via a Drupal account (automatically created via Patreon) or to have users with Patreon accounts automatically logged in without a password.'),
      '#default_value' => $method,
      '#states' => array(
        'invisible' => array(
          ':input[name=patreon_user_registration]' => array('value' => PATREON_USER_NO_LOGIN),
        ),
      ),
    ),
  );

  $section = array_slice($section, 0, $position, TRUE) +
    $insert +
    array_slice($section, $position, count($section) - $position, TRUE);

  $form['#submit'][] = 'patreon_user_form_admin_settings_submit';
}

/**
 * Custom submit to store settings.
 *
 * @param array $form
 *   Drupal Form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Drupal Form State object.
 */
function patreon_user_form_admin_settings_submit(&$form, FormStateInterface $form_state) {
  $config = \Drupal::service('config.factory')
    ->getEditable('patreon_user.settings');
  $config->set('patreon_user_registration', $form_state->getValue('patreon_user_registration'));
  $config->set('patreon_user_login_method', $form_state->getValue('patreon_user_registration_method'))->save();

  $user_service = \Drupal::service('patreon_user.api');
  $user_service->createRoles();
}
