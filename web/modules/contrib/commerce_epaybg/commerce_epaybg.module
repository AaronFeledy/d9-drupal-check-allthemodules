<?php
/**
 * @file
 * This module implements commerce payment method - EpayBG
 */
use Drupal\commerce_order\Entity\OrderInterface;

/**
* Create hmac encrypted string
*/
function commerce_epaybg_hmac($algo, $data, $passwd) {
  /* md5 and sha1 only */
  $algo = strtolower($algo);
  $p = ['md5'=>'H32', 'sha1'=>'H40'];

  if( strlen($passwd)>64 ) $passwd = pack($p[$algo], $algo($passwd));
  if( strlen($passwd)<64 ) $passwd = str_pad( $passwd,64,chr(0) );

  $ipad = substr($passwd, 0, 64) ^ str_repeat(chr(0x36), 64);
  $opad = substr($passwd, 0, 64) ^ str_repeat(chr(0x5C), 64);

  return( $algo($opad . pack( $p[$algo], $algo( $ipad . $data )) ) );
}

/**
* Create epayBG POST data
*/
function commerce_epaybg_create_post_data($secret, $min, OrderInterface $order, $total, $desc_msg = 'Test') {

  $invoice = $order->id() . rand(10000, 99999);// XXX Invoice
  $sum = sprintf('%.2f', $total);// XXX Ammount
  $exp_date = date("d.m.Y H:i:s", strtotime("+30 minutes"));//01.08.2020 Expiration date
  $descr = $desc_msg . $invoice;

  $data = <<<DATA
MIN={$min}
INVOICE={$invoice}
AMOUNT={$sum}
EXP_TIME={$exp_date}
DESCR={$descr}
DATA;

  $encoded  = base64_encode($data);
  $checksum = commerce_epaybg_hmac('sha1', $encoded, $secret);// XXX SHA-1 algorithm REQUIRED

  return ['encoded' => $encoded, 'checksum' => $checksum, 'order_id' => $order->id(), 'invoice' => $invoice];
}

/**
* Receive and decrypt epayBG POST data
*/
function commerce_epaybg_receive_data($encoded, $checksum, $secret) {

  $hmac = commerce_epaybg_hmac('sha1', $encoded, $secret);// XXX SHA-1 algorithm REQUIRED
  $info_data = [];
  
  if ($hmac == $checksum) {// XXX Check if the received CHECKSUM is OK
      
      $data = base64_decode($encoded);
      $lines_arr = explode("\n", $data);

      foreach ($lines_arr as $line) {
          if (preg_match("/^INVOICE=(\d+):STATUS=(PAID|DENIED|EXPIRED)(:PAY_TIME=(\d+):STAN=(\d+):BCODE=([0-9a-zA-Z]+))?$/", $line, $regs)) {
              $info_data[] = [
                'invoice'   => $regs[1],
                'status'    => $regs[2],
                'pay_date'  => $regs[4], # XXX if PAID
                'stan'      => $regs[5], # XXX if PAID
                'bcode'     => $regs[6], # XXX if PAID
              ];
          }
      }
  }

  return $info_data;
}