<?php

/**
 * @file
 * Module implementation for redirect_extensions module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function redirect_extensions_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the redirect_extensions custom module.
    case 'help.page.redirect_extensions':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Custom extensions to the Redirect module (www.drupal.org/project/redirect).') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_views_api().
 */
function redirect_extensions_views_api() {
  return [
    'api' => 3,
  ];
}

/**
 * Implements hook_redirect_insert().
 */
function redirect_extensions_redirect_insert($redirect) {

  \Drupal::service('redirect_extensions.redirect_storage')->insertRedirect($redirect->get('rid')->value);
}

/**
 * Implements hook_redirect_update().
 */
function redirect_extensions_redirect_update($redirect) {

  // We need to determine if the rid exists in our custom table or not,
  // this will determine if we are doing an update or an insert.
  if (\Drupal::service('redirect_extensions.redirect_storage')->redirectExists($redirect->get('rid')->value)) {
    // Record exists, do an update.
    \Drupal::service('redirect_extensions.redirect_storage')->updateRedirect($redirect->get('rid')->value);
  }
  else {
    // Record does not exist, do an insert.
    \Drupal::service('redirect_extensions.redirect_storage')->insertRedirect($redirect->get('rid')->value);
  }
}

/**
 * Implements hook_redirect_delete().
 */
function redirect_extensions_redirect_delete($redirect) {
  \Drupal::service('redirect_extensions.redirect_storage')->deleteRedirect($redirect->get('rid')->value);
}
