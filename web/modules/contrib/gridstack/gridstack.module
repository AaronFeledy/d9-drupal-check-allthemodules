<?php

/**
 * @file
 * Provides GridStack integration to have multi-column grids with drag-and-drop.
 */

/**
 * Provides a convenient shortcut for procedural hooks.
 *
 * @return class
 *   The GridStack class instances.
 */
function gridstack($key = 'manager') {
  static $manager;
  static $hook;

  if (!isset($manager)) {
    $manager = \Drupal::service('gridstack.manager');
  }

  switch ($key) {
    case 'hook':
      if (!isset($hook)) {
        $hook = \Drupal::service('gridstack.hook');
      }
      return $hook;

    default:
      return $manager;
  }
}

/**
 * Implements hook_theme().
 */
function gridstack_theme() {
  $themes = [];
  foreach (['gridstack', 'box'] as $item) {
    $key = $item == 'gridstack' ? $item : 'gridstack_' . $item;
    $themes[$key] = [
      'render element' => 'element',
      'file' => 'templates/gridstack.theme.inc',
    ];
  }
  return $themes;
}

/**
 * Implements hook_library_info_build().
 */
function gridstack_library_info_build() {
  return gridstack('hook')->libraryInfoBuild();
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function gridstack_field_formatter_info_alter(array &$info) {
  gridstack('hook')->fieldFormatterInfoAlter($info);
}

/**
 * Implements hook_hook_info().
 */
function gridstack_hook_info() {
  $hooks['gridstack_skins_info'] = ['group' => 'gridstack'];
  return $hooks;
}

/**
 * Implements hook_library_info_alter().
 */
function gridstack_library_info_alter(&$libraries, $extension) {
  if ($extension === 'gridstack' && function_exists('libraries_get_path')) {
    $libraries['gridstack']['js'] = ['/' . libraries_get_path('gridstack') . '/dist/gridstack.min.js' => []];
  }
}

/**
 * Implements hook_layout_alter().
 */
function gridstack_layout_alter(&$definitions) {
  gridstack('hook')->layoutAlter($definitions);
}

/**
 * Implements hook_config_schema_info_alter().
 */
function gridstack_config_schema_info_alter(array &$definitions) {
  if (isset($definitions['gridstack_vanilla']) || isset($definitions['layout_plugin.settings']) || isset($definitions['core.entity_view_display.*.*.*.third_party.ds'])) {
    gridstack('hook')->configSchemaInfoAlter($definitions);
  }
}
