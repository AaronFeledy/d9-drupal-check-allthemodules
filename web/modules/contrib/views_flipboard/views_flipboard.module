<?php

/**
 * @file
 * Views Flipboard module file provide all theme hooks.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function views_flipboard_theme() {
  return [
    'rss_enclosure_image_formatter' => [
      'variables' => ['item' => NULL, 'image_style' => NULL],
      'file' => 'views_flipboard.field.inc',
    ],
    'rss_enclosure_reference_formatter' => [
      'variables' => ['item' => NULL, 'image_style' => NULL],
      'file' => 'views_flipboard.field.inc',
    ],
  ];
}

/**
 * Prepares variables for RSS feed templates.
 *
 * Default template: views-view-rss.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: A ViewExecutable object.
 *   - rows: The raw row data.
 */
function template_preprocess_views_view_flipboard_rss(array &$variables) {
  $view = $variables['view'];
  $items = $variables['rows'];
  $style = $view->style_plugin;

  $config = \Drupal::config('system.site');

  // The RSS 2.0 "spec" doesn't indicate HTML can be used in the description.
  // We strip all HTML tags, but need to prevent double encoding from properly
  // escaped source data (such as &amp becoming &amp;amp;).
  $variables['description'] = Html::decodeEntities(strip_tags($style->getDescription()));

  if ($view->display_handler->getOption('sitename_title')) {
    $title = $config->get('name');
    if ($slogan = $config->get('slogan')) {
      $title .= ' - ' . $slogan;
    }
  }
  else {
    $title = $view->getTitle();
  }
  $variables['title'] = $title;

  // Figure out which display which has a path we're using for this feed.
  // If there isn't one, use the global $base_url.
  $link_display_id = $view->display_handler->getLinkDisplay();
  /** @var \Drupal\views\Plugin\views\display\DisplayPluginBase $display */
  if ($link_display_id && ($display = $view->displayHandlers->get($link_display_id)) && $display->isEnabled()) {
    $url = $view->getUrl(NULL, $link_display_id);
  }

  /** @var \Drupal\Core\Url $url */
  if (!empty($url)) {
    $url_options = ['absolute' => TRUE];
    if (!empty($view->exposed_raw_input)) {
      $url_options['query'] = $view->exposed_raw_input;
    }

    // Compare the link to the default home page; if it's the default home page,
    // just use $base_url.
    $url_string = $url->setOptions($url_options)->toString();
    if ($url_string === Url::fromUserInput($config->get('page.front'))->toString()) {
      $url_string = Url::fromRoute('<front>')->setAbsolute()->toString();
    }

    $variables['link'] = $url_string;
  }

  $variables['langcode'] = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['items'] = $items;
  $variables['channel_elements'] = \Drupal::service('renderer')->render($style->channel_elements);

  // During live preview we don't want to output the header since the contents
  // of the feed are being displayed inside a normal HTML page.
  if (empty($variables['view']->live_preview)) {
    $variables['view']->getResponse()->headers->set('Content-Type', 'application/rss+xml; charset=utf-8');
  }
}

/**
 * Prepares variables for views RSS item templates.
 *
 * Default template: views-view-row-rss.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - row: The raw results rows.
 */
function template_preprocess_views_view_row_flipboard_rss(array &$variables) {
  $item = $variables['row'];
  $variables['title'] = $item->title;
  $variables['link'] = $item->link;

  // The description is the only place where we should find HTML.
  // @see https://validator.w3.org/feed/docs/rss2.html#hrelementsOfLtitemgt
  // If we have a render array, render it here and pass the result to the
  // template, letting Twig autoescape it.
  if (isset($item->description) && is_array($item->description)) {
    $variables['description'] = (string) \Drupal::service('renderer')->render($item->description);
  }

  $variables['enclosure'] = $item->enclosure;

  $variables['item_elements'] = [];
  foreach ($item->elements as $element) {
    if (isset($element['attributes']) && is_array($element['attributes'])) {
      $element['attributes'] = new Attribute($element['attributes']);
    }
    $variables['item_elements'][] = $element;
  }
}
