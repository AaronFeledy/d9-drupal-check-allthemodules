<?php

use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function user_alert_theme() {
  return array(
    'user_alert_add_list' => array(
      'variables' => array('content' => NULL),
    ),
  );
}

/**
 * Prepares variables for list of available node type templates.
 *
 * Default template: node-add-list.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - content: An array of content types.
 *
 * @see node_add_page()
 */
function template_preprocess_user_alert_add_list(&$variables) {
  $variables['types'] = array();
  if (!empty($variables['content'])) {
	foreach ($variables['content'] as $type) {
	  $variables['types'][$type->id()] = array(
		'type' => $type->id(),
		'add_link' => \Drupal::l($type->label(), new Url('entity.user_alert.add', array('user_alert_type' => $type->id()))),
		'description' => array(
		  '#markup' => $type->getDescription(),
		),
	  );
	}
  }
}

/**
 * Implements hook_menu()
 * @todo: hook_menu is deprecated. these need to be integrated to the routing/actions yml
 */
//function user_alert_menu() {
//  $items = array();
//
//  $items['js/user-alert/get-message'] = array(
//		'page callback' => 'user_alert_display_alert',
//		'delivery callback' => 'ajax_deliver',
//		'access arguments' => array('access content'),
//		'type' => MENU_CALLBACK,
//  );
//  $items['js/user-alert/close-message'] = array(
//		'page callback' => 'user_alert_close_message',
//		'delivery callback' => 'ajax_deliver',
//		'access arguments' => array('access content'),
//		'type' => MENU_CALLBACK,
//  );
//
//  return $items;
//}

/**
 * Gather alerts for the current user and return them. Exclude ones already closed.
 *
 * @return string
 *   Returns themed output if there is a message to display.
 */
function user_alert_display_alert() {
  if (module_exists('translation')) {
    global $language;
    $language = $language->language;
  } else {
    $language = LANGUAGE_NONE;
  }

	$output = '';
	$result = db_query("SELECT n.nid FROM {node} n WHERE type = :type AND status = :status AND language = :language AND n.nid NOT IN (SELECT ua.nid FROM {user_alert} ua WHERE ua.nid = n.nid AND ua.uuid = :cookie) ORDER BY nid DESC", array(':type' => 'user_alert', ':status' => NODE_PUBLISHED,  ':language' => $language, ':cookie' => $_COOKIE['UUID']));

	foreach ($result as $record) {
		$alert = node_load($record->nid);
		if (node_access('view', $alert) && isset($_COOKIE['UUID'])) {
			$output .= theme('user_alert', array('node' => $alert));
		}
	}
	
	return $output;
}
 
/**
 * Respond to a user clicking to close an alert.
 */
function user_alert_close_message() {
	$nid = $_GET['message'];

	if (!node_load($nid)) {
	  return;
	}
	
	$fields = array('nid' => $nid, 'uuid' => $_COOKIE['UUID']);
	db_insert('user_alert')->fields($fields)->execute();
}

/**
 * Check to see that a cookie exists and has a format of at least .example.com
 * @return bool
 */
function user_alert_cookie_is_valid() {
  global $cookie_domain;

  if (!drupal_strlen($cookie_domain) || substr_count($cookie_domain, '.') < 2) {
    return FALSE;
  }

  return TRUE;
}
