<?php

/**
 * @file
 * WSIF install file.
 */

/**
 * Implements hook_requirements().
 */
function wsif_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $t = get_t();
    foreach (wsif_get_apis_info() as $api_name => $api_info) {
      try {

        $service = wsif_get_api($api_name);

        if (!empty($service) && $service instanceof WSIFInterface) {

          $api_version = $service->wsifGetVersion();
          $count = wsif_get_fail_count($api_name);

          if ($count == 0) {
            $requirements[$api_name] = array(
              'title' => $api_info['name'],
              'value' => $t('Version: %ver, %extra', array('%ver' => $api_version, '%extra' => $api_info['extra'])),
              'severity' => REQUIREMENT_OK,
              'description' => $api_info['description'] . '<br />' . t('No errors recorded in the last @window.', array(
                  '@window' => format_interval(variable_get("wsif-{$api_name}-fail-window", 3600))
                )),
            );
          }
          else {
            $requirements[$api_name] = array(
              'title' => $api_info['name'],
              'value' => $t('Version: %ver, %extra', array('%ver' => $api_version, '%extra' => $api_info['extra'])),
              'severity' => REQUIREMENT_WARNING,
              'description' => $api_info['description'] . '<br />' . t('The API is experiencing issues, !count in the last @window seconds; it will be turned off if this value reaches @max in the same window.', array(
                  '@window' => variable_get("wsif-{$api_name}-fail-window", 3600),
                  '!count' => format_plural($count, 'there has been 1 error recorded', 'there have been @count errors recorded'),
                  '@max' => variable_get("wsif-{$api_name}-fail-cutoff", 5),
                )),
            );
          }

        }
      }
      catch (WSIFUnavailableException $e) {
        $requirements[$api_name] = array(
          'title' => $api_info['name'],
          'value' => $t('%api_name is unavailable', array('%api_name' => $api_name)),
          'description' => $e->getMessage(),
          'severity' => REQUIREMENT_ERROR,
        );
      }
      catch (Exception $e) {
        $requirements[$api_name] = array(
          'title' => $api_info['name'],
          'value' => $t('There is a problem with the API "%api_name"', array('%api_name' => $api_name)),
          'description' => $e->getMessage(),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }

    if (empty($requirements)) {
      $requirements['wsif'] = array(
        'title' => $t('WSIF'),
        'value' => $t('No valid API modules are installed'),
        'severity' => REQUIREMENT_WARNING,
        'description' => $t('The WSIF module is only an API for use by other modules to provide a robust pattern by which to connect other services to Drupal. You presently have no compatible API modules installed.'),
      );

    }
  }

  return $requirements;
}
