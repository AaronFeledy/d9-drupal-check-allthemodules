<?php

/**
 * @file
 * Contains hook implementations for contact_form_summary module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\contact\ContactFormInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function contact_form_summary_form_contact_form_form_alter(array &$form, FormStateInterface $form_state) {

  $form_object = $form_state->getFormObject();
  if (!in_array($form_object->getOperation(), ['edit', 'add'], TRUE)) {
    // Only alter the edit and add forms.
    return;
  }

  /** @var \Drupal\contact\ContactFormInterface $contact_form */
  $contact_form = $form_object->getEntity();

  $form['contact_form_summary'] = [
    '#type' => 'fieldset',
    '#title' => t('Post submit summary modal'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
  ];

  $form['contact_form_summary']['contact_form_summary__enable_post_summary'] = [
    '#type' => 'checkbox',
    '#title' => t('Activate post submit summary.'),
    '#description' => t('Display a modal with a summary after form submission.'),
    '#return_value' => TRUE,
    '#default_value' => $contact_form->getThirdPartySetting('contact_form_summary', 'enable_post_summary', NULL),
  ];

  $form['contact_form_summary']['contact_form_summary__title'] = [
    '#type' => 'textfield',
    '#title' => t("Modal's title."),
    '#default_value' => $contact_form->getThirdPartySetting('contact_form_summary', 'title', t('Form Summary')),
  ];

  $form['contact_form_summary']['contact_form_summary__description'] = [
    '#type' => 'textfield',
    '#title' => t("Modal's description."),
    '#default_value' => $contact_form->getThirdPartySetting('contact_form_summary', 'description', t('Submitted data:')),
  ];

  $form['#entity_builders'][] = '_contact_form_summary_contact_form_form_builder';
  $form['#validate'][] = '_contact_form_summary_contact_form_form_validate';
}

/**
 * Entity builder for the contact form edit form with third party options.
 *
 * @see contact_form_summary_form_contact_form_form_alter()
 */
function _contact_form_summary_contact_form_form_builder($entity_type, ContactFormInterface $contact_form, &$form, FormStateInterface $form_state) {
  $contact_form->setThirdPartySetting('contact_form_summary', 'enable_post_summary', $form_state->getValue('contact_form_summary__enable_post_summary'));
  $contact_form->setThirdPartySetting('contact_form_summary', 'title', $form_state->getValue('contact_form_summary__title'));
  $contact_form->setThirdPartySetting('contact_form_summary', 'description', $form_state->getValue('contact_form_summary__description'));
}

/**
 * Contact form's form validation handler.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function _contact_form_summary_contact_form_form_validate(array &$form, FormStateInterface &$form_state) {

  // There must be a title if summary is enable.
  if (!$form_state->getValue('contact_form_summary__enable_post_summary')) {
    if (empty($form_state->getValue('contact_form_summary__title'))) {
      $form_state->setError($form['contact_form_summary']['contact_form_summary__title'], t("The contact form summary's title can't be empty when summary is enabled"));
    }
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function contact_form_summary_form_contact_message_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = '_contact_form_summary_form_contact_message_form_submit';
}

/**
 * Methods to handle front contact form submit.
 */
function _contact_form_summary_form_contact_message_form_submit(array &$form, FormStateInterface &$form_state) {

  // Checking if session exist. If not, we will be unable to use private temp store.
  if (!_contact_form_summary_is_session_available()) {
    return ;
  }

  /** @var \Drupal\contact\MessageForm $form_object */
  $form_object = $form_state->getFormObject();
  /** @var \Drupal\contact\Entity\Message $form_entity */
  $form_entity = $form_object->getEntity();
  /** @var \Drupal\contact\ContactFormInterface $contact_form */
  $contact_form = $form_entity->getContactForm();
  /** @var \Drupal\Core\Entity\EntityTypeManager $entity_type_manager */
  $entity_type_manager = \Drupal::service('entity_type.manager');
  /** @var \Drupal\Core\Entity\EntityViewBuilderInterface $view_builder */
  $view_builder = $entity_type_manager->getViewBuilder($form_entity->getEntityTypeId());
  /** @var \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStorage */
  $tempStorageFactory = \Drupal::service('tempstore.private');
  /** @var \Drupal\Core\TempStore\PrivateTempStore $tempStorage */
  $tempStorage = $tempStorageFactory->get('contact_form_summary');

  $title = $contact_form->getThirdPartySetting('contact_form_summary', 'title');
  $description = $contact_form->getThirdPartySetting('contact_form_summary', 'description');
  $content = $view_builder->view($form_entity->load($form_entity->id()), 'modal');

  $tempStorage->set('title', $title);
  $tempStorage->set('description', $description);
  $tempStorage->set('content', $content);
  $tempStorage->set('display_modal', TRUE);
}

/**
 * Implements hook_theme().
 */
function contact_form_summary_theme($existing, $type, $theme, $path) {
  return [
    'contact_form_summary_modal' => [
      'variables' => [
        'title' => '',
        'description' => NULL,
        'content' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_page_bottom().
 */
function contact_form_summary_page_bottom(&$page_bottom) {

  // Checking if session exist. If not, we will be unable to use private temp store.
  if (!_contact_form_summary_is_session_available()) {
    return ;
  }

  /** @var \Drupal\Core\TempStore\PrivateTempStoreFactory $tempStorageFactory */
  $tempStorageFactory = \Drupal::service('tempstore.private');

  /** @var \Drupal\Core\TempStore\PrivateTempStore $tempStorage */
  $tempStorage = $tempStorageFactory->get('contact_form_summary');

  if ($tempStorage->get('display_modal')) {

    $page_bottom['contact_form_summary'] = [
      '#theme' => 'contact_form_summary_modal',
      '#title' => $tempStorage->get('title'),
      '#description' => $tempStorage->get('description'),
      '#content' => $tempStorage->get('content'),
    ];
    $tempStorage->delete('title');
    $tempStorage->delete('description');
    $tempStorage->delete('content');
    $tempStorage->delete('display_modal');
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * @todo: add suggestion based on form_id.
 */
function contact_form_summary_theme_suggestions_contact_form_summary_modal_alter(array &$suggestions, array $variables) {
  $suggestions[] = "contact_form_summary_modal__custom";
}

/**
 * Method to check if session is available.
 */
function _contact_form_summary_is_session_available() {
  return (\Drupal::currentUser()->id() || \Drupal::requestStack()->getCurrentRequest()->getSession());
}
