<?php

/**
 * @file
 * Do important actions on the website before going live.
 */

use Drupal\Core\Url;

/**
 * Checks whether the Urlaub im GLas footer link is enabled.
 *
 * @return bool
 *   Returns TRUE if the footer link is enabled or FALSE if not.
 */
function _golive_checklist_urlaubimglas_link_is_enabled() {
  $link_is_enabled = &drupal_static(__FUNCTION__);
  if (!isset($link_is_enabled)) {
    $config = \Drupal::config('checklistapi.progress.golive_checklist');
    $settings = $config->get();
    $link_is_enabled = !empty($settings['link_to_urlaubimglas']);
  }
  return $link_is_enabled;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function golive_checklist_form_checklistapi_checklist_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#checklist']->id == 'golive_checklist') {
    $form['#attached']['library'][] = 'golive_checklist/golive_checklist';
  }
}

/**
 * Implements hook_checklistapi_checklist_info().
 */
function golive_checklist_checklistapi_checklist_info() {
  $modules_url = Url::fromRoute('system.modules_list', array(), array('absolute' => TRUE));
  $modules_page = array(
    '#text' => t('Enable'),
    '#url' => $modules_url,
  );
  $urlaubimglas = array(
    '#theme' => 'image',
    '#uri' => drupal_get_path('module', 'golive_checklist') . '/urlaubimglas-logo.png',
    '#alt' => t('Urlaub im Glas'),
    '#title' => t('Urlaub im Glas'),
  );
  $intro_tab = array(
    '#theme' => 'golive_checklist_intro_tab',
    '#webozy_logo' => \Drupal::service('renderer')->render($urlaubimglas),
  );

  // TODO:
  // Configure and enable Mollom or spam filtering.
  // Double check user registration settings.
  // Delete any test content.
  // Change the email address for the site mail on the Site Info admin page.
  // Run a link checker if it's an old/migrated site.
  // Update any necessary API keys if they were used on the dev/stage sites
  // (Google Analytics, Mollom, GMaps, Flickr, etc.)
  // Install Nagios (status monitoring) module and file an internal ticket to
  // have its monitoring set up.
  // Check the status report: admin/reports/status
  // Optimize all images with tools such as optipng, jpegoptim, Smush.it, ...
  // Check if one of the domain redirect options is enabled in the .htaccess
  // file. Either redirect URLs without www. or vice versa.
  // On the Permissions page, verify what permissions anonymous and
  // authenticated users have been given
  // On the User Settings page, verify that account creation settings are as
  // you intend (can users create accounts? do they need approval?)
  // https://www.drupal.org/project/ultimate_cron
  // http://www.microserveltd.co.uk/blogs/drupal-hosting/high-performance-drupal-part-1-give-your-site-boost
  // http://www.microserveltd.co.uk/blogs/drupal-development/high-performance-drupal-part-2-lightning-fast-code
  // Remove test content, such as "lorum ipsum" text, dummy users, or content
  // generated by the Devel module.
  // Review Google Webmaster Tools for index issues
  // https://www.drupal.org/project/mysqlreport
  // https://www.drupal.org/project/shadow
  // BUMP UP YOUR SERVER MEMORY LIMIT If you check your site's status report,
  // you will see what your PHP memory limit is set to. More than likely
  // this is set to 64M. This is the amount of memory that your server
  // allocates to running the PHP scripts that power your site.
  // enable clean URLs
  // Path module
  // Pathauto
  // GET YOUR SEARCH WORKING
  // SET UP YOUR MENUS AND START WRITING YOUR CONTENT
  // https://www.drupal.org/project/pasc
  // https://www.drupal.org/project/security_review
  // https://www.drupal.org/project/subpathauto
  // https://www.drupal.org/project/flood_control
  // http://kraftwagen.org/
  // https://www.drupal.org/project/linkchecker
  // https://www.drupal.org/project/shield
  $definitions = array();
  $definitions['golive_checklist'] = array(
    '#title' => t('GOLIVE checklist'),
    '#description' => t('Keep track of your Drupal going live tasks.'),
    '#path' => 'admin/config/search/golive-checklist',
    '#help' => t("<p>Check off each goinglive-related task as you complete it.Don't forget to click the <em>Save</em> button!</p>"),
    // Introduction.
    'introduction' => array(
      '#title' => t('Introduction'),
      '#description' => \Drupal::service('renderer')->render($intro_tab),
    ),
    // Configuration.
    'configuration' => array(
      '#title' => t('Configuration'),
      '#description' => t('<p></p>'),
    ),
    // Modules.
    'modules' => array(
      '#title' => t('Modules'),
      '#description' => t('<p>These options add to performance, but the focus is on disabling modules on your site. Of bootstrap optimizer, missing module and clean missing modules you only have to use one, but for consistency all are listed. You can read more about that <a href="https://www.drupal.org/node/1081266">here</a>.</p>'),
      'disable_modules' => array(
        '#title' => t('[Optional] Disable and uninstall all not used core and non-core modules.'),
        'modules_page' => array(
          '#text' => t('Disable'),
          '#url' => $modules_url,
        ),
      ),
      'disable_devel' => array(
        '#title' => t('[Optional] Disable and uninstall all development modules like "devel".'),
        'modules_page' => array(
          '#text' => t('Disable'),
          '#url' => $modules_url,
        ),
      ),
      'disable_ui' => array(
        '#title' => t('[Optional] Disable and uninstall all UI modules like "views UI".'),
        'modules_page' => array(
          '#text' => t('Disable'),
          '#url' => $modules_url,
        ),
      ),
      'disable_overlay' => array(
        '#title' => t('[Optional] Disable and uninstall overlay module.'),
        'modules_page' => array(
          '#text' => t('Disable'),
          '#url' => $modules_url,
        ),
      ),
      'bootstrap_optimizer' => array(
        '#title' => t('Use bootstrap optimizer.'),
        '#description' => t('Module is searching for all modules that were deleted unproperly. Bootstrap optimizer removes this modules from {system} table. It allows Drupal to skip heavy modules/themes directory scan during every page load.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'l10n_update' => array(
          '#text' => t('Bootstrap optimizer'),
          '#url' => Url::fromUri('https://www.drupal.org/project/bootstrap_optimizer'),
        ),
      ),
      'missing_module' => array(
        '#title' => t('Use missing module.'),
        '#description' => t('This module lists modules that are activated in your database but missing from your file system.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'l10n_update' => array(
          '#text' => t('Missing module'),
          '#url' => Url::fromUri('https://www.drupal.org/project/missing_module'),
        ),
      ),
      'clean_missing_module' => array(
        '#title' => t('Use clean missing module.'),
        '#description' => t('Provides a Drush command that will find missing modules and disable them in the database.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'l10n_update' => array(
          '#text' => t('Clean missing module'),
          '#url' => Url::fromUri('https://www.drupal.org/project/clean_missing_modules'),
        ),
      ),
    ),
    // l10n and i18n.
    'l10n' => array(
      '#title' => t('l10n and i18n'),
      '#description' => t('<p></p>'),
      'languages' => array(
        '#title' => t('[Optional] Set up languages.'),
        'language_page' => array(
          '#text' => t('Languages'),
          '#url' => \Drupal::moduleHandler()->moduleExists('language') ? Url::fromRoute('entity.configurable_language.collection', array(), array('absolute' => TRUE)) : $modules_url,
        ),
      ),
      'default_language' => array(
        '#title' => t('[Optional] Set default language.'),
        'language_page' => array(
          '#text' => t('Languages'),
          '#url' => \Drupal::moduleHandler()->moduleExists('language') ? Url::fromRoute('entity.configurable_language.collection', array(), array('absolute' => TRUE)) : $modules_url,
        ),
      ),
      'detection' => array(
        '#title' => t('[Optional] Configured detection and selection.'),
        'detection_page' => array(
          '#text' => t('Detection and selection'),
          '#url' => \Drupal::moduleHandler()->moduleExists('language') ? Url::fromRoute('language.negotiation', array(), array('absolute' => TRUE)) : $modules_url,
        ),
      ),
      'l10n_update' => array(
        '#default_value' => \Drupal::moduleHandler()->moduleExists('l10n_update'),
        '#title' => t('[Optional] Installed l10n_update module.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'l10n_update' => array(
          '#text' => t('Localization update'),
          '#url' => Url::fromUri('https://www.drupal.org/project/l10n_update'),
        ),
      ),
      'content_translation' => array(
        '#default_value' => \Drupal::moduleHandler()->moduleExists('translation'),
        '#title' => t('[Optional] Installed content translation module.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'content_translation' => array(
          '#text' => t('Content translation'),
          '#url' => Url::fromUri('https://www.drupal.org/project/translation'),
        ),
      ),
      'entity_translation' => array(
        '#default_value' => \Drupal::moduleHandler()->moduleExists('entity_translation'),
        '#title' => t('[Optional] Installed entity translation module.'),
        'modules_page' => array(
          '#text' => t('Enable'),
          '#url' => $modules_url,
        ),
        'entity_translation' => array(
          '#text' => t('Entity translation'),
          '#url' => Url::fromUri('https://www.drupal.org/project/entity_translation'),
        ),
      ),
    ),
    // Security.
    'security' => array(
      '#title' => t('Security'),
      '#description' => t('<p></p>'),
      'sessiontime' => array(
        '#title' => 'Set session time in settings.php',
      ),
      'autologout' => array(
        '#default_value' => \Drupal::moduleHandler()->moduleExists('autologout'),
        '#title' => t('Enable autologout'),
        'autologout' => array(
          '#text' => t('Autologout'),
          '#url' => Url::fromUri('https://www.drupal.org/project/autologout'),
        ),
      ),
      'php_errors' => array(
        '#title' => t('Disable off PHP errors'),
      ),
      'security_review' => array(
        '#title' => t('[Optional] Install Security Review module.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('security_review'),
        'project_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('http://drupal.org/project/security_review'),
        ),
        'modules_page' => $modules_page,
      ),
      'captcha' => array(
        '#title' => t('Enaple Captcha'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('captcha'),
        'captcha' => array(
          '#text' => t('Captcha'),
          '#url' => Url::fromUri('https://www.drupal.org/project/captcha'),
        ),
        'modules_page' => $modules_page,
      ),
      'riddler' => array(
        '#title' => t('Riddler'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('riddler'),
        'riddler' => array(
          '#text' => t('Riddler'),
          '#url' => Url::fromUri('https://www.drupal.org/project/riddler'),
        ),
      ),
      'admin_password' => array(
        '#title' => t('Select secure admin password'),
        'user' => array(
          '#text' => t('User admin'),
          '#url' => Url::fromRoute('entity.user.canonical', array('user' => 1), array('absolute' => TRUE)),
        ),
      ),
      'updates' => array(
        '#title' => t('Check for updates.'),
        'updates_pages' => array(
          '#text' => t('List'),
          '#url' => \Drupal::moduleHandler()->moduleExists('update') ? Url::fromRoute('update.status', array(), array('absolute' => TRUE)) : Url::fromRoute('system.modules_list', array(), array('absolute' => TRUE)),
        ),
        'updates_check' => array(
          '#text' => t('Check'),
          '#url' => \Drupal::moduleHandler()->moduleExists('update') ? Url::fromRoute('update.report_update', array(), array('absolute' => TRUE)) : Url::fromRoute('system.modules_list', array(), array('absolute' => TRUE)),
        ),
      ),
      'updates_setup' => array(
        '#title' => t('Setup E-mail notifications about updates.'),
        'updates_setup' => array(
          '#text' => t('Setup'),
          '#url' => \Drupal::moduleHandler()->moduleExists('update') ? Url::fromRoute('update.settings', array(), array('absolute' => TRUE)) : Url::fromRoute('system.modules_list', array(), array('absolute' => TRUE)),
        ),
      ),
      'session_lifetime' => array(
        '#title' => t('Set the Session Lifetime to 0 in settings.php.'),
      ),
      'file_permissions' => array(
        '#title' => t('Securing file permissions.'),
        'file_permissions' => array(
          '#text' => t('Setup'),
          '#url' => Url::fromUri('https://www.drupal.org/node/244924'),
        ),
      ),
      'php_filter' => array(
        '#title' => t('Deactivate php filter module.'),
        'modules_page' => $modules_page,
      ),
      'remove_txt' => array(
        '#title' => t('remove TXT fils from root directory.'),
      ),
      'deactivate_errors' => array(
        '#title' => t('Deactivate error messages.'),
        'error_page' => array(
          '#text' => t('Errors'),
          '#url' => Url::fromRoute('system.logging_settings', array(), array('absolute' => TRUE)),
        ),
      ),

    ),
    // Performance.
    'performance' => array(
      '#title' => t('Performance'),
      '#description' => t('<p></p>'),
      'database_log' => array(
        '#title' => t('Deactivate database log'),
        'modules_page' => $modules_page,
      ),
      'syslog' => array(
        '#title' => t('[optional] Activate syslog'),
        'modules_page' => $modules_page,
      ),
      'caching' => array(
        '#title' => t('Enable caching.'),
        'performance_page' => array(
          '#text' => t('Caching'),
          '#url' => Url::fromRoute('system.performance_settings', array(), array('absolute' => TRUE)),
        ),
      ),
      'apc' => array(
        '#title' => t('Use apc.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('apc'),
        'apc_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('http://drupal.org/project/apc'),
        ),
        'modules_page' => $modules_page,
      ),
      'memcache' => array(
        '#title' => t('Use memcache.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('memcache'),
        'memcache_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('http://drupal.org/project/memcache'),
        ),
        'modules_page' => $modules_page,
      ),
      'memcache_storage' => array(
        '#title' => t('Use memcache_storage instead.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('memcache_storage'),
        'memcache_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('http://drupal.org/project/memcache_storage'),
        ),
        'modules_page' => $modules_page,
      ),
      'boost' => array(
        '#title' => t('Use boost.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('boost'),
        'memcache_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('http://drupal.org/project/boost'),
        ),
        'modules_page' => $modules_page,
      ),
      'memory_limit' => array(
        '#title' => t('Increase Memory Limit.'),
        'memory_page' => array(
          '#text' => t('How to'),
          '#url' => Url::fromUri('http://drupal.org/node/207036'),
        ),
      ),
      'Aggregation' => array(
        '#title' => t('Turn on aggregation for CSS and JavaScript files.'),
        'performance_page' => array(
          '#text' => t('Caching'),
          '#url' => Url::fromRoute('system.performance_settings', array(), array('absolute' => TRUE)),
        ),
      ),
      'performance' => array(
        '#title' => t('Monitor your performance.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('performance'),
        'performance_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('https://www.drupal.org/project/performance'),
        ),
        'modules_page' => $modules_page,
      ),
    ),
    // Cronjob.
    'cronjob' => array(
      '#title' => t('Cronjob'),
      '#description' => t('<p></p>'),
      'cron' => array(
        '#title' => t('Schedule on cron.'),
        'cron_page' => array(
          '#text' => t('Cron'),
          '#url' => Url::fromRoute('system.cron_settings', array(), array('absolute' => TRUE)),
        ),
      ),
      'cronjob' => array(
        '#title' => t('Install cron jobs.'),
      ),
      'elysia' => array(
        '#title' => t('Use Elysia Cron.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('elysia_cron'),
        'elysia_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('https://www.drupal.org/project/elysia_cron'),
        ),
        'modules_page' => $modules_page,
      ),
      'ultimate_cron' => array(
        '#title' => t('Use Ultimate Cron.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('ultimate_cron'),
        'ultimate_page' => array(
          '#text' => t('Download'),
          '#url' => Url::fromUri('https://www.drupal.org/project/ultimate_cron'),
        ),
        'modules_page' => $modules_page,
      ),
    ),
    // URLs.
    'urls' => array(
      '#title' => t('URLs'),
      '#description' => t('<p></p>'),
      'views' => array(
        '#title' => t('Disable unused views pages.'),
        'views_page' => array(
          '#text' => t('Views'),
          '#url' => Url::fromRoute('entity.view.collection', array(), array('absolute' => TRUE)),
        ),
      ),
      'node' => array(
        '#title' => t('Disable www.example.com/node.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('bs_nice_frontpage'),
        'nice_frontpage' => array(
          '#text' => t('Nice Frontpage'),
          '#url' => Url::fromUri('http://drupal.org/project/bs_nice_frontpage'),
        ),
        'custom_module' => array(
          '#text' => t('Custom Module'),
          '#url' => Url::fromUri('http://dominiquedecooman.com/blog/how-remove-drupal-default-node-page-aka-default-front-page-view'),
        ),
      ),
      'path' => array(
        '#title' => t('Enable path.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('path'),
        'modules_page' => $modules_page,
      ),
      'pathauto' => array(
        '#title' => t('Enable pathauto.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('pathauto'),
        'pathauto' => array(
          '#text' => t('Pathauto'),
          '#url' => Url::fromUri('http://drupal.org/project/pathauto'),
        ),
        'modules_page' => $modules_page,
      ),
      'menu_trail_by_path' => array(
        '#title' => t('Enable menu trail by path.'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('menu_trail_by_path'),
        'menu_trail_by_path' => array(
          '#text' => t('Menu Trail By Path'),
          '#url' => Url::fromUri('http://drupal.org/project/menu_trail_by_path'),
        ),
        'modules_page' => $modules_page,
      ),

    ),
    // Backups.
    'backups' => array(
      '#title' => t('Backups'),
      '#description' => t('<p></p>'),
      'backups' => array(
        '#title' => t('Backupscript'),
      ),
      'backup_and_migrate' => array(
        '#title' => t('Backup and Migrate'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('backup_migrate'),
        'backup_and_migrate' => array(
          '#text' => 'Backup and Migrate',
          '#url' => Url::fromUri('http://drupal.org/project/backup_migrate'),
        ),
        'modules_page' => $modules_page,
      ),
    ),
    // Server Setup.
    'server' => array(
      '#title' => t('Server Setup'),
      '#description' => t('<p></p>'),
    ),
    // Domain.
    'domain' => array(
      '#title' => t('Domain'),
      '#description' => t('<p></p>'),
    ),
    // Code.
    'code' => array(
      '#title' => t('Code'),
      '#description' => t('<p></p>'),
    ),
    // User Interaction.
    'user' => array(
      '#title' => t('User Interaction'),
      '#description' => t('<p></p>'),
    ),
    // Quality Assurance.
    'quality' => array(
      '#title' => t('Quality Assurance'),
      '#description' => t('<p></p>'),
    ),
    // Commerce.
    'commerce' => array(
      '#title' => t('Commerce'),
      '#desription' => t('<p></p>'),
    ),
    // Seo.
    'seo' => array(
      '#title' => t('SEO'),
      '#desription' => t('<p></p>'),
    ),
    // Site settings.
    'settings' => array(
      '#title' => t('Site information'),
      '#desription' => t('<p></p>'),
      'name' => array(
        '#title' => t('Site name etc.'),
        'title' => array(
          '#text' => t('Name'),
          '#url' => Url::fromRoute('system.site_information_settings', array(), array('absolute' => TRUE)),
        ),
      ),
      'stmp' => array(
        '#title' => t('SMTP'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('smtp'),
        'smtp' => array(
          '#text' => t('SMTP'),
          '#url' => Url::fromUri('https://www.drupal.org/project/smtp'),
        ),
        'modules_page' => $modules_page,
      ),
      'stmp_settings' => array(
        '#title' => t('ensure that the sender email address and SMTP settings are correct'),
        'smtp_settings' => array(
          '#text' => t('SMTP settings'),
          '#url' => \Drupal::moduleHandler()->moduleExists('smtp') ? Url::fromRoute('smtp.config', array(), array('absolute' => TRUE)) : $modules_url,
        ),
      ),
    ),
    // Statistics.
    'statistics' => array(
      '#title' => t('Statistics'),
      '#description' => t('<p>Know what happens with your site.</p>'),
      'statistics' => array(
        '#title' => t('Enable statistics module'),
        'modules_page' => $modules_page,
        'setup' => array(
          '#text' => t('Settings'),
          '#url' => \Drupal::moduleHandler()->moduleExists('smtp') ? Url::fromRoute('statistics.settings', array(), array('absolute' => TRUE)) : $modules_url,
        ),
      ),
      'g_analytics' => array(
        '#title' => t('Enable Google Analytics'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('google_analytics'),
        'analytics' => array(
          '#text' => 'Analyitcs',
          '#url' => Url::fromUri('https://www.drupal.org/project/google_analytics'),
        ),
      ),
      'piwik' => array(
        '#title' => t('Enable Piwik Web Analytics'),
        '#default_value' => \Drupal::moduleHandler()->moduleExists('piwik'),
        'piwik' => array(
          '#text' => 'Piwik Web Analytics',
          '#url' => Url::fromUri('https://www.drupal.org/project/piwik'),
        ),
      ),
    ),
    // Extras.
    'extras' => array(
      '#title' => t('Extras (optional)'),
      'files' => array(
        '#title' => t('Make sure that field files are not stored directly in /files folder, but separated in subfolders.'),
      ),
      'robots' => array(
        '#title' => t('Set up robots.txt.'),
      ),
      'htaccess' => array(
        '#title' => t('.htaccess www or nowww redirects.'),
      ),
      'watchdog' => array(
        '#title' => t('Clear watchdog, go through all web site and then check out watchdog again. Fix warnings/notifications from there.'),
      ),
      'jsconsole' => array(
        '#title' => t('Clear js console, go through all web site and check out console while doing that. Fix warnings/notifications from there.'),
      ),
    ),

  );
  return $definitions;
}

/**
 * Implements hook_page_bottom().
 */
function golive_checklist_page_top(array &$page_bottom) {
  if (_golive_checklist_urlaubimglas_link_is_enabled()) {
    $page_bottom['golive_checklist_urlaubimglas_link'] = array(
      '#markup' => '<div id="golive-checklist-urlaubimglas-link"><a href="http://www.urlaubimglas.de">Urlaub im Glas Fruchtaufstriche</a></div>',
      '#attached' => array(
        'library' => 'golive_checklist/golive_checklist',
      ),
    );
  }
}

/**
 * Implements hook_theme().
 */
function golive_checklist_theme($existing, $type, $theme, $path) {
  return array(
    'golive_checklist_intro_tab' => array(
      'variables' => array(
        'urlaubimglas_logo' => t('Urlaub im Glas'),
      ),
    ),
  );
}
