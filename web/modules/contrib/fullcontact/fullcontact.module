<?php

/**
 * @file
 * FullContact module file.
 */

use Drupal\user\Entity\User;
use Drupal\Core\Form\FormStateInterface;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_user_login().
 */
function fullcontact_user_login($account) {

  $fc_appid = \Drupal::config('fullcontact.adminsettings')->get('fullcontact_api');

  if (empty($fc_appid)) {
    drupal_set_message(t('Please check FullContact APP ID.'), 'error');
  }
  else {
    $response = fullcontact_curl_call($account, $fc_appid);

    if (empty($account->field_fullcontact_facebook->getValue()) && empty($account->field_fullcontact_googleplus->getValue()) && empty($account->field_fullcontact_twitter->getValue()) && empty($account->field_fullcontact_linkedin->getValue()) && empty($account->field_fullcontact_pinterest->getValue()) && empty($account->field_fullcontact_github->getValue())  && empty($account->field_fullcontact_instagram->getValue()) && empty($account->field_fullcontact_youtube->getValue()) && empty($account->field_fullcontact_quora->getValue()) && empty($account->field_fullcontact_flickr->getValue()) && empty($account->field_fullcontact_klout->getValue()) && empty($account->field_fullcontact_gravatar->getValue()) && empty($account->field_fullcontact_foursquare->getValue()) && empty($account->field_fullcontact_xing->getValue()) && empty($account->field_fullcontact_aboutme->getValue()) && empty($account->field_fullcontact_angellist->getValue()) && empty($account->field_fullcontact_keybase->getValue()) && empty($account->field_fullcontact_plancast->getValue()) && empty($account->field_fullcontact_hackernews->getValue()) && empty($account->field_fullcontact_lastfm->getValue())) {
      $response = fullcontact_curl_call($account, $fc_appid);

      if ($response['status'] === 200 && !empty($response['socialProfiles']) && is_array($response['socialProfiles'])) {
        foreach ($response['socialProfiles'] as $socialprofile) {
          $sfield = 'field_fullcontact_' . $socialprofile['typeId'];
          if ($account->hasField($sfield)) {
            $account->set($sfield, $socialprofile['url']);
            $account->save();
          }
        }
        drupal_set_message(t('Social Profile  imported successfully.'), 'status');
      }
      else {
        drupal_set_message(t('Nothing found on full contact.'), 'error');
      }
    }
  }
}

/**
 * Curl call here.
 */
function fullcontact_curl_call($account, $fc_appid) {
  $email = $account->getEmail();

  $ch = curl_init();
  $url = 'https://api.fullcontact.com/v2/person.json?email=' . $email . '&apiKey=' . $fc_appid;
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
  $output = curl_exec($ch);
  $response = json_decode($output, TRUE);
  curl_close($ch);
  return $response;
}

/**
 * Implements hook_install().
 */
function fullcontact_install() {
  $_socialarray = fullcontactgetsocialarray();
  foreach ($_socialarray as $key => $value) {
    $formField = [
      'type' => 'string',
      'weight' => 9,
      'region' => 'content',
      'settings' => [
        'placeholder' => '',
      ],
      'third_party_settings' => [],
    ];

    $formDisplayConfig = \Drupal::configFactory()->getEditable('core.entity_form_display.user.user.default');
    $formDisplayConfig->set('content.field_' . $key, $formField);
    $formDisplayConfig->save();
  }
}

/**
 * Implements hook_uninstall().
 */
function fullcontact_uninstall() {
  $_socialarray = fullcontactgetsocialarray();
  foreach ($_socialarray as $key => $value) {
    $field_storage = FieldStorageConfig::loadByName('user', 'field_' . $key);
    if (!empty($field_storage)) {
      FieldStorageConfig::loadByName('user', 'field_' . $key)->delete();
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function fullcontact_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == "user_form") {

    $form['fullcontact_social'] = [
      '#type' => 'details',
      '#title' => t('FullContact Social Profiles'),
      '#open' => TRUE,
    ];
    $display_option = \Drupal::config('fullcontact.adminsettings')->get('fullcontact_social_settings');
    $_socialarray = fullcontactgetsocialarray();

    foreach ($_socialarray as $key => $value) {
      if ($display_option[$key] === 1) {
        $form['fullcontact_social']['field_' . $key] = $form['field_' . $key]['widget'];
      }
      unset($form['field_' . $key]);
    }

    $form['actions']['fullcontact_reset'] = [
      '#type' => 'submit',
      '#value' => t('Update Social Profiles'),
      '#weight' => 15,
      '#submit' => ['fullcontact_update'],
    ];
  }
}

/**
 * Implements hook_update().
 */
function fullcontact_update() {
  $current_user = \Drupal::currentUser();
  $account = User::load($current_user->id());
  $fc_appid = \Drupal::config('fullcontact.adminsettings')->get('fullcontact_api');

  if (empty($fc_appid)) {
    drupal_set_message(t('Please check FullContact APP ID.'), 'error');
  }
  else {
    $response = fullcontact_curl_call($account, $fc_appid);

    if ($response['status'] === 200 && !empty($response['socialProfiles']) && is_array($response['socialProfiles'])) {

      foreach ($response['socialProfiles'] as $socialprofile) {
        $sfield = 'field_fullcontact_' . $socialprofile['typeId'];
        if ($account->hasField($sfield)) {
          $account->set($sfield, $socialprofile['url']);
          $account->save();
        }
      }
      drupal_set_message(t('Social Profile  imported successfully.'), 'status');
    }
    else {
      drupal_set_message(t('Nothing found on full contact.'), 'error');
    }
  }
}

/**
 * {@inheritdoc}
 */
function fullcontactgetsocialarray() {
  return [
    'fullcontact_facebook' => t('Facebook'),
    'fullcontact_googleplus' => t('Google Plus'),
    'fullcontact_instagram' => t('Instagram'),
    'fullcontact_linkedin' => t('Linkedin'),
    'fullcontact_twitter' => t('Twitter'),
    'fullcontact_youtube' => t('Youtube'),
    'fullcontact_quora' => t('Quora'),
    'fullcontact_flickr' => t('Flickr'),
    'fullcontact_github' => t('Github'),
    'fullcontact_pinterest' => t('Pinterest'),
    'fullcontact_klout' => t('Klout'),
    'fullcontact_gravatar' => t('Gravatar'),
    'fullcontact_foursquare' => t('Foursquare'),
    'fullcontact_xing' => t('Xing'),
    'fullcontact_aboutme' => t('About.me'),
    'fullcontact_angellist' => t('AngelList'),
    'fullcontact_keybase' => t('Keybase'),
    'fullcontact_plancast' => t('Plancast'),
    'fullcontact_hackernews' => t('HackerNews'),
    'fullcontact_lastfm' => t('Last.FM'),
  ];
}
