<?php

/**
 * @file
 * Contains mediawiki_api.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function mediawiki_api_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mediawiki_api module.
    case 'help.page.mediawiki_api':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('MediaWiki API') . '</p>';
      $output .= '<p>' . t('This simple module provides input filter which generates HTML based on MediaWiki syntax via API.
         See <a href="http://www.mediawiki.org/wiki/Help:Formatting">MediaWiki syntax reference</a> for detailed syntax.') . '</p>';
      return $output;
    default:
  }
}

/**
 * Implements hook_file_download() for MediaWiki thumbnails. Based on image_file_download().
 */
function mediawiki_api_file_download($uri) {
  $path = file_uri_target($uri);
  // Private file access for image style derivatives.
  if (strpos($path, 'thumb/') === 0) {
    // Check that the file exists and is an image.
    $image = \Drupal::service('image.factory')->get($uri);
    if ($image->isValid()) {
      return [
        // Send headers describing the image's size, and MIME-type.
        'Content-Type' => $image->getMimeType(),
        'Content-Length' => $image->getFileSize(),
        // By not explicitly setting them here, this uses normal Drupal
        // Expires, Cache-Control and ETag headers to prevent proxy or
        // browser caching of private images.
      ];
    }
    return -1;
  }
}
