<?php

/**
 * @file
 * OWASP-compliant login velocity check.
 *
 * This Drupal module performs OWASP-compliant login velocity check by
 * comparing geolocation of user's current IP address against
 * geolocation of same user's IP address during previous login session
 * within time period specified in module's settings.
 */

use Drupal\Core\Extension\ModuleHandlerInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */

function owasp_login_velocity_check_form_alter(&$form, &$form_state, $form_id) {

  global $conf;

  switch ($form_id) {
    case 'user_login_block':
    case 'user_login_form':
      //if (!isset($conf['owasp_login_velocity_check_time'])) {
      //  variable_set('owasp_login_velocity_check_time', 20);
      //}

      //if (!isset($conf['owasp_login_velocity_check_errormsg'])) {
      //  variable_set('owasp_login_velocity_check_errormsg', "You're attempting to login from a different geographic location than your recent session. As a security precaution, this login was blocked. Please try login at a later time.");
      //}

      array_unshift($form['#validate'], 'owasp_login_velocity_check_validate');
      break;
  }

}


/**
 * Implements hook_validate().
 */
function owasp_login_velocity_check_validate($node, $form_state) {

  $config = \Drupal::config('owasp_login_velocity_check.settings');

  // Get uid and timezone for user by name.
  $result = db_query("SELECT uid, timezone FROM users_field_data WHERE name = :name or mail = :mail", array(':name' => $node['name']['#value'], ':mail' => $node['name']['#value']))->fetch();

  if (isset($result->uid)) {

    $uid = $result->uid;
    $timezone = $result->timezone;

    date_default_timezone_set($timezone);
    $current_timestamp = time();

    // Get IP address and time of the last known valid log-in.
    $result = db_query("SELECT hostname, timestamp from watchdog WHERE message = :message and uid = :uid order by `wid` DESC limit 0,1", array(':message' => t('Session opened for %name.'), ':uid' => $uid))->fetch();

    if (isset($result->hostname)) {
      $prior_ip = $result->hostname;
      $prior_timestamp = $result->timestamp;

      $current_ip = Drupal::request()->getClientIp();

      $timediff = $config->get('owasp_login_velocity_check.check_time') * 60;

      // Checks if last valid log-in IP and current one do match during
      // velocity check period.
      if ($current_ip != $prior_ip && $current_timestamp - $prior_timestamp < $timediff) {

        $address = 'https://www.oss-usa.com/ip2location/ip2location.php?prior_ip=' . $prior_ip . '&current_ip=' . $current_ip;

        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $address);
        curl_setopt($ch, CURLOPT_HEADER, FALSE);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, TRUE);
        $data = curl_exec($ch);
        curl_close($ch);

        list($country1, $country2) = explode("=", $data);

        // If IP from different countries then show error.
        if ($country1 != $country2) {
          //form_set_error('name', $config->get('owasp_login_velocity_check.check_errormsg'));
          $form_state->setErrorByName('name', t($config->get('owasp_login_velocity_check.check_errormsg')));
        }

      }

    }

  }

}
