<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeForm;
use Drupal\node\NodeInterface;
use Drupal\node\NodeTypeInterface;
use Drupal\node\Entity\NodeType;
use Drupal\file\Entity\File;
use Drupal\urban_airship_web_push_notifications\Helper\SnippetHtml;
use Drupal\urban_airship_web_push_notifications\Helper\Notification;
use Drupal\urban_airship_web_push_notifications\Helper\PushWorkerJs;
use Drupal\urban_airship_web_push_notifications\Helper\Reports;
use Drupal\Core\Datetime\DrupalDateTime;

/**
 * Implements hook_form_alter().
 */
function urban_airship_web_push_notifications_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();
  if ($form_object instanceof NodeForm && \Drupal::currentUser()->hasPermission('send urban airship web push notifications')) {
    $entity = $form_object->buildEntity($form, $form_state);
    $type = NodeType::load($entity->bundle());
    if ($type->getThirdPartySetting('urban_airship_web_push_notifications', 'uawn_enabled', FALSE)) {
      $form['urban_airship_web_push_notifications_group'] = [
        '#type'   => 'details',
        '#title'  => t('Airship Web Notifications'),
        '#group'  => 'advanced',
        '#weight' => 100,
      ];
      $push_worker_js = (new PushWorkerJs())->parse();
      $form['urban_airship_web_push_notifications_title'] = [
        '#type'        => 'textfield',
        '#title'       => t('Notification Title'),
        '#description' => !empty($push_worker_js['defaultTitle'])
          ? t('Optional field. If field is left blank, the default title "<em>@title</em>" will be used.',
              ['@title' => $push_worker_js['defaultTitle']]
            )
          : '',
        '#group'       => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_icon_wrapper'] = [
        '#type'  => 'fieldgroup',
        '#title' => '',
        '#group' => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_icon_wrapper']['urban_airship_web_push_notifications_icon'] = [
        '#type'              => 'managed_file',
        '#title'             => t('Notification Icon'),
        '#upload_location'   => 'public://urban-airship/icons/',
        '#description'       => t('Optional field. Upload an image to be used for the notification icon. If no image is uploaded, the default icon will be used. Supported file types: png gif jpg jpeg. Maximum file size: 2MB. Not supported in Safari, default icon will be used.'),
        '#upload_validators' => [
          'file_validate_extensions' => ['png gif jpg jpeg'],
          'file_validate_size'       => [2048000]
        ],
      ];
      $form['urban_airship_web_push_notifications_text'] = [
        '#type'          => 'textarea',
        '#title'         => t('Notification Text'),
        '#description'   => t('Text for notification body. Default can be changed in the content type settings.'),
        '#default_value' => $type->getThirdPartySetting('urban_airship_web_push_notifications', 'uawn_notification', ''),
        '#group'         => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_action_url'] = [
        '#type'        => 'textfield',
        '#title'       => t('Action URL'),
        '#description' => t('Optional Field. This URL will be where users are sent when they click on your notification. If field is left blank, by default users will be sent to the URL of this piece of content on your website.'),
        '#group'       => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_interaction'] = [
        '#type'        => 'checkbox',
        '#title'       => t('Require Interaction'),
        '#description' => t('If checked the end user must interact with the notification in order to remove it from their computer screen. Not supported in Safari.'),
        '#group'       => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_wrapper'] = [
        '#type'   => 'fieldgroup',
        '#title'  => '',
        '#group'  => 'urban_airship_web_push_notifications_group',
      ];
      $form['urban_airship_web_push_notifications_wrapper']['urban_airship_web_push_notifications'] = [
        '#type'          => 'radios',
        '#title'         => t('Send web notification'),
        '#options'       => [
          0 => t('Do not send'),
          1 => t('On content save'),
          2 => t('Schedule notification'),
        ],
        '#default_value' => 0,
      ];
      $form['urban_airship_web_push_notifications_scheduled_wrapper'] = [
        '#type'   => 'fieldgroup',
        '#title'  => '',
        '#group'  => 'urban_airship_web_push_notifications_group',
        '#states' => [
          'visible' => [
            ':input[name="urban_airship_web_push_notifications"]' => ['value' => 2]
          ],
        ],
      ];
      $form['urban_airship_web_push_notifications_scheduled_wrapper']['urban_airship_web_push_notifications_scheduled'] = [
        '#type'             => 'datetime',
        '#title'            => t('Date and Time'),
        '#date_date_format' => 'Y-m-d',
        '#date_time_format' => 'H:i',
        '#default_value'    => DrupalDateTime::createFromTimestamp(time()),
      ];
      if (!empty($entity->id())) {
        $reports =  (new Reports())->loadAll($entity->id());
        if (!empty($reports['count'])) {
          $form['urban_airship_web_push_notifications_group']['urban_airship_web_push_notifications_report'] = [
            '#markup' => '<strong>' . t('Notifications Sent') . '</strong><div class="description">' . t('For full message history & reporting, visit your <a href="https://go.urbanairship.com/accounts/login/" target="_blank">Airship dashboard</a>.') . '</div>',
            '#weight' => 20,
          ];
          $form['urban_airship_web_push_notifications_group']['urban_airship_web_push_notifications_report_table'] = $reports['table'];
        }
      }
      $form['#entity_builders'][] = 'urban_airship_web_push_notifications_form_builder';
    }
  }
}

/**
 * Entity type Airship Web Notifications settings.
 */
function urban_airship_web_push_notifications_form_node_type_form_alter(&$form, FormStateInterface $form_state) {
  $type = $form_state->getFormObject()->getEntity();
  $form['urban_airship_web_push_notifications'] = [
    '#type'  => 'details',
    '#title' => t('Airship Web Notifications'),
    '#group' => 'additional_settings',
  ];
  $form['urban_airship_web_push_notifications']['uawn_enabled'] = [
    '#type'          => 'checkbox',
    '#title'         => t('Enable Notifications'),
    '#default_value' => $type->getThirdPartySetting('urban_airship_web_push_notifications', 'uawn_enabled', FALSE),
  ];
  $form['urban_airship_web_push_notifications']['uawn_notification'] = [
    '#type'          => 'textarea',
    '#title'         => t('Default Notification Text'),
    '#default_value' => $type->getThirdPartySetting('urban_airship_web_push_notifications', 'uawn_notification'),
  ];
  if (\Drupal::moduleHandler()->moduleExists('token')) {
    $form['urban_airship_web_push_notifications']['token_tree'] = [
      '#theme'       => 'token_tree_link',
      '#token_types' => ['node'],
    ];
  }
  $form['#entity_builders'][] = 'urban_airship_web_push_notifications_form_node_type_form_submit';
}

/**
 * Save entity type Airship Web Notifications settings.
 */
function urban_airship_web_push_notifications_form_node_type_form_submit($entity_type, NodeTypeInterface $type, &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('urban_airship_web_push_notifications', 'uawn_enabled', $form_state->getValue('uawn_enabled'));
  $type->setThirdPartySetting('urban_airship_web_push_notifications', 'uawn_notification', $form_state->getValue('uawn_notification'));
}

/**
 * Check if Send Notification option is checked.
 */
function urban_airship_web_push_notifications_form_builder($entity_type, NodeInterface $entity, &$form, FormStateInterface $form_state) {
  $entity->urban_airship_web_push_notifications_title = $form_state->getValue('urban_airship_web_push_notifications_title');
  $entity->urban_airship_web_push_notifications_text = $form_state->getValue('urban_airship_web_push_notifications_text');
  $entity->urban_airship_web_push_notifications = $form_state->getValue('urban_airship_web_push_notifications');
  $entity->urban_airship_web_push_notifications_scheduled = $form_state->getValue('urban_airship_web_push_notifications_scheduled');
  $entity->urban_airship_web_push_notifications_action_url = $form_state->getValue('urban_airship_web_push_notifications_action_url');
  $entity->urban_airship_web_push_notifications_interaction = $form_state->getValue('urban_airship_web_push_notifications_interaction');
  $icon = $form_state->getValue('urban_airship_web_push_notifications_icon');
  if (!empty($icon[0])) {
    $file = File::load($icon[0]);
    if (!empty($file->id())) {
      $entity->urban_airship_web_push_notifications_icon = file_create_url($file->getFileUri());
    }
  }
}

/**
 * Implements hook_entity_insert().
 */
function urban_airship_web_push_notifications_entity_insert(EntityInterface $entity) {
  (new Notification())->send($entity);
}

/**
 * Implements hook_entity_update().
 */
function urban_airship_web_push_notifications_entity_update(EntityInterface $entity) {
  (new Notification())->send($entity);
}

/**
 * Implements hook_page_attachments().
 */
function urban_airship_web_push_notifications_page_attachments(array &$page) {
  $route = \Drupal::routeMatch()->getRouteObject();
  if (!\Drupal::service('router.admin_context')->isAdminRoute($route)) {
    $config = \Drupal::config('urban_airship_web_push_notifications.configuration');
    $page['#attached']['library'][] = 'urban_airship_web_push_notifications/opt_in.prompt';
    // Setting cookie expiration (number of days) in the drupalSettings globals.
    $page['#attached']['drupalSettings']['urban_airship_web_push_notifications'] = [
      'hide_optin_prompt'    => !empty($config->get('hide_optin_prompt')),
      'prompt_notifications' => ($prompt_notifications = $config->get('prompt_notifications')) ? $prompt_notifications : 'on_page_load',
      'page_views'           => ($page_views = $config->get('page_views')) ? $page_views : 1,
      'temporarily_disable'  => ($temporarily_disable = $config->get('temporarily_disable')) ? $temporarily_disable : 10,
    ];
    $page['#attached']['html_head'][] = [
      [
        '#tag'   => 'script',
        '#value' => (new SnippetHtml())->getSnippet(),
      ],
      'uawn_snippet'
    ];
  }
}

/**
 * Implements hook_page_bottom().
 */
function urban_airship_web_push_notifications_page_bottom(array &$page) {
  $route = \Drupal::routeMatch()->getRouteObject();
  if (!\Drupal::service('router.admin_context')->isAdminRoute($route)) {
    $page['urban_airship_web_push_notifications'] = [
      '#theme' => 'urban_airship',
      '#cache' => [
        'tags' => ['urban_airship_optin_prompt'],
      ],
    ];
  }
}

/** 
 * Implements hook_preprocess_HOOK().
 */
function urban_airship_web_push_notifications_preprocess_urban_airship(&$variables) {
  $module_handler = \Drupal::service('module_handler');
  $path = $module_handler->getModule('urban_airship_web_push_notifications')->getPath();
  $variables['optin_prompt_bell_icon_path'] = '/' . $path . '/assets/img/bell.svg';
  // Set `Opt-in` prompt variables.
  $config = \Drupal::config('urban_airship_web_push_notifications.configuration');
  $variables['optin_prompt_type'] = $config->get('optin_prompt_type');
  $variables['optin_banner_position'] = $config->get('optin_banner_position');
  $variables['optin_prompt'] = t($config->get('optin_prompt'));
  $variables['optin_allow_label'] = t($config->get('optin_allow_label'));
  $variables['optin_dismiss_label'] = t($config->get('optin_dismiss_label'));
  $variables['optin_position'] = $config->get('optin_position');
}

/**
 * Implements hook_theme().
 */
function urban_airship_web_push_notifications_theme($existing, $type, $theme, $path) {
  return [
    'urban_airship' => [
      'variables' => [],
    ],
  ];
}
