<?php

use Drupal\Core\Form\FormStateInterface;

/**
*	Implement hook_form_BASE_FORM_ID_alter().
*/
function roles_nested_form_USER_ROLE_FORM_alter(&$form, FormStateInterface $form_state, $form_id) {
	$form['actions']['submit']['#submit'][] = 'roles_nested_save_submit';
}

function roles_nested_save_submit($form, FormStateInterface $form_state) {
	$values = $form_state->getValues();
	$connection = \Drupal::database();
		// Check Table Exists
    if ($connection->schema()->tableExists('roles_nested')) {
    	$current_path = \Drupal::service('path.current')->getPath();
			$path_args = explode('/', $current_path);
			$roles = $path_args[4];
			if ($roles == 'add') {
        $connection->insert('roles_nested')
          ->fields([
        		'name' => $values['label'],
        		'machine_name' => $values['id'],
        		'itemgroup' => $values['id']
        	])
        	->execute();
      } 
      else {
      	$connection->update('roles_nested')
          ->fields(['name' => $values['label']])
          ->condition('machine_name', $path_args[5])
        	->execute();
      }  	
    }
    
}	

function roles_nested_form_USER_ROLE_DELETE_FORM_alter(&$form, FormStateInterface $form_state, $form_id) {
	$form['actions']['submit']['#submit'][] = 'roles_nested_delete_submit';

}

function roles_nested_delete_submit($form, FormStateInterface $form_state) {
	$current_path = \Drupal::service('path.current')->getPath();
	$path_args = explode('/', $current_path);
	$role_id = $path_args[5];

	$connection = \Drupal::database();
	if ($connection->schema()->tableExists('roles_nested')) {
		$query = $connection->delete('roles_nested')
			->condition('machine_name', $role_id)
			->execute();
	}
}	