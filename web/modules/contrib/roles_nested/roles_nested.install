<?php

/**
*	Implements hook_schema()
*/

function roles_nested_schema() {
	$schema['roles_nested'] = [
		'description' => 'roles_nested drag table',
		'fields' => [
			'id' => [
				'description' => 'primary key each row',
				'type' => 'serial',
				'unsigned' => TRUE,
				'not null' => TRUE,
			],
			'name' => [
				'description' => 'Add Role Name',
				'type' => 'varchar',
				'length' => 32,
				'not null' => TRUE,
				'default' => '',
			],
			'machine_name' => [
				'description' => 'Add Machine Name',
				'type' => 'varchar',
				'length' => 32,
				'not null' => TRUE,
				'default' => '',
			],
			'itemgroup' => [
				'description' => 'group this item belongs',
				'type' => 'varchar',
				'length' => 32,
				'not null' => TRUE,
				'default' => '',
			],
			'weight' => [
				'description' => 'sortorder weight item',
				'type' => 'int',
				'length' => 11,
				'not null' => TRUE,
				'default' => 0,
			],
			'pid' => [
				'description' => 'primary id of parent item',
				'type' => 'int',
				'length' => 11,
				'unsigned' => TRUE,
				'not null' => TRUE,
				'default' => 0
			],
		],
		'primary key' => ['id'],
	];
	
	return $schema;
}

/**
 * Implements hook_install().
 */
function roles_nested_install() {
	// Import Roles
	$roles = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
    $i = 0;
    foreach ($roles as $role => $roleObj) {
      $role_list[$i]['name'] = $roleObj->get('label');
      $role_list[$i]['machine_name'] = $role;
      $role_list[$i]['itemgroup'] = $role;
      $i++;
    }
    
    $connection = \Drupal::database();
    if ($connection->schema()->tableExists('roles_nested')) {
      foreach ($role_list as $value) {
        $connection->insert('roles_nested')->fields($value)->execute();
      } 
    }

}

/**
 * Implements hook_uninstall().
 */
function roles_nested_uninstall() {
	db_drop_table('roles_nested');
}

