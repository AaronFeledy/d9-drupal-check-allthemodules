<?php


/*
 * Implements hook_theme().
 */
function sl_match_theme($existing, $type, $theme, $path) {
  return array(
    'sl_match_tabs' => array(
      'variables' => array(
        'prematch_info' => NULL,
        'match_status' => NULL,
        'extra_classes_rosters' => NULL,
        'home_ini' => NULL,
        'home_subs' => NULL,
        'home_coach' => NULL,
        'home_moments' => NULL,
        'away_ini' => NULL,
        'away_subs' => NULL,
        'away_coach' => NULL,
        'away_moments' => NULL
      ),
      'render element' => 'elements',
      'template' => 'sl_match_tabs',
    ),
  );
}

/*
 * Implements hook_entity_presave().
*/
function sl_match_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {

  if ($entity->getEntityTypeId() == 'node' && in_array($entity->bundle(), array('sl_match'))) {
    $entity->field_sl_teams = [];
    $entity->field_sl_teams[] = ['target_id' => $entity->field_sl_match_team_home->target_id];
    $entity->field_sl_teams[] = ['target_id' => $entity->field_sl_match_team_away->target_id];

    if ($entity->title->value == '' || $entity->title->value == ' x ') {
      $entity->setTitle($entity->field_sl_match_team_home->entity->title->value . ' x ' . $entity->field_sl_match_team_away->entity->title->value);
      $entity->field_sl_administrative_title = $entity->title->value;
    }
  }

}

/**
 * Implements hook_entity_update().
 * @param \EntityInterface $entity
 */
function sl_match_entity_update($entity) {

  if ($entity->getEntityTypeId() == 'node' && $entity->bundle() == 'sl_match') {

    // sets match to be processed
    $moduleHandler = \Drupal::service('module_handler');
    if ($moduleHandler->moduleExists('sl_stats')) {
      $queue_factory = \Drupal::service('queue');
      $queue = $queue_factory->get('sl_match_worker');

      $item = new \stdClass();
      $item->nid = $entity->id();
      $queue_items = \Drupal::service('database')->select('queue')
        ->fields('queue', array(
          'item_id'
        ))
        ->condition('name', 'sl_match_worker')
        ->condition('data', serialize($item))->execute()->fetchAll();

      if (!count($queue_items)) {
        $queue->createItem($item);
      }
    }

  }
}