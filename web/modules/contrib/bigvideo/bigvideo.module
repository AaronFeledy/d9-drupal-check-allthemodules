<?php

/**
 * @file
 * Module hooks implementation.
 */

use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_page_attachments().
 */
function bigvideo_page_attachments(array &$attachments) {
  if (\Drupal::service('module_handler')->moduleExists('context')) {
    $context_manager = \Drupal::service('context.manager');
    /** @var \Drupal\context\ContextReactionInterface $reaction */
    foreach ($context_manager->getActiveReactions('bigvideo') as $reaction) {
      if ($settings = $reaction->execute()) {
        $attachments['#attached']['drupalSettings']['bigvideo'] = $settings;
        $attachments['#attached']['library'][] = 'bigvideo/connector';
      }
    }
  }

  $entity_type_manager = \Drupal::entityTypeManager();
  $page_storage = $entity_type_manager->getStorage('bigvideo_page');
  if ($pages = $page_storage->loadByProperties(['status' => TRUE])) {
    $matcher = \Drupal::service('path.matcher');
    $current_path = \Drupal::service('path.current')->getPath();
    $path_alias = Unicode::strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($current_path));

    /** @var \Drupal\bigvideo\Entity\BigvideoPageInterface $page */
    foreach ($pages as $page) {
      if ($matcher->matchPath($path_alias, $page->getPath())) {
        $source_storage = $entity_type_manager->getStorage('bigvideo_source');
        /** @var \Drupal\bigvideo\Entity\BigvideoSourceInterface $source */
        if ($source = $source_storage->load($page->getSource())) {
          $attachments['#attached']['drupalSettings']['bigvideo'] = [
            'links' => $source->createVideoLinks(),
            'selector' => $page->getSelector() ?: $page::DEFAULT_SELECTOR,
          ];
          $attachments['#attached']['library'][] = 'bigvideo/connector';
        }
        else {
          \Drupal::logger('bigvideo')->error('Attempting to use a non-existent source (@source_id).', [
            '@source_id' => $page->getSource(),
          ]);
        }
      }
    }
  }
}
