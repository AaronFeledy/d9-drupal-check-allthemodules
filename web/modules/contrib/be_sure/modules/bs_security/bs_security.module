<?php

/**
 * @file
 * Contains bs_security.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Database\Database;
use Drupal\Core\Database\Query\Condition;

/**
 * Implements hook_help().
 */
function bs_security_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the bs_security module.
    case 'help.page.bs_security':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Be sure about security part of your Drupal site') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_sure_info().
 */
function bs_security_sure_info() {
  $items['security'] = [
    'title' => 'Security',
    'description' => 'Be sure about security part of your Drupal site.',
    'elements' => [
      [
        'title' => 'Security',
        'items' => [
          [
            'ok' => 'Superadmin username is not common',
            'nok' => 'Common Admin username',
            'callback' => 'bs_security_admin_username',
          ],
          [
            'ok' => 'Site errors not visible',
            'nok' => 'Site errors visible',
            'callback' => 'bs_security_visible_errors',
          ],
          [
            'ok' => 'PHP Filter module disabled',
            'nok' => 'PHP Filter module enabled',
            'callback' => 'bs_security_php_filter',
          ],
          [
            'ok' => '%module module disabled',
            'nok' => '%module module enabled',
            'callback' => 'bs_security_code_filter',
            'args' => [
              '%module' => be_sure_link_from_uri('Code Filter', 'https://www.drupal.org/project/codefilter'),
            ],
          ],
          [
            'ok' => 'PHP Register Globals disabled',
            'nok' => 'PHP Register Globals enabled',
            'callback' => 'bs_security_php_globals',
          ],
          [
            'ok' => '%module module enabled',
            'nok' => '%module module not enabled',
            'callback' => 'bs_security_seckit',
            'args' => [
              '%module' => be_sure_link_from_uri('Security Kit', 'https://www.drupal.org/project/seckit'),
            ],
          ],
          [
            'ok' => '%module module enabled',
            'nok' => '%module module not enabled',
            'callback' => 'bs_security_username_enumeration_prevention',
            'args' => [
              '%module' => be_sure_link_from_uri('Username Enumeration Prevention', 'https://www.drupal.org/project/username_enumeration_prevention'),
            ],
          ],
          [
            'ok' => '%module module enabled',
            'nok' => '%module module disabled',
            'callback' => 'bs_security_password_policy',
            'args' => [
              '%module' => be_sure_link_from_uri('Password Policy', 'https://www.drupal.org/project/password_policy'),
            ],
          ],
          [
            'ok' => 'Users table contains anonymous user',
            'nok' => 'Users table do not contains anonymous user',
            'callback' => 'bs_security_users_anonymous',
          ],
          [
            'ok' => 'Syslog module enabled',
            'nok' => 'Syslog module not enabled',
            'callback' => 'bs_security_syslog',
          ],
        ],
      ],
    ],
  ];

  return $items;
}

/**
 * Check for common Admin username.
 */
function bs_security_admin_username() {
  $common_usernames = [
    'admin',
    'administrator',
    'root',
    'adm',
    'manager',
    'system',
    'superuser',
  ];

  $or = new Condition('OR');
  foreach ($common_usernames as $username) {
    $or->condition('u.name', $username, 'LIKE');
  }

  $query = Database::getConnection('default')->select('users_field_data', 'u');
  $query->fields('u', ['uid']);
  $query->condition('u.uid', 1);
  $query->condition($or);

  return ! (bool) $query->execute()->fetchField();
}

/**
 * Check visibility of site errors.
 */
function bs_security_visible_errors() {
  return \Drupal::config('system.logging')->get('error_level', 2) == 0;
}

/**
 * Check availability of PHP Filter module.
 */
function bs_security_php_filter() {
  return !\Drupal::moduleHandler()->moduleExists('php');
}

/**
 * Check availability of Code Filter module.
 */
function bs_security_code_filter() {
  return !\Drupal::moduleHandler()->moduleExists('codefilter');
}

/**
 * Check availability of Register Globals variable.
 */
function bs_security_php_globals() {
  $globals = ini_get('register_globals');

  if (is_string($globals) && (strcasecmp($globals, 'on') == 0)) {
    $globals = TRUE;
  }

  return !$globals;
}

/**
 * Check availability of Security Kit module.
 */
function bs_security_seckit() {
  return \Drupal::moduleHandler()->moduleExists('seckit');
}

/**
 * Check availability of Username Enumeration Prevention module.
 */
function bs_security_username_enumeration_prevention() {
  return \Drupal::moduleHandler()->moduleExists('username_enumeration_prevention');
}

/**
 * Check availability of Password Policy module.
 */
function bs_security_password_policy() {
  return \Drupal::moduleHandler()->moduleExists('password_policy');
}

/**
 * Check availability of Anonymous user.
 */
function bs_security_users_anonymous() {
  return \Drupal::database()->select('users', 'u')
    ->fields('u')
    ->condition('u.uid', 1)
    ->execute()
    ->fetchCol();
}

/**
 * Check availability of Syslog module.
 */
function bs_security_syslog() {
  return \Drupal::moduleHandler()->moduleExists('syslog');
}
