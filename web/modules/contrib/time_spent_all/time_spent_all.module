<?php

use Drupal\Component\Render\HtmlEscapedText;
use Symfony\Component\HttpFoundation;
use Drupal\Core\Render\Markup;

use Drupal\Core\Controller\ControllerBase;
use Drupal\Core\Url;
use Drupal\user\UserInterface;
use Drupal\node\NodeInterface;
use \Drupal\user\Entity\User;
use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\HttpFoundation\JsonResponse;


/**
 * Determine if current user's role should be tracked.
 */
function time_spent_all_user_has_role() {
  $account = \Drupal::currentUser();

  if ($account->id() <  0) {
   return TRUE;
  }

  $roles = \Drupal::config('time_spent_all.settings')->get('time_spent_all_roles');
  //if all roles were uncheck at settings, no role will be tracked
  if (($roles == 'all') || (in_array('all', $roles))) {
    return TRUE;
  }
  foreach ($roles as $role) {
    if (is_array($account->getRoles()) && in_array($role, array_values($account->getRoles()))) {
    return TRUE;
    }
  } 
  return TRUE;
}

/**
 * @param $sec
 * @param bool $padHours
 *
 * @return string
 */
function time_spent_all_sec2hms($sec, $padHours = FALSE) {
  $hms = "";
  $hours = intval(intval($sec) / 3600);
  $hms .= ($padHours)
    ? str_pad($hours, 2, "0", STR_PAD_LEFT) . ":"
    : $hours . ":";
  $minutes = intval(($sec / 60) % 60);
  $hms .= str_pad($minutes, 2, "0", STR_PAD_LEFT) . ":";
  $seconds = intval($sec % 60);
  $hms .= str_pad($seconds, 2, "0", STR_PAD_LEFT);
  return $hms;
}

/**
 *  Implements hook_page_attachments_alter().
 */
function time_spent_all_page_attachments_alter(array &$attachments) {
  if (time_spent_all_user_has_role()) {
    $timer = \Drupal::config('time_spent_all.settings')->get('time_spent_all_timer');
    $limit = \Drupal::config('time_spent_all.settings')->get('time_spent_all_limit');
    $mynide = -1; //false value

    //checks if this is a node page. taxonomy or views pages won't be counted.
    //confirm if this node type and user role will be tracked
    $nodetypes = \Drupal::config('time_spent_all.settings')->get('time_spent_all_node_types');

    
$ip_exclude  = \Drupal::config('time_spent_all.settings')->get('time_spent_all_ip_exclude_tracking');
  $ip_exclude = explode(" ", $ip_exclude);
    $ip_address =  \Drupal::request()->getClientIp();
  if ( ! in_array( $ip_address, $ip_exclude ) )
  {

    if($node = \Drupal::routeMatch()->getParameter('node')) {
      if (($nodetypes === 'all' || $nodetypes[$node->getType()] === $node->getType() )) {
        $mynide = $node->id();
      }

      $token_generator = \Drupal::csrfToken();
      $token = $token_generator->get();
      $settings = array(
        'timer' =>  new HtmlEscapedText($timer),
        'limit' =>  new HtmlEscapedText($limit),
        'nid' => $mynide,
        'sectoken' => $token
      );

      $attachments['#attached']['library'][] = 'time_spent_all/tracking';
      $attachments['#attached']['drupalSettings']['time_spent_all'] = $settings;
    }
 // is front 
     


 if((\Drupal::service('path.matcher')->isFrontPage())) {
  $home_node  = \Drupal::config('time_spent_all.settings')->get('time_spent_all_home_nide_id');
  $mynide = $home_node;
 
 
      

      $token_generator = \Drupal::csrfToken();
      $token = $token_generator->get();
      $settings = array(
        'timer' =>  new HtmlEscapedText($timer),
        'limit' =>  new HtmlEscapedText($limit),
        'nid' => $mynide,
        'sectoken' => $token
      );

      $attachments['#attached']['library'][] = 'time_spent_all/tracking';
      $attachments['#attached']['drupalSettings']['time_spent_all'] = $settings;
    }



  }
}
}
/**
 * Page callback for a detail page report by user mail psq.
 */
function time_spent_all_detail_mail($ip) { 
    $tot_time = 0;
  $header = array(t("Date & Time"), t("Page"), t('Time Spent'));
  $rows = array();
   
  $pager = 10000000000;
  $html_table = '<table style="color: rgb(0, 0, 0); font-family: arial; font-size:
      medium; font-style: normal; font-variant-ligatures: normal;
      font-variant-caps: normal; font-weight: normal; letter-spacing:
      normal; orphans: 2; text-align: start; text-indent: 0px;
      text-transform: none; white-space: normal; widows: 2;
      word-spacing: 0px; -webkit-text-stroke-width: 0px;
      text-decoration-style: initial; text-decoration-color: initial;"
      width="800px" cellspacing="0" cellpadding="0" align="center">
      <tbody>
        <tr>
          <td>
            <table width="100%" cellspacing="0" cellpadding="0">
              <tbody>
                <tr style="background-color: rgb(70, 70, 70); color:
                  white;" align="left">
                  <td style="padding-left: 10px;border-right: 1px solid rgb(221, 221, 221);
                    font-weight: bold;" height="40px" width="30%">Date
                    &amp; Time</td>
                  <td style="padding-left: 10px;border-right: 1px solid rgb(221, 221, 221);
                    font-weight: bold;" height="40px" width="45%">Page</td>
                  <td style="padding-left: 10px;font-weight: bold;" height="40px"
                    width="25%">Time Spent</td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
        <tr>
          <td>
            <table class="table-2" width="100%" cellspacing="0"
              cellpadding="0" border="0">
              <tbody>';


  $header = array(array(
              'data' => t("Date & Time"), 
              'style' => 'text-align:center;background-color:#464646;color:#fff;font-weight:bold'
            ),
  array(
              'data' => t("Page"), 
              'style' => 'text-align:center;background-color:#464646;color:#fff;font-weight:bold'
            ),
  array(
              'data' => t("Time Spent"), 
              'style' => 'text-align:center;background-color:#464646;color:#fff;font-weight:bold'
            ));
    $rows = array();
     $query = db_select('time_spent_all_page', 'tsu');
   // $query = $database->select('time_spent_all_page', 'tsu');
      $query->fields('tsu', array('timespent','ip','url','postdate'));
    $query->fields('u', array('uid'));
    $query->fields('node', array('nid', 'title'));
    $query->condition('ip',$ip,'=');
    $query->join('node_field_data', 'node', 'node.nid = tsu.nid');
    $query->join('users_field_data', 'u', 'u.uid = tsu.uid');
    $query->orderBy('tsu.postdate', 'ASC');

    $count_result = $query->execute();
    $count_result->allowRowCount = TRUE;
    $number = $count_result->rowCount();

    $query = $query->extend('Drupal\Core\Database\Query\PagerSelectExtender');
    $query->limit($pager);
    $query->addTag('node_access');

    $nodes = $query->execute()->fetchAll();
    foreach ($nodes as $row) {
    $postdate = $row->postdate;
    $postdate=date_create($postdate);
$postdate =  date_format($postdate,"d M, Y | h:i:sA");

        $tot_time +=$row->timespent;
      $user = User::load($row->uid);
      $username = array(
        '#theme' => 'username',
        '#account' => $user,
      );
      $username = drupal_render($username);
      $url = Url::fromRoute('entity.node.canonical', array('node' => $row->nid));
      $rows[]  = array(
        $postdate,        
         \Drupal::l($row->title, $url), 
        time_spent_all_sec2hms($row->timespent)
      );
  


  $html_table .= '<tr height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-left: 1px solid
                    rgb(221, 221, 221);" width="30%">'.$postdate.'</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="45%">'.\Drupal::l($row->title, $url).'</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="25%">'.time_spent_all_sec2hms($row->timespent).'</td>
                </tr>';



    }
$rows[] = array(array(
              'data' => 'Total Hours Spent (HH:MM:SS)',
              'colspan' => 2,
              'style' => 'text-align: center;background-color:#464646;color:#fff;font-weight: bold;'
            ),array('data' =>time_spent_all_sec2hms($tot_time),'style' => 'background-color:#464646;color:#fff;font-weight: bold;text-align: left;'));
    $table = array(
      '#type' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#attributes' => array(
        'style' => 'width:630px;margin:0 auto;',
      ), 
    );

    
    pager_default_initialize($number, $pager);

    if($number > $pager) {
     // $pager = array('#theme' => 'pager');
     // $output[] = $pager;
    }

 $html_table .= ' </tbody>
            </table>
          </td>
        </tr>
        <tr>
          <td>
            <table width="100%" cellspacing="0" cellpadding="0"
              border="0">
              <tbody>
                <tr style="background-color: rgb(70, 70, 70); color:
                  white;">
                  <td style="padding-right: 10px;border-right: 1px solid rgb(221, 221, 221);
                    font-weight: bold;" height="40px" align="right">Total
                    Hours Spent (HH:MM:SS)</td>
                  <td style="padding-left: 10px; font-weight: bold;"
                    height="40px" width="25%">'.time_spent_all_sec2hms($tot_time).'</td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
      </tbody>
    </table>';

 // $output  =  drupal_render($table);
 $output  =  $html_table;
$place_details = '<table style="color: rgb(0, 0, 0); font-family: arial; font-size:
      medium; font-style: normal; font-variant-ligatures: normal;
      font-variant-caps: normal; font-weight: normal; letter-spacing:
      normal; orphans: 2; text-align: start; text-indent: 0px;
      text-transform: none; white-space: normal; widows: 2;
      word-spacing: 0px; -webkit-text-stroke-width: 0px;
      text-decoration-style: initial; text-decoration-color: initial;"
      width="800px" cellspacing="0" cellpadding="0" align="center">
      <tbody>
        <tr>
          <td>
            <table width="100%" cellspacing="0" cellpadding="0">
              <tbody>
                <tr style="background-color: rgb(70, 70, 70); color:
                  white;">
                  <td style="font-weight: bold;" height="40px"
                    align="center">Tracking Information</td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
        <tr>
          <td>
            <table class="table-1" width="100%" cellspacing="0"
              cellpadding="0" border="0">
              <tbody>
                <tr height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="50%">IP</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="50%">'.$ip.'</td>
                </tr>
                <tr style="background-color: rgb(242, 242, 242);"
                  height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="50%">Country</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="50%">'.ip_info($ip, "Country").'</td>
                </tr>
                <tr height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="50%">State</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="50%">'.ip_info($ip, "State").'</td>
                </tr>
                <tr style="background-color: rgb(242, 242, 242);"
                  height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="50%">City</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="50%">'.ip_info($ip, "City").'</td>
                </tr>
                <tr height="30px">
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221); border-left: 1px solid rgb(221,
                    221, 221);" width="50%">Total Hours Spent (HH:MM:SS)</td>
                  <td style="padding-left: 10px; border-bottom: 1px
                    solid rgb(221, 221, 221); border-right: 1px solid
                    rgb(221, 221, 221);" width="50%">'.time_spent_all_sec2hms($tot_time).'</td>
                </tr>
              </tbody>
            </table>
          </td>
        </tr>
      </tbody>
    </table>';



  

   $output = $place_details.$output;
 // print ($output);
//$output .= t("Total Time Spent ".time_spent_all_sec2hms($tot_time));
  return $output;
}

function ip_info($ip = NULL, $purpose = "location", $deep_detect = TRUE) {
    $output = NULL;
    if (filter_var($ip, FILTER_VALIDATE_IP) === FALSE) {
        $ip = $_SERVER["REMOTE_ADDR"];
        if ($deep_detect) {
            if (filter_var(@$_SERVER['HTTP_X_FORWARDED_FOR'], FILTER_VALIDATE_IP))
                $ip = $_SERVER['HTTP_X_FORWARDED_FOR'];
            if (filter_var(@$_SERVER['HTTP_CLIENT_IP'], FILTER_VALIDATE_IP))
                $ip = $_SERVER['HTTP_CLIENT_IP'];
        }
    }
    $purpose    = str_replace(array("name", "\n", "\t", " ", "-", "_"), NULL, strtolower(trim($purpose)));
    $support    = array("country", "countrycode", "state", "region", "city", "location", "address");
    $continents = array(
        "AF" => "Africa",
        "AN" => "Antarctica",
        "AS" => "Asia",
        "EU" => "Europe",
        "OC" => "Australia (Oceania)",
        "NA" => "North America",
        "SA" => "South America"
    );
    if (filter_var($ip, FILTER_VALIDATE_IP) && in_array($purpose, $support)) {


        $ipdat = @json_decode(file_get_contents("http://freegeoip.net/json/" . $ip));

        

        if (@strlen(trim($ipdat->country_code)) == 2) {
            switch ($purpose) {
                case "location":
                    $output = array(
                        "city"           => @$ipdat->geoplugin_city,
                        "state"          => @$ipdat->geoplugin_regionName,
                        "country"        => @$ipdat->geoplugin_countryName,
                        "country_code"   => @$ipdat->geoplugin_countryCode,
                        "continent"      => @$continents[strtoupper($ipdat->geoplugin_continentCode)],
                        "continent_code" => @$ipdat->geoplugin_continentCode
                    );
                    break;
                case "address":
                    $address = array($ipdat->geoplugin_countryName);
                    if (@strlen($ipdat->geoplugin_regionName) >= 1)
                        $address[] = $ipdat->geoplugin_regionName;
                    if (@strlen($ipdat->geoplugin_city) >= 1)
                        $address[] = $ipdat->geoplugin_city;
                    $output = implode(", ", array_reverse($address));
                    break;
                case "city":
                    $output = @$ipdat->city;
                    break;
                case "state":
                    $output = @$ipdat->region_name;
                    break;
                case "region":
                    $output = @$ipdat->geoplugin_regionName;
                    break;
                case "country":
                    $output = @$ipdat->country_name;
                    break;
                case "countrycode":
                    $output = @$ipdat->geoplugin_countryCode;
                    break;
            }
        }
    }
    return $output;
}
function time_spent_all_mail_alter(&$message){
  $webform_id  = \Drupal::config('time_spent_all.settings')->get('time_spent_all_mail_attach');
  $ip_exclude  = \Drupal::config('time_spent_all.settings')->get('time_spent_all_ip_exclude');
  $ip_exclude = explode(" ", $ip_exclude);
    $ip_address =  \Drupal::request()->getClientIp();

  $webform_id = explode(" ", $webform_id);

  if ( ! in_array( $ip_address, $ip_exclude ) )
  {
      if(in_array( $message['id'], $webform_id ) ){
   
      $result = time_spent_all_detail_mail($ip_address);
        $message['body'][0] .=($result); 
      }
    }
  }

 