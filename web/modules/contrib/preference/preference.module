<?php

/**
 * @file
 * Contains preference.module.
 */
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\entity\Plugin\Core\Entity\EntityDisplay;

/**
 * Implements hook_help().
 */
function preference_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the preference module.
    case 'help.page.preference':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Field Preference Module') . '</p>';
      return $output;

    default:
  }
}

function preference_field_widget_info_alter(&$info)
{
    //print_r($info);die;
}
    
function preference_node_presave(Drupal\Core\Entity\EntityInterface $node) {
    //$var = $node->original;
    //kint($node);die;
}


function preference_form_submit($form, FormStateInterface $form_state, $form_id) {
   $node = $form_state->getFormObject()->getEntity();
   //kint($form_state->getFormObject()->getFormId());die;
   $node_fields = $node->getFieldDefinitions();
   $values = $form_state->getValues();
   $storage = $form_state->getStorage();
   //getDisplayOptions
    //kint($values);die;
   foreach ($values as $fk => $fv)
   {
       $field_type = entity_get_form_display('node', 'preference', 'default')->getComponent($fk)['type'];
   
       if($field_type == 'field_reorder')
       {
            usort($fv, function($a, $b) {
                 return $a['_weight'] - $b['_weight'];
            });
            db_delete('node__'.$fk)->condition('entity_id', $node->nid->value)->execute();
            db_delete('node_revision__'.$fk)->condition('entity_id', $node->nid->value)->execute();

            //Add node
            if(is_array($fv) && isset($fv[0]['textareaJson']))
            {
                $texta = json_decode($fv[0]['textareaJson']);            
            }
            //Edit node
            else  
            {
                $k = 0;                                    
                foreach($fv as $kk => $vv)
                {
                    foreach ($vv as $rk => $rv)
                    {
                        echo $rk.'>>'.$rv.'---';
                        if($rv !== '' && $rk !== '_weight')
                        {    
                            $texta[$k][] = $rv;                            
                        }
                    }                      
                    $k++;
                }               
                
//                print_r($fv);
//                print_r($texta);die;
            }
            $i = 0;            
            foreach ($texta as $k => $v)
            {                 
                 $insert = db_insert('node__'.$fk)
                         -> fields(array(
                                 'bundle' => 'preference',
                                 'entity_id' => $node->nid->value,
                                 'revision_id' => $node->vid->value,
                                 'langcode' => 'en',
                                 'delta' => $i,
                                 $fk.'_value' => $v[0],
                         ))
                         ->execute();

                 $insert = db_insert('node_revision__'.$fk)
                         -> fields(array(
                                 'bundle' => 'preference',
                                 'entity_id' => $node->nid->value,
                                 'revision_id' => $node->vid->value,
                                 'langcode' => 'en',
                                 'delta' => $i,
                                 $fk.'_value' => $v[0],
                         ))
                         ->execute();


                 $i++;
            }
            
       }                     
   }    
     	
   
}

function preference_form_node_form_alter(&$form, FormStateInterface $form_state) {
 
    $form['#attached']['library'][] =  'preference/preference';
     		
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'preference_form_submit';
      }
    }
}


/**
 * Implements hook_theme().
 */
function preference_theme() {
  return [
    'preference' => [
      'render element' => 'children',
    ],
  ];
}
