<?php

/*
* @file
* Implementing our hook
*/
use Drupal\Core\Routing\RouteMatchInterface;

/*
* Implements hook_help
*/
function smart_comment_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.smart_comment':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Smart Comment prevents user to post abusive commnet. It save the overhead of comment moderation.').'</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Prevent Abusive comment') . '</dt>';
      $output .= '<dd>' . t('The module requires configuration. Module has a configuration page. <b>admin-> configuration->Smart Comment Configuration </b> You can configure the words that you do not want to allow user in comments. You can add multiple words separated by comma (,). Every part of the page contains metadata that allows BigPipe to figure this out on its own.') . '</dd>';
      $output .= '</dl>';

      return $output;
  }
}

/*
* Implements hook_form_alter
*/

function smart_comment_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
 /*
 * Added custome validation in comment
 */
  if ($form_id=='comment_comment_form') {
    $form['#validate'][] = '_smart_comment_validate';
  }
}


/**
 * Callback method for validation.
 */

function _smart_comment_validate(&$form, $form_state) {
  $subject = strtolower($form_state->getValue('subject')[0]['value']);
  $comments = strtolower($form_state->getValue('comment_body')[0]['value']);
  $comment_config = _get_comment_config();
  $stop_word = $comment_config->get('smart_comment_container');
  $stop_words_array = explode(",",strtolower($stop_word));
  $error_msg = $comment_config->get('smart_comment_error_message');
  if( (!empty(trim($subject)))  || (!empty(trim($comments))) ) {
    $match_sub = count(array_intersect($stop_words_array, explode(" ", preg_replace("/[^A-Za-z0-9' -]/", "", $subject))));
    $comments = strip_tags($comments);
    $match_con = count(array_intersect($stop_words_array, explode(" ", preg_replace("/[^A-Za-z0-9' -]/", "", $comments))));
    if($match_sub){
      $form_state->setErrorByName('Subject', t('Subject :'. $error_msg));
    }
    elseif ($match_con) {
      $form_state->setErrorByName('Comment', t('Comment :'. $error_msg));
    }
  }

}
/**
 * get custom config.
 */

function _get_comment_config(){
  return $comment_config = \Drupal::service('config.factory')->getEditable('smart_comment.settings');

}
