<?php

/**
 * @file
 * Sage Pay Go with Direct integration payment gateway module for Ubercart.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_help().
 */
function uc_sagepay_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    case 'help.page.uc_sagepay':
      $output = '<p> ' . t(
        '@uc_sagepay is a module that allows to use SagePay payment gateway for
        the UberCart.',
        [
          '@uc_sagepay' => Link::fromTextAndUrl(
            t('UberCart SagePay'),
            Url::fromUri('https://www.drupal.org/project/sagepay')
          )->toString(),
        ]
      ) . '</p>';

      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function uc_sagepay_theme() {
  return [
    'uc_sagepay_cards' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_token_info().
 */
function uc_sagepay_token_info() {
  $tokens['uc_order']['sagepay-vendortxcode'] = [
    'name' => t('Sage Pay transaction code'),
    'description' => t('The Sage Pay VendorTXCode associated with the order.'),
  ];

  return ['tokens' => $tokens];
}

/**
 * Implements hook_tokens().
 */
function uc_sagepay_tokens(
  $type,
  $tokens,
  array $data,
  array $options,
  BubbleableMetadata $bubbleable_metadata) {

  $sanitize = !empty($options['sanitize']);
  $replacements = [];

  if ($type == 'uc_order' && !empty($data['uc_order'])) {
    $order = $data['uc_order'];

    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'sagepay-vendortxcode':
          $comments = uc_order_comments_load($order->id(), TRUE);
          if (is_array($comments)) {
            foreach ($comments as $comment) {
              $subpatterns = [];
              preg_match('/VendorTxCode: (.*)/', $comment->message, $subpatterns);
              if (!empty($subpatterns[1])) {
                $replacements[$original] = $sanitize ? check_plain($subpatterns[1]) : $subpatterns[1];
              }
            }
          }
          break;

      }
    }
  }

  return $replacements;
}

/**
 * Stores a credit card authorization to an order's data array.
 *
 * @param int $order_id
 *   The order associated with the credit card authorization.
 * @param string $auth_id
 *   The payment service's ID for the authorization.
 * @param float $amount
 *   The amount that was authorized on the card.
 *
 * @return array
 *   The entire updated data array for the order.
 */
function uc_sagepay_log_authorization($order_id, $auth_id, $amount) {
  // Load the existing order data array.
  $query = \Drupal::database()->select('uc_orders', 'uco');
  $query->addField('uco', 'data');
  $query->condition('order_id', $order_id);
  $data = $query->execute()->fetchField();
  $data = unserialize($data);

  // Add the authorization to the cc_txns.
  $data['cc_txns']['authorizations'][$auth_id] = [
    'amount' => $amount,
    'authorized' => REQUEST_TIME,
  ];

  // Save the updated data array to the database.
  $update = \Drupal::database()->update('uc_orders');
  $update->fields(['data' => serialize($data)]);
  $update->condition('order_id', $order_id);
  $update->execute();

  return $data;
}
