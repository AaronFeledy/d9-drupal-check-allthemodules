<?php
/**
 * @file
 * Code for the Image desaturate formatter module.
 */

/**
 * Implements hook_theme().
 */
function image_desaturate_formatter_theme() {
  return array(
    'image_desaturate_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'image_style' => NULL,
        'path' => NULL,
        'default_style' => 'desaturate'),
    ),
  );
}

/**
 * Returns HTML for an image_desaturate field formatter.
 *
 * @param array $variables
 *   An associative array containing:
 *   - item: An array of image data.
 *   - image_style: An optional image style.
 *   - path: An optional array containing the link 'path' and link 'options'.
 *   - default_style: An optional image color style
 *
 * @ingroup themeable
 */
function theme_image_desaturate_formatter($variables) {
  drupal_add_library('image_desaturate_formatter', 'image-desaturate-formatter');
  $variables['item']['attributes'] = array(
    'class' => array(
      $variables['default_style'] == 'desaturate' ? 'desaturate-formatter' : 'no-desaturate-formatter',
    ),
  );
  return theme('image_formatter', array(
    'item' => $variables['item'],
    'image_style' => $variables['image_style'],
    'path' => $variables['path'])
  );
}

/**
 * Implements hook_library_info().
 */
function image_desaturate_formatter_library_info() {
  $libraries['image-desaturate-formatter'] = array(
    'title' => 'Image desaturate Formatter',
    'version' => '1',
    'css' => array(
      drupal_get_path('module', 'image_desaturate_formatter') . '/library/image_desaturate_formatter.css' => array(),
    ),
  );

  return $libraries;
}
