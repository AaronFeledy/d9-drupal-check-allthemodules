<?php

/*
 * @file
 *
 * A content with a simple workflow and some transition buttons and lists. The
 * task is created open by an admin, then any user can volunteer for it, then
 * admin marks it completed and a counter on the user's profile is incremented.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Url;
use Drupal\Core\Session\AccountInterface;
use Drupal\community_tasks\Element\TaskState;


/**
 * Implements hook_form_alter().
 *
 * Simplify the node form.
 */
function community_tasks_form_node_community_task_edit_form_alter(&$form, &$form_state) {
  $form['revision_information']['#access'] = FALSE;

  if ($form_state->getFormObject()->getEntity()->isNew()) {
    $form['author']['#access'] = FALSE;
  }
  else {
    unset($form['uid']['#group']);
    //move the node owner out of the vertical tabs and hide the tab
    $form['uid']['widget'][0]['target_id']['#title'] = t('Responsible person');
    $form['uid']['widget'][0]['target_id']['#description'] = t('Who is currently responsible for this task?');
  }

  //this isn't working, perhaps it is overridden?
  $form_state->setRedirect(Url::fromUri('community_tasks'));
}


/**
 * Implements hook_theme().
 */
function community_tasks_theme() {
  return [
    'community_tasks_completed' => [
      'function' => 'theme_community_tasks_completed',
      'variables' => [
        'account' => NULL,
        'quantity' => 0
      ],
    ]
  ];
}

/**
 * Implements hook_preprocess_node().
 */
function community_tasks_preprocess_node(&$vars) {
  if ($vars['node']->bundle() == 'community_task') {
    // I don't know why the node type isn't already here
    $vars['attributes']['class'][] = 'community-task';
    $vars['attributes']['class'][] = $vars['node']->ctask_state->value;
  }
}

/**
 * Implements hook_user_view().
 */
function community_tasks_user_view(array &$build, AccountInterface $account, EntityViewDisplayInterface $display) {


  if ($display->getComponent('community_tasks_completed')) {
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'community_task')
      ->condition('uid', $account->id());
    $build['community_tasks_completed'] = [
      '#theme' => 'community_tasks_completed',
      '#account' => $account,
      '#quantity' => $query->condition('ctask_state', TaskState::COMPLETED)
        ->condition('uid', $account->id())
        ->count()
        ->execute()
    ];
  }
  //list the tasks owned by the user
  if ($display->getComponent('community_tasks_committed')) {
    //could use a view for this also..
    $build['community_tasks_committed'] = views_embed_view(
      'my_community_tasks',
      'embed_1',
      $account->id()
    );
  }
}

/**
 * theme callback display the acknowledgements.
 *
 * @todo pluralise
 */
function theme_community_tasks_completed($variables) {
  return '<div class="community-tasks-completed">' .
    t('@count tasks completed', ['@count' => $variables['quantity']])
    . '</div>';
}

/**
 * Implements hook_entity_extra_field_info().
 */
function community_tasks_entity_extra_field_info() {
  return [
    'user' => [
      'user' => [
        'display' => [
          'community_tasks_completed' => [
            'label' => t('Community tasks completed'),
            'description' => t('Number of community tasks completed'),
            'weight' => 2
          ],
          'community_tasks_committed' => [
            'label' => t('Community tasks committed to'),
            'description' => t('Community tasks the user has promised to fulfil'),
            'weight' => 2
          ]
        ]
      ]
    ]
  ];
}

/**
 * Implements hook_migrate_prepare_row().
 */
function community_tasks_migrate_prepare_row($row, $source, $migration) {
  if ($source->getPluginId() == 'menu_link') {
    drupal_set_message('migrating link_path ad/add/offer');
    if ($row->getSourceProperty('link_path') == 'community_tasks') {
      $row->setSourceProperty('link_path', 'community-tasks');
    }
  }
}
