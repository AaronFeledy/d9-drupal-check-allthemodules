<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\file\Entity\File;

/**
 * Implements hook_form_alter().
 */
function menu_file_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['menu_link_content_menu_link_content_form'])) {
    // Check if there's already a menu link ID available (does the menu item already exists).
    $build_info = $form_state->getBuildInfo();
    $callback_object = $build_info['callback_object'];
    $mlid = $callback_object->getEntity()->id();

    // If there's already a menu item, check if there's a file for it.
    if (isset($mlid) && $mlid) {
      $database = \Drupal::database();
      $fid = $database->select('menu_file', 'mf')
        ->fields('mf', ['fid'])
        ->condition('mlid', $mlid)
        ->execute()->fetchField();
    }

    // Adds the file field.
    $form['file'] = [
      '#type' => 'managed_file',
      '#name' => 'menu_file',
      '#title' => t('File'),
      '#size' => 20,
      '#description' => t('Default file extensions are allowed. If a file is uploaded here, it will be set as link in the link field. Existing values will be overridden.'),
      '#upload_location' => 'public://',
      '#default_value' => (isset($fid) && $fid) ? [$fid] : NULL
    ];

    // Prepare some validation.
    $form['link']['widget'][0]['uri']['#required'] = FALSE;
    array_unshift($form['#validate'], 'menu_file_custom_form_validate');

    // Adds a custom form submit which adds the relation to the database.
    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'menu_file_custom_form_submit';
      }
    }
  }
}

/**
 * Implements a custom form validate function.
 */
function menu_file_custom_form_validate(array $form, FormStateInterface $form_state) {
  global $base_url;

  // Get the given link and file.
  $link = $form_state->getValue('link');
  $file_upload = $form_state->getValue('file');

  if (isset($file_upload[0]) && $file_upload[0]) {
    // Load the file, so we can create a relative URL of it.
    $fid = $file_upload[0];
    $file = File::load($fid);
    $file_uri = $file->getFileUri();
    $file_url = file_create_url($file_uri);
    $relative_file_url = str_replace($base_url, '', $file_url);

    // Set the file URL as menu item link.
    $link[0]['uri'] = $relative_file_url;
    $form_state->setValue('link', $link);
  }
}

/**
 * Implements a custom form submit function.
 */
function menu_file_custom_form_submit(array $form, FormStateInterface $form_state) {
  // Get the menu link ID to store it in the database.
  $build_info = $form_state->getBuildInfo();
  $callback_object = $build_info['callback_object'];
  $mlid = $callback_object->getEntity()->id();

  // Get the file ID to store it in the database.
  $fid = $form_state->getValue('file');

  // If both exists, we are going to store it in the database.
  if (isset($mlid) && $mlid && isset($fid) && $fid[0]) {
    $database = \Drupal::database();

    $fields = array(
      'mlid' => $mlid,
      'fid' => $fid[0],
    );

    // Using upsert, so existing rows will be updated.
    $database->upsert('menu_file')
      ->fields($fields)
      ->key('mlid')
      ->execute();
  }
}