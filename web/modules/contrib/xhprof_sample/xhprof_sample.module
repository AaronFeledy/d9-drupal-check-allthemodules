<?php
/**
 * @file
 * Alternative to the XHProf module for simple sampling.
 */

use Drupal\Core\Url;
use Drupal\Core\Render\Element;

define('XHPROF_SAMPLE_OUTPUT_LIST_PER_PAGE', 20);
define('XHPROF_SAMPLE_ENABLE_PATH_NOTLISTED', 0);
define('XHPROF_SAMPLE_ENABLE_PATH_LISTED', 1);

/**
 * Implements hook_permission().
 */
function xhprof_sample_permission() {
  return array(
    'access xhprof samples' => array(
      'title' => t('Access XHProf samples'),
      'description' => t('Access XHProf sample files and list interface'),
    ),
  );
}

/**
 * Menu autoload callback for xhprof samples.
 */
function xhprof_sample_load($filename) {
  $runclass = xhprof_sample_runclass();
  return $runclass::load($filename);
}

/**
 * Implements hook_file_download().
 */
function xhprof_sample_file_download($uri) {
  $file_path = file_uri_target($uri);
  $output_dir_uri = variable_get('xhprof_sample_output_dir', XHPROF_SAMPLE_DEFAULT_OUTPUT_DIR);
  $output_dir = file_uri_target($output_dir_uri);

  if (substr($file_path, 0, strlen($output_dir)) == $output_dir) {
    if (!user_access('access xhprof samples')) {
      return -1;
    }
    else {
      return array('Content-Type' => 'application/octet-stream');
    }
  }
}

/**
 * Implements hook_xhprof_sample_operations().
 *
 * Provide default operations for included SampleRunFile storage.
 */
function xhprof_sample_xhprof_sample_operations() {
  return array(
    'download' => array(
      'callback' => 'xhprof_sample_download_operation_callback',
    ),
  );
}

/**
 * Generates operation output for a run.
 */
function xhprof_sample_run_operations($run) {
  $operations = &drupal_static(__FUNCTION__, Drupal::moduleHandler()->invokeAll('xhprof_sample_operations'));
  $output = array();

  foreach ($operations as $name => $op) {
    if (function_exists($op['callback'])) {
      $func = $op['callback'];
      $output[$name] = $func($run);
    }
  }

  return $output;
}

/**
 * Callback to generate link for download operation.
 */
function xhprof_sample_download_operation_callback($run) {
  return array(
    'title' => t('Download'),
    'url' => Url::fromUri(file_create_url($run['file']->uri)),
  );
}
