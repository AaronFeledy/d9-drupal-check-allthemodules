<?php

/**
 * @file
 * Contains content_close.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function content_close_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the content_close module.
    case 'help.page.content_close':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module allow to redirect content type to a custom page when we set expire time') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function content_close_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $content_set = \Drupal::config('content_close.settings')->get();
  foreach ($content_set as $content_type => $value) {
    if (!empty($value)) {
      $expiry_set["node_{$content_type}_form"] = $value;
    }
  }
  $request_time = \Drupal::time()->getCurrentTime();
  foreach ($expiry_set as $content_type => $time) {
    if ($content_type == $form_id && $time < $request_time) {
      $url = Url::fromRoute('content_close.page', ['time' => $time, 'content_type' => $content_type])->toString();
      $response = new RedirectResponse($url);
      $response->send();
      drupal_set_message(t('The content creation for this content type is expired'), 'error', TRUE);
    }
  }
}

/**
 * Implements hook_theme().
 */
function content_close_theme($existing, $type, $theme, $path) {
  return [
    'content_close' => [
      'variables' => ['expired_time' => 1000, 'content_type' => NULL],
    ],
  ];
}
