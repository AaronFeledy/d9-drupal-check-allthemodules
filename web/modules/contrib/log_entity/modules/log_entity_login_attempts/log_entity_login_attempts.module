<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\log_entity_login_attempts\Event\LoginAttemptEvent;
use Drupal\log_entity\LogEntityEvents;
use Drupal\user\UserInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function log_entity_login_attempts_form_user_login_form_alter(&$form, FormStateInterface $formState) {
  $form['#validate'][] = 'log_entity_login_attempts_user_login_form_validate';
}

/**
 * Form validate callback.
 */
function log_entity_login_attempts_user_login_form_validate(&$form, FormStateInterface $formState) {
  if ($errors = $formState->getErrors()) {
    $event = new LoginAttemptEvent('login_attempt', $formState->getValue('name'), FALSE);
    \Drupal::service('event_dispatcher')->dispatch(LogEntityEvents::LOG_EVENT, $event);
  }
}

/**
 * Implements hook_user_login().
 */
function log_entity_login_attempts_user_login(UserInterface $account) {
  $event = new LoginAttemptEvent('login_attempt', $account->getAccountName(), TRUE);
  \Drupal::service('event_dispatcher')->dispatch(LogEntityEvents::LOG_EVENT, $event);
}
