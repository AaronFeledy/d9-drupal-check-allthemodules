<?php

/**
 * @file
 * Contains commerce_shipping_paczkomaty.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\commerce\BundleFieldDefinition;
use Drupal\commerce_order\Entity\OrderInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function commerce_shipping_paczkomaty_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_shipping_paczkomaty module.
    case 'help.page.commerce_shipping_paczkomaty':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Paczkomat selection checkout pane') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for 'commerce_shipment_type_form'.
 */
function commerce_shipping_paczkomaty_form_commerce_shipment_type_form_alter(array &$form, FormStateInterface $form_state) {
  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $shipment_type */
  $shipment_type = $form_state->getFormObject()->getEntity();
  $paczkomat = $shipment_type->getThirdPartySetting('commerce_shipping_paczkomaty', 'paczkomat');

  $form['commerce_shipping_paczkomaty'] = [
    '#type' => 'container',
    '#weight' => 4,
    '#element_validate' => ['commerce_shipping_paczkomaty_shipment_type_form_validate'],
  ];
  $form['commerce_shipping_paczkomaty']['enable_paczkomaty'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable paczkomaty for this shipping type'),
    '#default_value' => $paczkomat,
  ];
  $form['actions']['submit']['#submit'][] = 'commerce_shipping_paczkomaty_shipment_type_form_submit';
}

/**
 * Validation handler for commerce_shipping_paczkomaty_form_commerce_shipment_type_form_alter().
 */
function commerce_shipping_paczkomaty_shipment_type_form_validate(array $element, FormStateInterface $form_state) {
  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $shipment_type */
  $shipment_type = $form_state->getFormObject()->getEntity();
  $previous_value = $shipment_type->getThirdPartySetting('commerce_shipping_paczkomaty', 'paczkomat');
  $enable_paczkomaty = $form_state->getValue(['enable_paczkomaty']);
  /** @var \Drupal\commerce\ConfigurableFieldManagerInterface $configurable_field_manager */
  $configurable_field_manager = \Drupal::service('commerce.configurable_field_manager');

  // Don't allow paczkomaty to be disabled if there's data in the field.
  if ($previous_value && !$enable_paczkomaty) {
    $field_definition = commerce_shipping_paczkomaty_build_paczkomat_field_definition($shipment_type->id());
    if ($configurable_field_manager->hasData($field_definition)) {
      $form_state->setError($element['enable_paczkomaty'], t('paczkomaty cannot be disabled until all orders with paczkomat data are deleted.'));
    }
  }
}

/**
 * Submission handler for commerce_shipping_paczkomaty_form_commerce_shipment_type_form_alter().
 */
function commerce_shipping_paczkomaty_shipment_type_form_submit(array $form, FormStateInterface $form_state) {
  /** @var \Drupal\commerce_order\Entity\OrderTypeInterface $shipment_type */
  $shipment_type = $form_state->getFormObject()->getEntity();
  $previous_value = $shipment_type->getThirdPartySetting('commerce_shipping_paczkomaty', 'paczkomat');
  $enable_paczkomaty = $form_state->getValue(['enable_paczkomaty']);
  /** @var \Drupal\commerce\ConfigurableFieldManagerInterface $configurable_field_manager */
  $configurable_field_manager = \Drupal::service('commerce.configurable_field_manager');

  $field_definition = commerce_shipping_paczkomaty_build_paczkomat_field_definition($shipment_type->id());
  if (!$previous_value && $enable_paczkomaty) {
    $configurable_field_manager->createField($field_definition);
    entity_get_display('commerce_shipment', $shipment_type->id(), 'user')
      ->setComponent('paczkomat', array(
        'weight' => 10,
      ))
      ->save();
  }
  elseif ($previous_value && !$enable_paczkomaty) {
    $configurable_field_manager->deleteField($field_definition);
  }

  $shipment_type->setThirdPartySetting('commerce_shipping_paczkomaty', 'paczkomat', $enable_paczkomaty);
  $shipment_type->save();
}


/**
 * Builds the $order->paczkomat field definition.
 *
 * @param string $shipment_type_id
 *   The order type ID.
 *
 * @return \Drupal\commerce\BundleFieldDefinition
 *   The field definition.
 */
function commerce_shipping_paczkomaty_build_paczkomat_field_definition($shipment_type_id) {
  $field_definition = BundleFieldDefinition::create('string')
    ->setTargetEntityTypeId('commerce_shipment')
    ->setTargetBundle($shipment_type_id)
    ->setName('paczkomat')
    ->setLabel('Paczkomat')
    ->setSetting('handler', 'default')
    ->setDisplayOptions('form', [
      'type' => 'string_textfield',
      'weight' => 10,
    ])
    ->setDisplayOptions('view', [
      'type' => 'string',
      'weight' => 10,
    ]);

  return $field_definition;
}
