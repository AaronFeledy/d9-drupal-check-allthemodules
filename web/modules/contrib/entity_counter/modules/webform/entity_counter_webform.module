<?php

/**
 * @file
 * Code for the entity counter webform module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\entity_counter\Entity\EntityCounter;
use Drupal\entity_counter_webform\Plugin\WebformEntityCounterSourceBaseInterface;

/**
 * Implements hook_ENTITY_TYPE_insert() for 'webform_submission'.
 */
function entity_counter_webform_webform_submission_insert(EntityInterface $entity) {
  /** @var \Drupal\webform\WebformSubmissionInterface $entity */
  /** @var \Drupal\entity_counter\Entity\EntityCounterInterface[] $counters */
  $counters = EntityCounter::loadMultiple();

  foreach ($counters as $counter) {
    if ($counter->isOpen()) {
      $sources = $counter->getSources();

      foreach ($sources as $source) {
        if ($source->isEnabled() && $source instanceof WebformEntityCounterSourceBaseInterface) {
          $source->setConditionEntity($entity);

          if ($source->evaluateConditions()) {
            $source->addTransaction(1.00, $entity);
          }
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave() for 'webform_submission'.
 */
function entity_counter_webform_webform_submission_presave(EntityInterface $entity) {
  /** @var \Drupal\webform\WebformSubmissionInterface $entity */
  /** @var \Drupal\entity_counter\Entity\EntityCounterInterface[] $counters */
  $counters = EntityCounter::loadMultiple();

  // @TODO: Try to do this with source conditions.
  $completed = empty($entity->original) ? $entity->isCompleted() == TRUE : $entity->isCompleted() == TRUE && $entity->original->isCompleted() != $entity->isCompleted();

  if ($entity->id() && $completed) {
    foreach ($counters as $counter) {
      if ($counter->isOpen()) {
        $sources = $counter->getSources();

        foreach ($sources as $source) {
          if ($source->isEnabled() && $source instanceof WebformEntityCounterSourceBaseInterface) {
            $source->setConditionEntity($entity);

            if ($source->evaluateConditions()) {
              $source->addTransaction(1.00, $entity);
            }
          }
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete() for 'webform_submission'.
 */
function entity_counter_webform_webform_submission_delete(EntityInterface $entity) {
  /** @var \Drupal\webform\WebformSubmissionInterface $entity */
  /** @var \Drupal\entity_counter\Entity\EntityCounterInterface[] $counters */
  $counters = EntityCounter::loadMultiple();

  foreach ($counters as $counter) {
    if ($counter->isOpen()) {
      $sources = $counter->getSources();

      foreach ($sources as $source) {
        if ($source->isEnabled() && $source instanceof WebformEntityCounterSourceBaseInterface) {
          $source->setConditionEntity($entity);

          if ($source->evaluateConditions()) {
            $source->cancelTransaction($entity);
          }
        }
      }
    }
  }
}
