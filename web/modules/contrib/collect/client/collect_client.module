<?php
/**
 * @file
 * A client to send captured entities to a Collect service.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function collect_client_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'collect_client.capture_entities':
      return '<p>' . t('Select an entity type and bundle, or a single entity, to capture it into a data container and send to the Collect server.') . '</p>'
        . '<p>' . t('Server connection details and automatic capturing can be set up in the <a href="@url">Collect Client settings</a>.', ['@url' => \Drupal::url('collect_client.settings')]) . '</p>';
  }

  return NULL;
}

/**
 * Implements hook_entity_insert().
 */
function collect_client_entity_insert(EntityInterface $entity) {
  if (collect_common_entity_capture_check($entity, collect_client_continuous_entity_capture_configuration())) {
    \Drupal::service('collect_client.capture_entity')->capture($entity, 'insert');
  }
}

/**
 * Implements hook_entity_update().
 */
function collect_client_entity_update(EntityInterface $entity) {
  if (collect_common_entity_capture_check($entity, collect_client_continuous_entity_capture_configuration())) {
    \Drupal::service('collect_client.capture_entity')->capture($entity, 'update');
  }
}

/**
 * Captures the entity.
 *
 * Batch callback function.
 */
function collect_client_capture_entity_batch(ContentEntityInterface $entity) {
  return \Drupal::service('collect_client.capture_entity')->capture($entity);
}

/**
 * Returns configuration for continuous entity capturing.
 */
function collect_client_continuous_entity_capture_configuration() {
  return \Drupal::configFactory()->get('collect_client.settings')->get('entity_capture');
}

/**
 * Implements hook_entity_operation_alter().
 */
function collect_client_entity_operation_alter(array &$operations, EntityInterface $entity) {
  // Display the "Capture (Collect)" operation only for content entities.
  // Exclude possibility to capture collect container entities.
  $entity_type = $entity->getEntityTypeId();
  if ($entity instanceof FieldableEntityInterface && $entity_type != 'collect_container' && \Drupal::currentUser()->hasPermission('administer collect_client')) {
    // Check if the same operation is not already set (happens in case the
    // module collect is enabled) and add the title, url and weight.
    if (!isset($operations['collect_capture'])) {
      $operations['collect_capture'] = [
        'title' => t('Capture (Collect)'),
        'url' => Url::fromRoute('collect_client.capture_entity', [
          'entity_type' => $entity_type,
          'entity_id' => $entity->id()
        ]),
        'weight' => 50,
      ];
    }
  }
}
