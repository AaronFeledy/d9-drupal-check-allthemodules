<?php
/**
 * @file 
 * Main file for oLogin module.
 */

/**
 * Implement hook_ENTITY_TYPE_delete().
 */
function ologin_user_delete($account) {
  db_delete('ologin')
    ->condition('uid', $account->get('uid')->value)
    ->execute();
}


/**
 * oLogin login.
 */
function ologin_login($ouid, $type, $data = array()) {
  // Check bind.
  $query = "SELECT uid FROM {ologin} WHERE type = :type AND ouid = :ouid";
  $result = db_query($query, array(':type' => $type, ':ouid' => $ouid));
  $uid = $result->fetchColumn();

  // Load binded account.
  if ($uid) {
    $account = user_load($uid);
  }
  // Login a new register drupal user.
  else {
    // Temporary username.
    $_name = $ouid . time();

    // Create a new user.
    $account = \Drupal\user\Entity\User::create();
    $account->setUsername($_name);
    $account->setPassword(user_password());
    $account->enforceIsNew();
    $account->activate();
    $account->set('init', $type . '_' . $_name);
    $result = $account->save();

    // Terminate if an error occurred during user_save().
    if (!$result) {
      drupal_set_message(t("Error saving user account."), 'error');
      return;
    }

    // Get uid and Set drupal username, format as u[uid]
    $uid = $account->get('uid')->value;
    $name = ologin_get_unique_username('u' . $uid);

    $account->setUsername($name);
    $account->save();

    // Add ologin record.   
    ologin_set_record($uid, $type, $ouid);
  }

  $is_blocked = !$account->get('status')->value;

  if ($is_blocked) {
    drupal_set_message('This account is not activated or has been blocked', 'error');
  }
  else {
    // Load user object and process login action.
    // @see user_external_login_register
    // @see user_login_submit
    global $user;
    $user = user_load($uid);
    user_login_finalize($user);
    $response = new Symfony\Component\HttpFoundation\RedirectResponse(\Drupal::url('user.page'));
    $response->send();
    return;
  }
}


/**
 * Generate unique username.
 */
function ologin_get_unique_username($seed_name, $name = NULL, $i = 1) {

  // Set $seed_name as default name.
  if (empty($name)) {
    $name = $seed_name;
  }

  // Check username.
  if (ologin_username_exist($name)) {
    // Add suffix if username exists.
    $name = $seed_name . '_' . $i;
    $i++;
    // Continue check if new name exists.
    $name = ologin_get_unique_username($seed_name, $name, $i);
  }
  
  // Return non-exists username.
  return $name;
}


/**
 * Check if a username exists.
 */
function ologin_username_exist($name) {
  $query = 'SELECT COUNT(uid) FROM {users_field_data} WHERE name = :name';
  $result = db_query($query, array(':name' => $name));
  return (boolean)$result->fetchColumn();
}


/**
 * Add new oLogin record.
 */
function ologin_set_record($uid, $type, $name, $data = NULL) {
  $query = db_insert('ologin')
            ->fields(array(
              'uid' => $uid,
              'type' => $type,
              'ouid' => $name,
            ))
            ->execute();
}

