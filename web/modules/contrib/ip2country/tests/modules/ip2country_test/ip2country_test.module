<?php

/**
 * @file
 * Determination of user's Country based on IP.
 *
 * This module uses the IP Address that a user is connected from to deduce
 * the Country where the user is located. This method is not foolproof,
 * because a user may connect through an anonymizing proxy, or may be in
 * an unusual case, such as getting service from a neighboring country,
 * or using an IP block leased from a company in another country.
 * Additionally, users accessing a server on a local network may be using
 * an IP that is not assigned to any country (e.g. 192.168.x.x).
 *
 * @author Tim Rohaly.    <http://drupal.org/user/202830>
 */

/** Utility functions for loading IP/Country DB from external sources. */
\Drupal::moduleHandler()->loadInclude('ip2country', 'inc');

/**
 * Implements hook_ip2country_alter().
 */
function ip2country_test_ip2country_alter($path, $arg) {
  \Drupal::messenger()->addMessage('hook_ip2country_alter() executed.');
  // @todo Actually do something here!
  // Should have a little testing database of IP addresses,
  // replace the array in ip2country.test,
  // mini DB can be used in place of real DB for testing, plus
  // it validates hook.
}

/**
 * Implements hook_menu().
 */
function ip2country_test_menu() {
  $items = [];

  $items['admin/config/location/ip2country'] = [
    'title'       => 'IP to Country settings',
    'description' => 'Configure the IP/Country settings',
    'type'        => MENU_NORMAL_ITEM,
    'route_name'  => 'ip2country.settings',
  ];
  $items['admin/config/location/ip2country/update/%'] = [
    'title'       => 'Update database',
    'type'        => MENU_CALLBACK,
    'route_name'  => 'ip2country.update_database',
  ];
  $items['admin/config/location/ip2country/lookup/%'] = [
    'title'       => 'Lookup IP address in database',
    'type'        => MENU_CALLBACK,
    'route_name'  => 'ip2country.lookup',
  ];

  return $items;
}
