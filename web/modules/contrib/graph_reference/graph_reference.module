<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\graph_reference\Plugin\Field\FieldType\GraphReferenceFieldItemList;

/**
 * implements hook_entity_bundle_field_info.
 *
 * @param \Drupal\Core\Entity\EntityTypeInterface $entity_type
 * @param $bundle
 * @param \Drupal\Core\Field\BaseFieldDefinition[] $base_field_definitions
 * @return array
 */
function graph_reference_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $entity_type_manager = \Drupal::entityTypeManager();

  $graph_storage = $entity_type_manager->getStorage('graph');
  /** @var \Drupal\graph_reference\Entity\GraphInterface $graph */
  foreach ($graph_storage->loadMultiple() as $graph_id => $graph) {
    $field_name = $graph->getReferenceFieldName();
    $vertex_set = $graph->get('vertex_set');

    $target_type_id = $vertex_set['options']['entity_type'];
    if ($target_type_id == $entity_type->id()) {

      $base_field_definitions[$field_name] = BaseFieldDefinition::create('entity_reference')
        ->setComputed(TRUE)
        ->setClass(GraphReferenceFieldItemList::class)
        ->setLabel(t('@graph reference', [
          '@graph' => $graph->label()
        ]))
        ->setDescription(t('Auto-generated pseudo field for entity reference inside the %graph graph.', [
          '%graph' => $graph->label()
        ]))
        ->setSettings([
          'target_type' => $target_type_id,
          'handler' => 'default',
          'graph_id' => $graph_id,
        ])
        ->setDisplayConfigurable('form', TRUE)
        ->setDisplayConfigurable('view', TRUE)
        ->setDisplayOptions('form', [
          'type' => 'hidden'
        ])
        ->setDisplayOptions('view', [
          'type' => 'hidden'
        ]);
    }

  }

  return $base_field_definitions;
}