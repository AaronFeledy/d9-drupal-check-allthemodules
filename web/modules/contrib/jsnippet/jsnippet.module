<?php

/**
 * @file
 * Module for managing snippets.
 */

use Drupal\jsnippet\Entity\JSnippet;

/**
 * Implements hook_library_info_build().
 */
function jsnippet_library_info_build() {
  $snippets = JSnippet::loadMultiple(NULL);
  $libraries = [];

  foreach ($snippets as $snippet) {
    $options = NULL;
    
    // Check snippet and evaluate if it is a URL.
    $external = filter_var($snippet->snippet, FILTER_VALIDATE_URL);
    if ($external) {
      $options = ['type' => 'external'];
      $uri = $snippet->getUri();
    }
    else {
      $url = file_create_url($snippet->getUri());
      $url = parse_url($url);
      $uri = $url['path'];
    }
    
    $type = $snippet->get('type') ? $snippet->get('type') : 'js';

    if ($type == 'js') {
      $library = ['js' => [$uri => [$options]]];
    }
    else {
      $library = ['css' => ['theme' => [$uri => [$options]]]];
    }
    $libraries[$snippet->id()] = $library;

    if ($snippet->scope == 'header') {
      $libraries[$snippet->id()]['header'] = TRUE;
    }
  }

  return $libraries;
}
