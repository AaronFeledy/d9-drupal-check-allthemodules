<?php

/**
 * @file
 * Install, update and uninstall functions for the commerce_funds module.
 */

/**
 * Implements hook_schema().
 */
function commerce_funds_schema() {
  $schema = [];

  $schema['commerce_funds_user_funds'] = [
    'description' => 'User Funds',
    'fields' => [
      'uid' => [
        'description' => 'The user id of the fund.',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ],
      'balance' => [
        'description' => 'The balance of the user.',
        'type' => 'blob',
        'serialize' => TRUE,
      ],
    ],
    'primary key' => [
      'uid',
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function commerce_funds_install() {
  // Defines a default admin balance.
  $balance = [];
  // Write admin balance.
  \Drupal::database()->insert('commerce_funds_user_funds')
    ->fields([
      'uid' => 1,
      'balance' => serialize($balance),
    ])
    ->execute();

  // Set a plugin for sending HTML email.
  $config = \Drupal::configFactory()->getEditable('system.mail');
  $mail_plugins = $config->get('interface');
  if (in_array('commerce_funds', array_keys($mail_plugins))) {
    return;
  }

  $mail_plugins['commerce_funds'] = 'commerce_funds_mail';
  $config->set('interface', $mail_plugins)->save();

}

/**
 * Implements hook_uninstall().
 */
function commerce_funds_uninstall() {

  // Restore default mail config.
  $config = \Drupal::configFactory()->getEditable('system.mail');
  $mail_plugins = $config->get('interface');
  if (!in_array('commerce_funds', array_keys($mail_plugins))) {
    return;
  }

  unset($mail_plugins['commerce_funds']);
  $config->set('interface', $mail_plugins)->save();

  // Delete all products and product variations.
  $entities = [
    'deposit_product' => \Drupal::entityTypeManager()->getStorage('commerce_product')->loadByProperties((['type' => 'deposit'])),
    'deposit_product_variation' => \Drupal::entityTypeManager()->getStorage('commerce_product_variation')->loadByProperties((['type' => 'deposit'])),
    'fee_product' => \Drupal::entityTypeManager()->getStorage('commerce_product')->loadByProperties((['type' => 'fee'])),
    'fee_product_variation' => \Drupal::entityTypeManager()->getStorage('commerce_product_variation')->loadByProperties((['type' => 'fee'])),
  ];
  foreach ($entities as $type => $entity) {
    if ($type == 'deposit_product' || $type == 'fee_product') {
      \Drupal::entityTypeManager()->getStorage('commerce_product')->delete($entity);
    }
    elseif ($type == 'deposit_product_variation' || $type == 'fee_product_variation') {
      \Drupal::entityTypeManager()->getStorage('commerce_product_variation')->delete($entity);
    }
  }

}
