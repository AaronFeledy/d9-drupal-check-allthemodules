<?php

/* @file
 * The spam_blackhole module file
 */

/**
 * Implements hook_form_alter().
 */
function spam_blackhole_form_alter(&$form, &$form_state, $form_id) {
  $user = \Drupal::currentUser();
  // Don't do anything if this is an authenticated user
  if ($user->id() != 0) {
    return;
  }

  static $form_id_regexp;
  static $forms = array();
  static $num_forms = 0;
  static $domain;

  // Clean up the form filter and save statically as this maybe called for
  // multiple forms.
  if (!isset($form_id_regexp)) {
    $form_id_regexp = '/^(' . preg_replace(array('/(\r\n?|\n)/', '/\\\\\*/'), array('|', '.*'), preg_quote(\Drupal::config('spam_blackhole.settings')->get('spam_blackhole_filter_forms'), '/')) . ')$/';
  }

  $is_form_excluded = FALSE;

  // Check form level filtering
  $filter_by_form = \Drupal::config('spam_blackhole.settings')->get('spam_blackhole_filter_by_form');
  if ($filter_by_form > 0) {
    $form_match = preg_match($form_id_regexp, $form_id);
    // If $filter_by_form is 1 then listed forms are excluded from any filtering
    // and if 2 then filtering is applied only on listed forms.
    if ($filter_by_form == 1) {
      $is_form_excluded = $form_match;
    }
    else {
      $is_form_excluded = !$form_match;
    }
  }

  // If form is not excluded then apply spam blackhole
  if (!$is_form_excluded) {
    $forms[$num_forms] = $form_id;
    // Add form_ids to be sent to javascript
    _drupal_add_js(
      array('spam_blackhole' => array(
        'forms' => $forms,
      )),
      'setting'
    );
    // Do this only if the form action was not modified by somebody else.
    if (substr($form['#action'], 0, 1) == '/') {
      $form['#action'] = \Drupal::config('spam_blackhole.settings')->get('spam_blackhole_dummy_base_url') . $form['#action'];
    }
    $num_forms++;    
  }
}
