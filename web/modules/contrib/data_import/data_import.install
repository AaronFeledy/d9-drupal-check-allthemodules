<?php

/**
 * @file
 * Install, update and uninstall functions for the data_import module.
 */

/**
 * Implements hook_schema().
 */
function data_import_schema() {
  $schema['data_import_mapping_item'] = array(
    'description' => 'The data Import mapping table.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique mapping item ID.',
      ),
      'importer_id' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Unique id of the importer',
      ),
      'source' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'The source of the field in the import data.',
      ),
      'field_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The name of the field on the content_type to import.',
      ),
      'override' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Override or not the importer rules.',
      ),
      'primary_key' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Primary key field.',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['data_import_importer_item'] = array(
    'description' => 'The data Import importer table.',
    'fields' => array(
      'importer_id' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique importer ID.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Human-readable name for the importer',
      ),
      'importer_type' => array(
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
        'description' => 'Importer type.',
      ),
      'ftp_type' => array(
        'type' => 'varchar',
        'length' => 30,
        'description' => 'Importer type.',
      ),
      'host' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Host link.',
      ),
      'port' => array(
        'type' => 'varchar',
        'length' => 10,
        'description' => 'Host port.',
      ),
      'username' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Username to login to the server',
      ),
      'password' => array(
        'type' => 'varchar',
        'length' => 64,
        'description' => 'Passwords to login to the server',
      ),
      'remote_directory' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'remote directory path',
      ),
      'local_directory' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'local store path',
      ),
      'file_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'File name',
      ),
      'upload_file' => array(
        'type' => 'int',
        'length' => 11,
        'description' => 'File name path',
      ),
      'file_type' => array(
        'type' => 'varchar',
        'length' => 4,
        'description' => 'File type',
      ),
      'delimiter' => array(
        'type' => 'varchar',
        'length' => 10,
        'description' => 'Delimiter',
      ),
      'skip_line' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Skip line',
      ),
      'active' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Is Importer active or not',
      ),
      'optimizer' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Is Importer optimized or not',
      ),
      'entity' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Entity type machine name',
      ),
      'bundle_name' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Bundle name',
      ),
      'schedule_rule' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Cron schedule rule',
      ),
    ),
    'primary key' => array('importer_id'),
  );

  $schema['data_import_data'] = array(
    'description' => 'The data Import table.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique data item ID.',
      ),
      'importer_id' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Machine name of importer.',
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'description' => 'One row of data represented in JSON text.',
      ),
      'process_id' => array(
        'type' => 'int',
        'length' => 11,
        'description' => 'Batch id of import.',
      ),
      'status' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'If row is imported successfully status=1 else if not imported yet status=0 (default) else	status=2.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'length' => 11,
        'description' => 'Time of log.',
      ),
      'soft_delete' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Soft delete row to keep backup of imported data',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['data_import_log'] = array(
    'description' => 'The data Import table.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique data item ID.',
      ),
      'process_id' => array(
        'type' => 'int',
        'length' => 11,
        'description' => 'Batch id of import.',
      ),
      'importer_id' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'description' => 'Machine name of importer.',
      ),
      'status' => array(
        'type' => 'int',
        'length' => 1,
        'description' => 'Status 1 for info message, Status 2 for warnings, Status 3 for errors.',
      ),
      'message' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Message log, used mainly for error logging and debugging before and after import task.',
      ),
      'timestamp' => array(
        'type' => 'int',
        'length' => 11,
        'description' => 'Time of log.',
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}
