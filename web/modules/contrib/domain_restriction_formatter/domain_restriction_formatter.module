<?php

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Field\FormatterInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\domain\Entity\Domain;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityDisplayInterface;

/**
 * Implements hook_help().
 */
function domain_restriction_formatter_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.domain_restriction_formatter':
      $output = file_get_contents(drupal_get_path('module', 'domain_restriction_formatter') . '/README.md');
      return '<pre>' . $output . '</pre>';
      break;
  }
}

/**
 * Implements hook_field_formatter_third_party_settings_form().
 */
function domain_restriction_formatter_field_formatter_third_party_settings_form(FormatterInterface $plugin, FieldDefinitionInterface $field_definition, $view_mode, $form, FormStateInterface $form_state) {
  $options = [];

  $domains = \Drupal\domain\Entity\Domain::loadMultiple();
  foreach ($domains as $domain) {
    /** @var \Drupal\domain\DomainInterface $domain */
    $options[$domain->id()] = $domain->label();
  }

  $element['domain_restriction'] = array(
    '#type' => 'checkboxes',
    '#title' => 'Visible on',
    '#options' => $options,
    '#default_value' => $plugin->getThirdPartySetting('domain_restriction_formatter', 'domain_restriction'),
    '#description' => t('Limit the display of this field to the selected domains. If none are selected the field will be visible on all domains.'),
  );

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function domain_restriction_formatter_field_formatter_settings_summary_alter(&$summary, $context) {
  $settings = $context['formatter']->getThirdPartySetting('domain_restriction_formatter', 'domain_restriction');
  $restrictions = !empty($settings) ? array_filter($settings) : [];

  if (!empty($restrictions)) {
    $list = [
      '#theme' => 'item_list',
      '#items' => array_map(function ($domain_id) {
        return Domain::load($domain_id)->label();
      }, $restrictions),
      '#type' => 'ul',
    ];

    $summary[] = t('<strong>There are domain restrictions in place:</strong>' . \Drupal::service('renderer')
        ->render($list));
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function domain_restriction_formatter_entity_view_alter(&$build, EntityInterface $entity, EntityDisplayInterface $display) {
  $components = $display->getComponents();
  // Implement domain restrictions.
  foreach ($components as $field => $component) {
    if (isset($component['third_party_settings']['domain_restriction_formatter']) && !empty($component['third_party_settings']['domain_restriction_formatter']['domain_restriction'])) {
      if($restrictions = array_filter($component['third_party_settings']['domain_restriction_formatter']['domain_restriction'])){
        /** @var \Drupal\domain\DomainNegotiatorInterface $negotiator */
        $negotiator = Drupal::service('domain.negotiator');
        if(!in_array($negotiator->getActiveDomain()->id(), $restrictions)){
          // Hide field.
          unset($build[$field]);
        }
      }
    }
  }
}