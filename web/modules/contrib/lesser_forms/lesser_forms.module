<?php

/**
 * @file
 * Lesser Forms - don't bother content managers with settings they don't need.
 */

/**
 * Implements hook_form_alter().
 */
function lesser_forms_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id) {
  $user = \Drupal::currentUser();
  $fields = \Drupal::config('lesser_forms.settings')->get('fields');
  $applies_to = \Drupal::config('lesser_forms.settings')->get('applies_to');

  if ($fields == NULL || $applies_to == NULL) {
    return;
  }

  // Check the applies_to to get a match or look for a wildcard.
  if (in_array($form_id, preg_split('/\r\n|\n|\r/', $applies_to)) || $applies_to == '*') {
    foreach ($fields as $field => $users) {
      foreach ($user->getRoles() as $role) {
        if ($fields[$field][$role] == "1") {
          if ($field == 'preview') {
            $form['actions'][$field]['#access'] = FALSE;
          }
          else {
            $form[$field]['#access'] = FALSE;
          }
        }
      }
    }

    // Pathauto will hook after the build, so we need this line.
    if (isset($settings['pathauto']) && $settings['pathauto']) {
      $form['#after_build'][] = 'lesser_forms_form_after_build';
    }
  }
}

/**
 * Custom after build.
 *
 * @param array $form
 *   Form.
 * @param array $form_state
 *   Form state.
 *
 * @return array
 *   Returns the form array.
 */
function lesser_forms_form_after_build(array $form, &$form_state) {
  $form['path']['#access'] = FALSE;
  return ($form);
}
