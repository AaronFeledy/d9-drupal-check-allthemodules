<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_help().
 */
function created_account_register_message_help(
  $route_name,
  RouteMatchInterface $route_match
) {
  $output = '';
  switch ($route_name) {
    // Main module help for the created_account_register_message module.
    case 'help.page.created_account_register_message':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>Display a message when the user try to register an';
      $output .= 'account which already has been created but never';
      $output .= 'used.</p>';
      break;
  }
  return $output;
}

/**
 * Implements hook_form_alter().
 */
function created_account_register_message_form_user_register_form_alter(
  &$form,
  FormStateInterface $form_state, $form_id
) {

  // Add the validation form
  $form['#validate'][] = 'carm_node_form_validate';
}

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function carm_node_form_submit(&$form, FormStateInterface $form_state) {
  $nologin = &drupal_static('carm_user_nologin');
  if (!empty($nologin)) {
    _user_mail_notify('register_admin_created', User::load($nologin));
    drupal_set_message(t('You already have an account, we have e-mailed a password reset link in case you do not remember your password.'));
  }

  $login = &drupal_static('carm_user_login');
  if (!empty($login)) {
    $login_link = Link::createFromRoute('login here', 'user.login')->toString();
    $reset_link = Link::createFromRoute('reset your password here', 'user.pass')->toString();
    drupal_set_message(t('There is already an account with this email, you can @login or @reset.', [
      '@login' => $login_link,
      '@reset' => $reset_link,
    ]));
  }
}

/**
 * Check if the user already has an account and never has been used if that is
 * the case let the user know.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function carm_node_form_validate(&$form, FormStateInterface $form_state) {
  $mail = $form_state->getValue('mail');

  if (!$mail) {
    return;
  }

  $entity_query = \Drupal::entityQuery('user')
    ->condition('mail', $mail)
    //->condition('login', 0)
    ->condition('status', 1);
  $ids = $entity_query->execute();

  // if there is not already a user with the same email, no need to continue.
  if (empty($ids)) {
    return;
  }

  $id = array_pop($ids);
  $user = User::load($id);

  if ($user->getLastLoginTime() == 0) {
    $carm_user_nologin = &drupal_static('carm_user_nologin');
    $carm_user_nologin = $id;
  }
  else {
    $carm_user_login = &drupal_static('carm_user_login');
    $carm_user_login = $id;
  }

  // remove all the submithandlers and leave only the one will tell the user
  // that there is already an account for him.
  $form_state->setSubmitHandlers(['carm_node_form_submit']);
  // remove the error of "the email is already in use".
  $form_state->clearErrors();
}
