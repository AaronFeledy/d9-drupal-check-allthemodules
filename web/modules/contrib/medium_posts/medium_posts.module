<?php

/**
 * @file
 * Contains medium_posts.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function medium_posts_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the medium_posts module.
    case 'help.page.medium_posts':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Publish posts to Medium.com by using Medium API.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add the medium integration token form to an individual user's account page.
 *
 * @see \Drupal\user\ProfileForm::form()
 */
function medium_posts_form_user_form_alter(&$form, FormStateInterface $form_state) {
  $form['medium_posts'] = [
    '#type' => 'details',
    '#title' => t('Medium publish settings'),
    '#open' => TRUE,
    '#weight' => 5,
  ];

  $account = $form_state->getFormObject()->getEntity();

  if (!\Drupal::currentUser()->isAnonymous() && $account->id()) {
    $account_data = \Drupal::service('user.data')->get('medium_posts', $account->id(), 'token');
  }

  $form['medium_posts']['medium_token'] = [
    '#type' => 'textfield',
    '#title' => t('Integration token'),
    '#default_value' => isset($account_data) ? $account_data : '',
    '#description' => t('You can generate an access token from the <a href="https://medium.com/me/settings">Settings page</a> of your Medium account.'),
  ];

  $form['actions']['submit']['#submit'][] = 'medium_posts_user_profile_form_submit';
}

/**
 * Submit callback for the user profile form to save the contact page setting.
 */
function medium_posts_user_profile_form_submit($form, FormStateInterface $form_state) {
  $account = $form_state->getFormObject()->getEntity();

  if ($account->id() && $form_state->hasValue('medium_token')) {
    \Drupal::service('user.data')->set('medium_posts', $account->id(), 'token', $form_state->getValue('medium_token'));
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function medium_posts_node_presave($node) {
  $config = \Drupal::config('medium_posts.settings');
  $push_on_node_publish = $config->get('push_on_node_publish');

  // Do medium publish only when "push on node publish" is enabled in settings.
  if (!$push_on_node_publish) {
    return;
  }

  $medium_posts_manager = \Drupal::service('medium_posts.manager');

  // Do only when the node type is selected as medium post.
  if (!$medium_posts_manager->isMediumNodeType($node)) {
    return;
  }

  // If a node content has been published on Medium already, we shouldn't
  // publish it again.
  if ($medium_posts_manager->isPublished($node->uuid())) {
    return;
  }

  // If a node is not published, skip it.
  if ($node->status->value != 1) {
    return;
  }

  $medium_posts_manager->publish($node);
}
