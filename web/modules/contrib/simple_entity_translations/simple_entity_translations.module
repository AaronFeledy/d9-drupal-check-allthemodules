<?php

/**
 * @file
 * Module hooks.
 */

use Drupal\Core\Config\Entity\ConfigEntityBundleBase;
use Drupal\Core\Config\Entity\ConfigEntityInterface;
use Drupal\Core\Entity\BundleEntityFormBase;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function simple_entity_translations_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $formObject = $form_state->getFormObject();
  if (!$formObject instanceof BundleEntityFormBase) {
    return;
  }
  /** @var \Drupal\Core\Config\Entity\ConfigEntityBundleBase $bundleEntity */
  $bundleEntity = $formObject->getEntity();

  /** @var \Drupal\content_translation\ContentTranslationManagerInterface $contentTranslationManager */
  $contentTranslationManager = \Drupal::service('content_translation.manager');
  if (!$contentTranslationManager->isSupported($bundleEntity->getEntityType()->getBundleOf())) {
    return;
  }

  $form['third_party_settings']['simple_entity_translations'] = [
    '#type' => 'details',
    '#title' => t('Simple entity translations'),
    '#tree' => TRUE,
  ];

  $form['third_party_settings']['simple_entity_translations']['enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Use simplified translation form'),
    '#default_value' => $bundleEntity->getThirdPartySetting('simple_entity_translations', 'enabled', FALSE),
  ];

  $form['#entity_builders'][] = 'simple_entity_translations_form_entity_builder';
}

/**
 * Simple entity translation entity builder.
 */
function simple_entity_translations_form_entity_builder($entity_type, ConfigEntityInterface $config_entity, &$form, FormStateInterface $form_state) {
  if ($form_state->getValue(['simple_entity_translations', 'enabled']) === 1) {
    $config_entity->setThirdPartySetting('simple_entity_translations', 'enabled', TRUE);
    return;
  }

  $config_entity->unsetThirdPartySetting('simple_entity_translations', 'enabled');
}

/**
 * Implements hook_entity_operation().
 */
function simple_entity_translations_entity_operation(EntityInterface $entity) {
  $operations = [];

  if ($entity instanceof ConfigEntityBundleBase
    && $entity->getThirdPartySetting('simple_entity_translations', 'enabled', FALSE)) {
    $bundleOf = $entity->getEntityType()->getBundleOf();
    $entityType = \Drupal::entityTypeManager()->getDefinition($bundleOf);
    $operations['translate_list'] = [
      'title' => t('Translate @entity_plural_label', ['@entity_plural_label' => $entityType->getPluralLabel()]),
      'url' => Url::fromRoute('entity.' . $entity->getEntityTypeId() . '.simple_entity_translations_list_edit', [$entity->getEntityTypeId() => $entity->id()]),
      'weight' => 50,
    ];
  }

  if ($entity instanceof ContentEntityInterface) {
    $entityType = $entity->getEntityType();
    if ($bundleName = $entityType->getBundleEntityType()) {
      /** @var \Drupal\Core\Config\Entity\ConfigEntityBundleBase $bundle */
      $bundle = \Drupal::entityTypeManager()->getStorage($bundleName)->load($entity->bundle());
      if ($bundle->getThirdPartySetting('simple_entity_translations', 'enabled', FALSE)) {
        $operations['translate_list'] = [
          'title' => t('Translate list'),
          'url' => Url::fromRoute('entity.' . $entity->getEntityTypeId() . '.simple_entity_translations_entity_edit', [$entity->getEntityTypeId() => $entity->id()]),
          'weight' => 50,
        ];
      }
    }
  }

  return $operations;
}
