<?php

use Drupal\Core\Url;
use Drupal\Core\Link;

// TODO: remove Drupal core "PHP OPCODE CACHING" requirement.
// This module provides a replacement for the core's requirement...

/**
 * Implements hook_requirements().
 */
function opcachectl_requirements($phase) {
	$requirements = [];

	$opcache_extension_loaded = extension_loaded('Zend OPcache');

	if ($phase == 'runtime') {
		if ($opcache_extension_loaded) {
			$opcache_config = opcache_get_configuration();
			$opcache_version = $opcache_config['version'];
			$opcache_config = $opcache_config['directives'];

			$requirements['opcache_loaded']['title'] = t('OPcache PHP Extension');
			$requirements['opcache_loaded']['severity'] = REQUIREMENT_OK;
			$requirements['opcache_loaded']['value'] = t('@name loaded (@version)', [
				'@name' => $opcache_version['opcache_product_name'],
				'@version' => $opcache_version['version']
			]);

			if($opcache_config['opcache.enable']) {
				$requirements['opcache_enabled']['title'] = t('OPcache enabled');
				$requirements['opcache_enabled']['severity'] = REQUIREMENT_OK;
				$requirements['opcache_enabled']['value'] = t('Yes');


				$requirements['opcache_enabled']['description'] = Link::createFromRoute(t('see configuration'), 'opcachectl.report.config')->toString();

				$requirements['opcache_reset_token']['title'] = t('opcachectl reset token');
				$token = trim(\Drupal::service('config.factory')->get('opcachectl')->get('reset_token'));
				if( !empty($token) ) {
					$requirements['opcache_reset_token']['severity'] = REQUIREMENT_OK;
					$requirements['opcache_reset_token']['value'] = t('Token to access :route is set.', [':route' => '/system/php-opcache/reset/{token}']);
				} else {
					$requirements['opcache_reset_token']['severity'] = REQUIREMENT_WARNING;
					$requirements['opcache_reset_token']['value'] = t('Token to access :route is not set.', [':route' => '/system/php-opcache/reset/{token}']);
					$requirements['opcache_reset_token']['description'] = t('Please define a token in settings.php.');
				}


			} else {
				$requirements['opcache_enabled']['title'] = t('OPcache enabled');
				$requirements['opcache_enabled']['severity'] = REQUIREMENT_WARNING;
				$requirements['opcache_enabled']['value'] = t('No');
			}

		} else {
			$requirements['opcache_loaded']['title'] = t('OPcache PHP Extension');
			$requirements['opcache_loaded']['severity'] = REQUIREMENT_WARNING;
			$requirements['opcache_loaded']['value'] = t('Zend OPcache not loaded');
		}
	}

	return $requirements;
}
