<?php

/**
 * @file
 * Code for the OPcache Control module.
 */


/**
 * Implements hook_theme().
 */
function opcachectl_theme($existing, $type, $theme, $path) {
	return [
		'opcache_stats' => [
			'variables' => [],
		],
		'opcache_config' => [
			'variables' => [],
		],
	];

}


/**
 * Implements hook_preprocess_HOOK().
 */
function opcachectl_preprocess_opcache_stats(&$variables) {

	$variables['attributes']['class'][] = 'opcache';
	$variables['attributes']['class'][] = 'opcache--statistics';
	$variables['hostname'] = gethostname();
	$variables['now'] = REQUEST_TIME;

	$status = FALSE;
	if( function_exists('opcache_get_status') ) {
		$status = opcache_get_status();
		$variables['opcache_status'] = $status;
	}
	if (!$status || !$status['opcache_enabled']) {
		\Drupal::messenger()->addError( t('OPcache disabled') );
		return;
	}

	if($status['cache_full']) {
		\Drupal::messenger()->addWarning( t('Cache full') );
	}
	if($status['restart_pending']) {
		\Drupal::messenger()->addStatus( t('OPcache restart pending') );
	}
	if($status['restart_in_progress']) {
		\Drupal::messenger()->addStatus( t('OPcache restart in progress') );
	}
}


/**
 * Implements hook_preprocess_HOOK().
 */
function opcachectl_preprocess_opcache_config(&$variables) {

	$variables['attributes']['class'][] = 'opcache';
	$variables['attributes']['class'][] = 'opcache--configuration';
	$variables['now'] = REQUEST_TIME;

	$config = FALSE;
	if( function_exists('opcache_get_configuration') ) {
		$config = opcache_get_configuration();
		$variables['opcache_config'] = $config['directives'];
	}
	if (!$config) {
		\Drupal::messenger()->addError( t('No OPcache configuration available') );
		return;
	}

}

/**
 * Reset OPcache!
 *
 * @return boolean
 */
function opcachectl_reset() {
	if (!function_exists('opcache_reset')) {
		\Drupal::logger('opcachectl')->error(t('OPcache reset on host :host failed: function opcache_reset does not exist', [':host' => gethostname()]));
		return FALSE;
	}

  $status = opcache_get_status();
	if (!$status || !$status['opcache_enabled']) {
		\Drupal::logger('opcachectl')->error(t('OPcache reset on host :host failed: opcode cache disabled.', [':host' => gethostname()]));
		return FALSE;
	}

	if ($status['restart_pending']) {
		\Drupal::logger('opcachectl')->info(t('OPcache reset already pending on host :host', [':host' => gethostname()]));
		return TRUE;
	}
	if ($status['restart_in_progress']) {
		\Drupal::logger('opcachectl')->debug(t('OPcache restart currently in progress on host :host', [':host' => gethostname()]));
	}
	if (opcache_reset()) {
		\Drupal::logger('opcachectl')->info(t('OPcache reset triggered on host :host', [':host' => gethostname()]));
		return TRUE;
	} else {
		\Drupal::logger('opcachectl')->error(t('OPcache reset on host :host failed: opcode cache disabled.', [':host' => gethostname()]));
		return FALSE;
	}
}