<?php

/**
 * @file
 * Main functions and hook implementations of the Cached Computed Field module.
 */

/**
 * Implements hook_cron().
 */
function cached_computed_field_cron() {
  /** @var \Drupal\cached_computed_field\CachedComputedFieldManagerInterface $field_manager */
  $field_manager = \Drupal::service('cached_computed_field.manager');

  // If there are any items in the queue, process them. If not, repopulate the
  // queue.
  if ($field_manager->getQueue()->numberOfItems()) {
    $field_manager->processQueue();
  }
  else {
    $field_manager->populateQueue();
  }
}

/**
 * Implements hook_field_widget_info_alter().
 */
function cached_computed_field_field_widget_info_alter(array &$info) {
  foreach (cached_computed_field_widget_info() as $field_type => $widget_types) {
    foreach ($widget_types as $widget_type) {
      $info[$widget_type]['field_types'][] = $field_type;
    }
  }
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function cached_computed_field_field_formatter_info_alter(array &$info) {
  foreach (cached_computed_field_formatter_info() as $field_type => $formatter_types) {
    foreach ($formatter_types as $formatter_type) {
      $info[$formatter_type]['field_types'][] = $field_type;
    }
  }
}

/**
 * Returns information about the widgets that can be used by our fields.
 *
 * @return array
 *   An associative array, keyed by field type, each item an array of widget IDs
 *   that are supported by the field type.
 */
function cached_computed_field_widget_info() {
  return [
    'cached_computed_integer' => ['number'],
  ];
}

/**
 * Returns information about the formatters that can be used by our fields.
 *
 * @return array
 *   An associative array, keyed by field type, each item an array of formatter
 *   IDs that are supported by the field type.
 */
function cached_computed_field_formatter_info() {
  return [
    'cached_computed_integer' => ['number_integer'],
  ];
}
