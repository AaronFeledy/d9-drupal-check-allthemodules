<?php

/**
 * @file
 * Contains hold_my_draft.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function hold_my_draft_form_node_page_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();
  if ($form_object instanceof EntityForm) {
    $node = $form_object->getEntity();
    $utlities = \Drupal::service('hold_my_draft.utilities');
    $draftHold = $utlities->getDraftHoldInfo($node);

    if ($utlities->isInProgress($draftHold)) {
      $utlities->generateMessage($draftHold, $node);
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function hold_my_draft_node_delete(EntityInterface $entity) {
  $utlities = \Drupal::service('hold_my_draft.utilities');
  $draftHold = $utlities->getDraftHoldInfo($entity);
  if ($utlities->isInProgress($draftHold)) {
    $connection = \Drupal::database();
    $connection->startTransaction();
    try {
      $connection->delete('hold_my_draft')
        ->condition('nid', $utlities->cleanId($entity))
        ->execute();
    }
    catch (Exception $exception) {
      $connection->rollBack();
      $utlities->throwError($exception->getMessage());
    }

  }

}
