<?php

/**
 * @file
 * Contains views_entity_translations_links.module.
 */

use Drupal\views_entity_translations_links\Plugin\views\field\EntityTranslations;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_views_data_alter.
 */
function views_entity_translations_links_views_data_alter(array &$data) {
  // Registers an entity area handler per entity type.
  foreach (\Drupal::entityManager()
             ->getDefinitions() as $entity_type => $entity_info) {
    $data[$entity_info->getBaseTable()]['translation_button'] = [
      'title' => 'Entity translations field',
      'help' => t('Displays all available translations and a quick way for adding the unexisting ones.'),
      'field' => [
        'id' => 'entity_translations',
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_views_view_table.
 */
function views_entity_translations_links_preprocess_views_view_table(array &$variables) {
  $view = $variables['view'];
  $fields = &$view->field;

  $labels = [];
  foreach (Drupal::languageManager()->getLanguages() as $language) {
    $langcode = $language->getId();
    $class = 'langcode-' . $langcode;
    $span = [
      '#type' => 'html_tag',
      '#tag' => 'span',
      '#value' => $langcode,
      '#attributes' => [
        'class' => [
          Html::cleanCssIdentifier($class),
          'language-flag',
        ],
      ],
    ];
    $labels[] = Drupal::service('renderer')->render($span);
  }

  $label = implode('', $labels);

  foreach ($variables['header'] as $field => $column) {
    if ($fields[$field] instanceof EntityTranslations) {
      $variables['header'][$field]['content'] = [
        '#type' => 'markup',
        '#markup' => $label,
      ];
    }
  }
}
