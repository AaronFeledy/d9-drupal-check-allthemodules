<?php

/**
 * @file
 * This is the module to download and assign avatar image to user who not have any picture.
 */

use Drupal\file\Entity\File;
use Drupal\user\UserInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_presave() for user entities.
 */
function avatar_image_entity_presave(EntityInterface $entity) {
	if ($entity instanceof UserInterface) { 
		if($entity->user_picture->isEmpty()){
			$file_url = download_user_avatar($entity);
			$file = File::create([
			  'uid' => $entity->id(),
			  'filename' => $entity->getEmail(),
			  'uri' => $file_url,
			  'status' => 1,
			]);
			$file_data = file_get_contents($file_url);
			$file_obj = file_save_data($file_data, $file_url, FILE_EXISTS_REPLACE);
			$entity->set('user_picture', $file_obj->id());		
		}
	}
}

/**
* Function to download the avatar image if user not have picture.
*/

function download_user_avatar($user) {
  $directory = 'public://avatar';
  if (!is_dir($directory)) {
    drupal_mkdir($directory, 0777, TRUE);
  }
  $email = $user->getEmail();
  if (!empty($email)) {
    $file_path = $directory.'/'.$email.'.png';
    if (!file_exists($file_path)){
      $content = file_get_contents('https://api.adorable.io/avatars/200/'.$email.'.png');
      file_put_contents($file_path, $content);
      /*
      * Use GD library function to change image scale into gray.
      */
      $im = @imagecreatefrompng($file_path);
      imagefilter($im, IMG_FILTER_GRAYSCALE);
      header('Content-Type: image/png');
      imagepng($im, $file_path);
      imagedestroy($im);  
    }
    return $file_path;
  }
}