<?php

/**
 * @file
 * Generate user hashes.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\UserInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_help().
 */
function user_hash_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.user_hash':
      $output = '';
      $output .= '<h3>' . t('User Hash') . '</h3>';
      $output .= '<p>' . t('The User hash module allows you to create an individual hash for each user.') . '</p>';
      $output .= '<p>' . t('You can use the hash as a light weight user identification where you do not want to use the Drupal login credentials, e.g. as an individual API Key for reading insensitive content.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Settings') . '</dt>';
      $output .= '<dd>' . t('<a href=":user-hash-settings">Configure</a> which hash algorithm to use for generating hashes. Default is sha256.', [':user-hash-settings' => \Drupal::url('user_hash.settings')]) . '</dd>';
      $output .= '<dt>' . t('Generation') . '</dt>';
      $output .= '<dd>' . t('The user hash module adds update options on the <a href=":user-list">user list page</a> for generating and deleting user hashes.', [':user-list' => \Drupal::url('entity.user.collection')]) . '</dd>';
      $output .= '<h3>' . t('Display') . '</h3>';
      $output .= '<dt>' . t('User profile') . '</dt>';
      $output .= '<dd>' . t("The user hash is displayed on the <a href=':user-profile'>profile</a> if the user has 'administer account settings' permission or if it is his own account.", [
        ':user-profile' => \Drupal::url('user.page', ['user' => \Drupal::currentUser()->id()]),
      ]) . '</dd>';

      if (\Drupal::moduleHandler()->moduleExists('field_ui')) {
        $output .= '<dd>' . t('You can hide or position the hash on a user profile in <a href=":manage-display">Manage display</a> if the Field UI module is enabled.', [':manage-display' => \Drupal::url('entity.user.admin_form') . '/display']) . '</dd>';
      }
      if (\Drupal::moduleHandler()->moduleExists('views_ui')) {
        $output .= '<dt>' . t('User list') . '</dt>';
        $output .= '<dd>' . t("You can display the user hash on the <a href=':user-list'>user list page</a> by editing the <a href=':view-people'>corresponding view</a>.", [
          ':user-list' => \Drupal::url('entity.user.collection'),
          ':view-people' => \Drupal::url('entity.view.edit_form', ['view' => 'user_admin_people']),
        ]) . '</dd>';
        $output .= '<dd>' . t("Under 'Fields' add the field 'Data' from the 'User' category, then select 'User Hash' from the module drop down list and add 'hash' as the name of the data key.") . '</dd>';
      }
      $output .= '</dl>';

      return $output;
  }
}

/**
 * Implements hook_entity_extra_field_info_alter().
 */
function user_hash_entity_extra_field_info_alter(&$info) {
  if (isset($info['user'])) {
    $info['user']['user']['display']['user_hash'] = [
      'label' => t('Hash'),
      'description' => t("User hash module 'hash' view element."),
      'weight' => 50,
    ];
  }
}

/**
 * Implements hook_user_view_alter().
 */
function user_hash_user_view_alter(array &$build, UserInterface $account, EntityViewDisplayInterface $display) {
  $current_user = \Drupal::currentUser();

  if ($account->id() !== $current_user->id()) {
    if (!$current_user->hasPermission('administer account settings')) {
      return;
    }
  }
  else {
    if (!$current_user->hasPermission('use user_hash')) {
      return;
    }
  }

  $settings = $display->getComponent('user_hash');
  if ($settings) {
    $hash = \Drupal::service('user.data')->get('user_hash', $account->id(), 'hash') ?: '';
    if (empty($hash)) {
      return;
    }

    $build['hash'] = [
      '#type' => 'item',
      '#markup' => '<h4 class="label">' . t('Hash') . '</h4> ' . $hash,
      '#weight' => $settings['weight'],
    ];
  }
}
