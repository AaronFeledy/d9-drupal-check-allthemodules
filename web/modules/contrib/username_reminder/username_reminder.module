<?php

/**
 * @file
 * Provides form for requesting a username reminder.
 *
 * A user who has forgotten their username can enter their email address into
 * the form, and if it matches an active account, the account username is
 * emailed to the email address.
 *
 * The username is emailed instead of displayed on the site to prevent
 * username enumeration.
 *
 * This module duplicates some code from the user module, especially the
 * UserPasswordForm form.
 */

use Drupal\Component\Render\PlainTextOutput;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function username_reminder_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.username_reminder':
      return
          '<p>' . t('Username Reminder provides a form for requesting a username reminder, which is linked from the user login block and the user page. The user who has forgotten their username can enter their email address into the form, and if it matches an active account, the account username is emailed to the email address.') . '</p>'
        . '<p>' . t('The subject and body of the reminder email are customizable via the settings page. Token replacements are supported.') . '</p>';
  }
}

/**
 * Implements hook_block_view_BASE_BLOCK_ID_alter().
 *
 * Adds a pre-render callback which allows changing the block content before
 * rendering.
 */
function username_reminder_block_view_user_login_block_alter(array &$build, BlockPluginInterface $block) {
  $build['#pre_render'][] = '_username_reminder_user_login_block_pre_render';
}

/**
 * Pre-render callback for block user_login_block.
 *
 * Adds a link to the username reminder page.
 */
function _username_reminder_user_login_block_pre_render(array $build) {
  $user_links = &$build['content']['user_links'];
  $items = &$user_links['#items'];
  $items['username-reminder'] = \Drupal::l(t('Look up your username'), new Url('username_reminder.reminder', [], [
    'attributes' => [
      'title' => t('Look up your username.'),
      'class' => ['username-reminder'],
    ],
  ]));
  return $build;
}

/**
 * Implements hook_mail().
 */
function username_reminder_mail($key, &$message, $params) {
  $token_service = \Drupal::token();
  $language_manager = \Drupal::languageManager();
  $langcode = $message['langcode'];
  $variables = ['user' => $params['account']];

  $language = \Drupal::languageManager()->getLanguage($params['account']->getPreferredLangcode());
  $original_language = $language_manager->getConfigOverrideLanguage();
  $language_manager->setConfigOverrideLanguage($language);
  $config = \Drupal::config('username_reminder.settings');

  $token_options = [
    'langcode' => $langcode,
    'callback' => 'user_mail_tokens',
    'clear' => TRUE,
  ];
  $subject = PlainTextOutput::renderFromHtml(
    $token_service->replace(
      $config->get('reminder.subject'),
      $variables,
      $token_options));
  $body = $token_service->replace(
    $config->get('reminder.body'),
    $variables,
    $token_options);
  $message['subject'] .= $subject;
  $message['body'][] = $body;

  $language_manager->setConfigOverrideLanguage($original_language);
}
