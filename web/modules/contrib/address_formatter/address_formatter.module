<?php

/**
 * @file
 * Provides functionality for address rendering.
 */

use Drupal\address_formatter\Entity\AddressFormatter;

/**
 * Implements hook_theme().
 */
function address_formatter_theme() {
  return [
    'address_html' => [
      'variables' => [
        'data' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function address_formatter_theme_suggestions_address_html(array $variables) {
  $suggestions = [];
  $code = $id = $key = '';
  if (isset($variables['data']['country_code'])) {
    $code = strtolower($variables['data']['country_code']);
  }
  if (isset($variables['data']['address_html_formatter_id'])) {
    $id = strtolower($variables['data']['address_html_formatter_id']);
  }
  if (isset($variables['data']['key'])) {
    $key = strtolower($variables['data']['key']);
  }

  if ($code) {
    $suggestions[] = "address_html__$code";
  }

  if ($code && $key) {
    $suggestions[] = "address_html__{$code}__{$key}";
  }

  if ($code && $id) {
    $suggestions[] = "address_html__{$code}__{$id}";
  }

  if ($code && $id && $key) {
    $suggestions[] = "address_html__{$code}__{$id}__{$key}";
  }

  return $suggestions;
}

/**
 * Gets an array of option sets suitable for using as select list options.
 *
 * @return array
 *   Array of options labels keyed by id.
 */
function address_formatter_options_list() {
  // @var $options \Drupal\address_formatter\Entity\AddressFormatter[].
  $options = AddressFormatter::loadMultiple();
  $list = [];
  foreach ($options as $name => $option) {
    $list[$name] = $option->label();
  }

  if (empty($list)) {
    $list[''] = t('No defined option sets');
  }
  return $list;
}
