monster_menus.create_homepage:
  path: '/mm-homepage/{user}'
  defaults:
    _title: 'Create a homepage'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::createHomepage'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessCreateHomepage'
    user: \d+
monster_menus.autocomplete:
  path: /mm-auto
  defaults:
    want_username: false
    _title: ''
    _controller: '\Drupal\monster_menus\Controller\DefaultController::autocomplete'
  requirements:
    _permission: 'access user profiles'
monster_menus.get_search_result_count:
  path: /mmsr-get
  defaults:
    _title: ''
    _controller: '\Drupal\monster_menus\Form\SearchReplaceForm::getSearchResultCount'
  requirements:
    _permission: 'use search/replace'
  options:
    no_cache: true
monster_menus.save_sitemap:
  path: /-mm-sitemap
  defaults:
    _title: 'Generate sitemap.xml'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::saveSitemap'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessSitemap'
monster_menus.show_sitemap:
  path: /sitemap.xml
  defaults:
    _title: 'View sitemap.xml'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::showSitemap'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessSitemap'
monster_menus.show_group:
  path: '/mm/{mm_tree}/viewall'
  defaults:
    _title: 'View All Users'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::showGroup'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessShowGroup'
  options:
    no_cache: true
    _custom_theme: null
monster_menus.render_nodes_on_page:
  path: '/mm/{mm_tree}/{per_page}/render'
  defaults:
    mode: r
    _title: 'Render the node(s) on a page'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::renderNodesOnPage'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessUserCan'
    per_page: \d+
monster_menus.add_node:
  path: '/mm/{mm_tree}/contents/add'
  defaults:
    _title: Add
    _controller: '\Drupal\monster_menus\Controller\DefaultController::addNode'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessAdd'
monster_menus.add_node_with_type:
  path: '/mm/{mm_tree}/contents/add/{node_type}'
  defaults:
    _title_callback: '\Drupal\monster_menus\Controller\DefaultController::addNodeWithTypeGetTitle'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::addNodeWithType'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessAdd'
monster_menus.reorder_nodes:
  path: '/mm/{mm_tree}/contents/reorder'
  defaults:
    _title: Reorder
    _form: \Drupal\monster_menus\Form\ReorderNodesForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Form\ReorderNodesForm::access'
monster_menus.handle_page_settings:
  path: '/mm/{mm_tree}/settings'
  defaults:
    _title: Settings
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessPageSettings'
    mm_tree: -?\d+
monster_menus.page_settings_empty:
  path: '/mm/{mm_tree}/settings/empty'
  defaults:
    op: empty
    _title: 'Empty recycle bin'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessEmptyBin'
monster_menus.page_settings_copymove:
  path: '/mm/{mm_tree}/settings/copymove'
  defaults:
    op: copymove
    _title: Copy/Move
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessCopy'
monster_menus.page_settings_restore:
  path: '/mm/{mm_tree}/settings/restore'
  defaults:
    op: restore
    _title: Restore
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessRestore'
monster_menus.mm_ui_menu_reorder:
  path: '/mm/{mm_tree}/settings/reorder'
  defaults:
    _title: 'Reorder menu'
    _form: \Drupal\monster_menus\Form\ReorderMenuForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Form\ReorderMenuForm::access'
  options:
    parameters:
      mm_tree:
        tempstore: TRUE
        type: 'entity:mm_tree'
monster_menus.page_settings_search:
  path: '/mm/{mm_tree}/settings/search'
  defaults:
    op: search
    _title: Search
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _permission: 'use search/replace'
monster_menus.page_settings_search_result:
  path: '/mm/{mm_tree}/settings/search/result'
  defaults:
    op: 'search result'
    _title: Search Results
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _permission: 'use search/replace'
  options:
    no_cache: true
monster_menus.page_settings_search_result_csv:
  path: '/mm/{mm_tree}/settings/search/result.csv'
  defaults:
    op: 'search result csv'
    _title: Search
    _controller: '\Drupal\monster_menus\Controller\DefaultController::handlePageSettings'
  requirements:
    _permission: 'use search/replace'
monster_menus.solver:
  path: '/mm/{mm_tree}/settings/solver/{user}'
  defaults:
    uid: null
    _title: 'Solve Permissions Issues'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::showSolver'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessSolver'
    user: \d+
monster_menus.export:
  path: '/mm/{mm_tree}/csv_export'
  defaults:
    _title: 'Export Group Members'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::exportGroupAsCSV'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessEdit'
monster_menus.large_group_get_users_json:
  path: '/-mm-users-json/{mm_tree}/listusers/{element}'
  defaults:
    mode: r
    _title: 'List users in a group'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::getGroupUsersJson'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessUserCan'
    element: '[_a-zA-Z][-\w]*'
  options:
    no_cache: true
monster_menus.large_group_delete_user:
  path: '/-mm-users-json/{mm_tree}/deleteusers/{user}'
  defaults:
    _title: 'Delete user from a group'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::deleteGroupUser'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessEdit'
    user: '\d+|-USER-'
  options:
    no_cache: true
monster_menus.large_group_add_users:
  path: '/-mm-users-json/{mm_tree}/addusers/{uids}'
  defaults:
    _title: 'Add users to a group'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::addGroupUser'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessEdit'
    uids: \d+(,\d+)*|-UIDS-
  options:
    no_cache: true
monster_menus.redirect:
  path: '/-mm-redirect/{mmtid}'
  defaults:
    _title: 'Internal redirect'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::redirectToMMTID'
  requirements:
    mmtid: -?\d+
    _access: 'TRUE'
monster_menus.userlist:
  path: '/-mm-users/{mmtid}'
  defaults:
    _title: 'User list'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::listUserHomepages'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessListUserHomepages'
    mmtid: -\d+
monster_menus.restore_node_confirm:
  path: '/mm/{mm_tree}/node/{node}/restore'
  defaults:
    _title: Restore
    _form: \Drupal\monster_menus\Form\RestoreNodeConfirmForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Form\RestoreNodeConfirmForm::access'
  options:
    parameters:
      mm_tree:
        tempstore: TRUE
        type: 'entity:mm_tree'
monster_menus.mm_controller_load_by_ajax:
  path: /mm/{mm_tree}/ajax_node
  defaults:
    _title: 'Get nodes for a page using Ajax call'
  requirements:
    _access: 'TRUE'
monster_menus.show_page_feed:
  path: /mm/{mm_tree}/feed
  defaults:
    mode: r
    display_mode: feed
    _controller: '\Drupal\monster_menus\Controller\MMTreeViewController::view'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessUserCan'
monster_menus.node_redirect:
  path: '/node/{node}'
  defaults:
    _controller: '\Drupal\monster_menus\Controller\DefaultController::redirectToNode'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::menuAccessNode'
monster_menus.node_redirect_edit:
  path: '/node/{node}/edit'
  defaults:
    _controller: '\Drupal\monster_menus\Controller\DefaultController::redirectToNode'
    mode: edit
  requirements:
    _entity_access: 'node.update'
monster_menus.node_redirect_delete:
  path: '/node/{node}/delete'
  defaults:
    _controller: '\Drupal\monster_menus\Controller\DefaultController::redirectToNode'
    mode: delete
  requirements:
    _entity_access: 'node.update'
#-------------------------------------------------------------
monster_menus.system_admin_menu_block_page:
  path: /admin/mm
  defaults:
    _title: 'Monster Menus'
    _controller: '\Drupal\system\Controller\SystemController::systemAdminMenuBlockPage'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAnyAdmin'
monster_menus.mm_admin_config:
  path: /admin/mm/settings
  defaults:
    _title: Settings
    _form: \Drupal\monster_menus\Form\ConfigForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAnyAdmin'
monster_menus.admin_browse:
  path: /admin/mm/browse
  defaults:
    _title: 'Browse tree'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::showAdminBrowseLinks'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAnyAdmin'
monster_menus.admin_export:
  path: /admin/mm/export
  defaults:
    _title: 'Export tree'
    _form: \Drupal\monster_menus\Form\ExportTreeForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_import:
  path: /admin/mm/import
  defaults:
    _title: 'Import tree'
    _form: \Drupal\monster_menus\Form\ImportTreeForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_dump:
  path: /admin/mm/dump
  defaults:
    _title: 'Export entire tree as CSV'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::getTreeAsCSV'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.update_vgroup_view:
  path: /admin/mm/vgroups-mark
  defaults:
    _title: 'Mark all virtual groups'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::updateVgroupView'
  requirements:
    _permission: 'administer all groups'
monster_menus.regenerate_vgroup:
  path: /admin/mm/vgroups
  defaults:
    _title: 'Update virtual groups'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::regenerateVgroup'
  requirements:
    _permission: 'administer all groups'
monster_menus.mm_admin_verify_integrity:
  path: /admin/mm/integrity
  defaults:
    _title: 'Verify integrity of database relationships'
    _form: \Drupal\monster_menus\Form\VerifyIntegrityForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_validate_sort_index:
  path: /admin/mm/sort
  defaults:
    _title: 'Verify sort index'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::validateSortIndex'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_validate_sort_index_fix:
  path: /admin/mm/sort/1
  defaults:
    _title: 'Fix errors in sort index'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::validateSortIndex'
    fix: 1
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_orphan_nodes:
  path: /admin/mm/orphan-nodes
  defaults:
    _title: 'Check for orphan nodes'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::findOrphanNodes'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.mm_admin_reassign_controller:
  path: /admin/mm/reassign
  defaults:
    _title: 'Reassign user content'
    _form: \Drupal\monster_menus\Form\ReassignContentForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.mm_admin_fix_node_urls:
  path: /admin/mm/fix-nodes
  defaults:
    _title: 'Fix URLs in content'
    _form: \Drupal\monster_menus\Form\FixNodeUrlsForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAnyAdmin'
monster_menus.mm_admin_regions:
  path: /admin/mm/regions
  defaults:
    _title: 'Region settings'
    _form: \Drupal\monster_menus\Form\RegionSettingsForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAnyAdmin'
monster_menus.mm_admin_list_sites:
  path: /admin/mm/sites
  defaults:
    _title: 'Manage sites'
    _form: \Drupal\monster_menus\Form\ListSitesForm
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.admin_edit_site:
  path: /admin/mm/sites/add
  defaults:
    _title: 'Add a New Site'
    _controller: '\Drupal\monster_menus\Controller\DefaultController::editSite'
  requirements:
    _custom_access: '\Drupal\monster_menus\Controller\DefaultController::accessAllAdmin'
monster_menus.mm_admin_find_user:
  path: /admin/people/by-uid
  defaults:
    _title: 'Find by name'
    _form: \Drupal\monster_menus\Form\FindUserForm
  requirements:
    _permission: 'administer users'
#-------------------------------------------------------------
monster_menus.browser_json:
  path: /mm-browser/{mm_tree}
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getTreeJson'
  requirements:
    _permission: 'use tree browser'
  options:
    no_cache: true
monster_menus.browser_load:
  path: /mm-browser-load
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getWrapperRenderable'
  requirements:
    _permission: 'use tree browser'
  options:
    no_cache: true
monster_menus.browser_getright:
  path: /mm-browser-getright
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getRightJSON'
  requirements:
    _permission: 'access content'
monster_menus.browser_bookmark_exists:
  path: /mm-browser-bookmark-exists
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::bookmarkExistsJSON'
  requirements:
    _permission: 'use tree browser'
monster_menus.browser_get_bookmarks:
  path: /mm-browser-get-bookmarks
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getBookmarksJSON'
  requirements:
    _role: 'authenticated'
monster_menus.browser_get_lastviewed:
  path: /mm-browser-get-lastviewed
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getLastViewedJSON'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_set_lastviewed:
  path: /mm-browser-set-lastviewed/{mm_tree}
  defaults:
    _title: 'JSON Callback'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::setLastViewed'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_bookmark_add:
  path: /mm-bookmarks/add/{mm_tree}
  defaults:
    _title: 'Add Bookmark'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getAddBookmarkForm'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_bookmark_manage:
  path: /mm-bookmarks/manage
  defaults:
    _title: 'Add Bookmark'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::getManageBookmarksForm'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_bookmark_delete:
  path: /mm-bookmarks/delete/{mm_tree}
  defaults:
    _title: 'Delete Bookmark'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::deleteBookmarkJSON'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_bookmark_edit:
  path: /mm-bookmarks/edit/{mm_tree}
  defaults:
    _title: 'Edit Bookmark'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::setBookmarkJSON'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
monster_menus.browser_bookmark_sort:
  path: /mm-bookmarks/sort
  defaults:
    _title: 'Sort Bookmarks'
    _controller: '\Drupal\monster_menus\Controller\MMTreeBrowserController::sortBookmarksJSON'
  requirements:
    _role: 'authenticated'
  options:
    no_cache: true
