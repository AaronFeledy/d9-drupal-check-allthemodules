<?php

/**
 * @file
 * Installation actions for Outlayer.
 */

/**
 * Implements hook_requirements().
 */
function outlayer_requirements($phase) {
  if ($phase != 'runtime') {
    return [];
  }

  $requirements = [];

  // Imagesloaded library.
  if (function_exists('libraries_get_path')) {
    $path = libraries_get_path('imagesloaded') . '/imagesloaded.pkgd.min.js';
  }
  else {
    $path = DRUPAL_ROOT . '/libraries/imagesloaded/imagesloaded.pkgd.min.js';
  }

  $exists = is_file($path);

  $requirements['imagesloaded_library'] = [
    'title'       => t('Imagesloaded library'),
    'description' => $exists ? '' : t('The <a href=":url">Imagesloaded library</a> should be installed at <strong>/libraries/imagesloaded/imagesloaded.pkgd.min.js</strong>, or any path supported by libraries.module if installed.', [':url' => 'https://github.com/desandro/imagesloaded']),
    'severity'    => $exists ? REQUIREMENT_OK : REQUIREMENT_ERROR,
    'value'       => $exists ? t('Installed') : t('Not installed'),
  ];

  // Outlayer library.
  if (function_exists('libraries_get_path')) {
    $path = libraries_get_path('isotope') ?: libraries_get_path('isotope-layout');
  }
  else {
    $path = DRUPAL_ROOT . '/libraries/isotope';
    if (!is_file($path . '/dist/isotope.pkgd.min.js')) {
      $path = DRUPAL_ROOT . '/libraries/isotope-layout';
    }
  }

  $exists = is_file($path . '/dist/isotope.pkgd.min.js');

  $requirements['isotope_library'] = [
    'title'       => t('Isotope library'),
    'description' => $exists ? '' : t('The <a href=":url">Isotope library</a> should be installed at <strong>/libraries/isotope/dist/isotope.pkgd.min.js</strong>, or any path supported by libraries.module if installed.', [':url' => 'https://github.com/metafizzy/isotope']),
    'severity'    => $exists ? REQUIREMENT_OK : REQUIREMENT_ERROR,
    'value'       => $exists ? t('Installed') : t('Not installed'),
  ];

  return $requirements;
}
