<?php

/**
 * @file
 * Hooks implementation for content related actions.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\timed_node_page\Controller\TimedNodePageController;

/**
 * Implements hook_help().
 */
function timed_node_page_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.timed_node_page':
      return '<p>' . t('This module provides plugins for developers to create pages that display nodes based on timing. For proper documentation see the the README.') . '</p>';
  }
}

/**
 * Implements hook_entity_presave().
 */
function timed_node_page_entity_presave(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node') {
    \Drupal::service('timed_node_page.service')->clearCacheFor($entity);
  }
}

/**
 * Implements hook_entity_predelete().
 */
function timed_node_page_entity_predelete(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node') {
    \Drupal::service('timed_node_page.service')->clearCacheFor($entity);
  }
}

/**
 * Implements hook_metatag_route_entity().
 */
function timed_node_page_metatag_route_entity(RouteMatchInterface $route_match) {
  // If we are on one of the timed pages routes, meta-tag module won't be able
  // to determine that we are displaying a node. Add it manually the current
  // for meta-tag if the route is a timed node page.
  if ($route_match->getRouteObject()->getDefault('_controller') != TimedNodePageController::class . '::displayPage') {
    return NULL;
  }

  if ($node = $route_match->getParameter('node')) {
    return $node;
  }

  /** @var \Drupal\timed_node_page\TimedNodePagePluginBase $timedNodePage */
  $timedNodePage = \Drupal::service('plugin.manager.timed_node_page')
    ->getBy($route_match->getParameter('bundle'));
  if ($timedNodePage) {
    return $timedNodePage->getCurrentNode();
  }

  return NULL;
}
