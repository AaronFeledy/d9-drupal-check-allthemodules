<?php

/**
 * @file
 * Provides a simple Blazy PhotoSwipe integration.
 */

/**
 * Implements hook_blazy_alter().
 */
function blazy_photoswipe_blazy_alter(array &$image, $settings = []) {
  if (!empty($settings['media_switch']) && $settings['media_switch'] == 'photoswipe') {
    $image['#pre_render'][] = 'blazy_photoswipe_pre_render';
  }
}

/**
 * The #pre_render callback: Sets PhotoSwipe related URL attributes.
 */
function blazy_photoswipe_pre_render($image) {
  $settings = isset($image['#settings']) ? $image['#settings'] : [];

  // Video's HREF points to external site, adds URL to local image.
  // Do not rely on IMG as IMG is not there when using CSS background.
  if (!empty($settings['box_url']) && !empty($settings['embed_url'])) {
    $image['#url_attributes']['data-box-url'] = $settings['box_url'];
  }

  return $image;
}

/**
 * Implements hook_blazy_attach_alter().
 */
function blazy_photoswipe_blazy_attach_alter(array &$load, $attach = []) {
  if (!empty($attach['photoswipe'])) {
    $manager = \Drupal::service('blazy.manager');
    $load['library'][] = 'blazy_photoswipe/load';
    $template = ['#theme' => 'photoswipe_container'];

    // Allow other modules to alter / extend the options to pass to photoswipe
    // JavaScript.
    $options = $manager->configLoad('options', 'photoswipe.settings');
    $manager->getModuleHandler()->alter('blazy_photoswipe_js_options', $options);
    $load['drupalSettings']['photoswipe'] = [
      'options' => $options,
      'container' => $manager->getRenderer()->renderPlain($template),
    ];
  }
}

/**
 * Implements hook_blazy_lightboxes_alter().
 */
function blazy_photoswipe_blazy_lightboxes_alter(array &$lightboxes) {
  $lightboxes[] = 'photoswipe';
}

/**
 * Implements hook_help().
 */
function blazy_photoswipe_help($route_name) {
  switch ($route_name) {
    case 'help.page.blazy_photoswipe':
      return check_markup(file_get_contents(dirname(__FILE__) . '/README.txt'));
  }
}
