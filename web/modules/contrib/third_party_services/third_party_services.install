<?php

/**
 * @file
 * Installation and updating routines.
 */

/**
 * Implements hook_install().
 */
function third_party_services_install() {
  $container = \Drupal::getContainer();
  $terms_storage = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $vocabulary_id = $container->getParameter('third_party_services.default_vocabulary');
  $field_name = $container->getParameter('third_party_services.vocabulary_required_field');

  foreach ([
    'Flickr' => [
      // @link http://flickrslidr.com/
      'flickrslidr.com',
      // @link http://embed.ly/provider/flickr
      'flickr.com',
      'flic.kr',
    ],
    'Instagram' => [
      // @link http://embed.ly/provider/instagram
      'instagram.com',
      'instagr.am',
    ],
    'Livestream' => [
      // @link http://embed.ly/provider/livestream
      'livestream.com',
      'livestre.am',
    ],
    'OpenStreetMap' => [
      'openstreetmap.org',
      'osm.org',
    ],
    'Snapchat' => [
      'snapchat.com',
      // @link https://medium.com/@jgcatalano/how-to-embed-snapchat-stories-1b51179a2fe0
      'usepeek.com',
      // @link https://artplusmarketing.com/you-can-now-embed-snapchat-stories-within-medium-with-snappd-f2d7c61b0804
      'snappd.tv',
    ],
    'Soundcloud' => [
      // @link http://embed.ly/provider/soundcloud
      'soundcloud.com',
      // @link https://soundcloud.com/pages/embed
      'snd.sc',
    ],
    'Storify' => [
      // @link http://embed.ly/provider/storify
      'storify.com',
    ],
    'Twitter' => [
      'twitter.com',
    ],
    'Vimeo' => [
      // @link http://embed.ly/provider/vimeo
      'vimeo.com',
    ],
    'YouTube' => [
      // @link http://embed.ly/provider/youtube
      'youtube.com',
      'youtu.be',
      'youtube.ca',
      'youtube.jp',
      'youtube.com.br',
      'youtube.co.uk',
      'youtube.nl',
      'youtube.pl',
      'youtube.es',
      'youtube.ie',
      'it.youtube.com',
      'youtube.fr',
    ],
  ] as $name => $patterns) {
    $values = [
      'vid' => $vocabulary_id,
      'name' => $name,
    ];

    $terms = $terms_storage->loadByProperties($values);
    $term = empty($terms) ? $terms_storage->create($values) : reset($terms);

    // Populate patterns for recognition of the service markup.
    $term->{$field_name} = $patterns;
    // Update/create the term in storage.
    $terms_storage->save($term);
  }
}
