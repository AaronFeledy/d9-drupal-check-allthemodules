<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

namespace Drupal\registry_codelists\Controller;


use Symfony\Component\HttpFoundation\Response;
/**
 * Description of CodelistXML
 *
 * @author Balschmiter
 */
class CodelistXML {
  
  private $xmlData;
  private $node;
  private $codelist;
  private $language;
  
  public function __construct($node, $codelist, $code = null, $language, $bundle) {
    $this->codelist = $codelist;
    $this->node = $node;
    
    switch ($bundle) {
      case 'registry_codelists':
        $this->createXMLfromFile($codelist, $code);
        break;
      case 'inspire_codelist':
        $this->createXMLfromNode($code);
        break;
    }
  }
  
  private function createXMLfromFile($codelist, $code = null) {
    $uri = $this->node->field_xml_codelist->entity->getFileUri();
    
    if($code === null) {
      $this->xmlData = file_get_contents($uri);
    } else {
      $data = file_get_contents($uri);
      $xml = new \SimpleXMLElement($data);
      $item = $xml->xpath("//*[local-name()='containeditems']/*[local-name()='value' and @id='https://registry.gdi-de.org/register/codelist/".$codelist."/".$code."']");
      $this->xmlData = $this->getElement($item);
    }
  }
  
  private function createXMLfromNode($code = null){
    
    if($code === null){
      $this->xmlData = $this->CodelistTemplatePre();
      $nids = [];
      foreach ($this->node->field_inspireccodes->getValue() as $value) {
        array_push($nids,$value['target_id']);
      }
      $codes =  \Drupal\node\Entity\Node::loadMultiple($nids);
      foreach ($codes as $item) {
        $this->xmlData = $this->xmlData.$this->CodeTemplate($item);
      }
      $this->xmlData = $this->xmlData.$this->CodelistTemplateRev();
    } else {
      //build only code
      $nids = [];
      foreach ($this->node->field_inspireccodes->getValue() as $value) {
        array_push($nids,$value['target_id']);
      }
      $codes =  \Drupal\node\Entity\Node::loadMultiple($nids);
      foreach ($codes as $item) {
        if(strtolower($item->getTitle()) === strtolower($code)) {
          $this->xmlData = $this->CodeTemplate($item);
        }
      }
    }
  }
  
  private function getElement($item) {
    while(list( , $node) = each($item)) {
      return $node->asXML();
    }
  }
  public function getXMLData() {
    $response = new Response();
    $response->setContent($this->xmlData);
    $response->setStatusCode(Response::HTTP_OK);
    $response->headers->set('Content-Type', 'application/xml');
    return $response;
  }
  
  private function CodelistTemplatePre() {
    
    $template = '<codelist xmlns="http://inspire.ec.europa.eu/codelist_register/codelist" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://inspire.ec.europa.eu/codelist_register/codelist http://inspire.ec.europa.eu/draft-schemas/registry/1.3/CodeList.xsd" id="https://registry.gdi-de.org/register/codelist/example1">'
            . '<thisversion>https://registry.gdi-de.org/register/codelist/'.$this->codelist.':1</thisversion>'
            . '<latestversion>https://registry.gdi-de.org/register/codelist/'.$this->codelist.'</latestversion>'
            . '<language>en</language>'
            . '<label xml:lang="en">'.$this->node->getTitle().'</label>' 
            . '<definition xml:lang="en">'.$this->node->get('field_inspiredescription')->value.'</definition>'
            . '<!-- <extensibility id="http://inspire.ec.europa.eu/registry/extensibility/open"><uriname>open</uriname></extensibility><theme id="http://inspire.ec.europa.eu/theme/ps"><label xml:lang="en">Protected Sites</label></theme><applicationschema id="http://inspire.ec.europa.eu/applicationschema/ps"><label xml:lang="en">Protected Sites</label>    </applicationschema><itemclass uriname="CodeList"><label xml:lang="en">Code list</label></itemclass><status id="http://inspire.ec.europa.eu/registry/status/submitted"><label xml:lang="en">Submitted</label></status>-->'
            . '<register id="https://registry.gdi-de.org/register/codelist/">'
            . '<label xml:lang="en">GDI-DE Registry Codelist Register</label>'
            . '<registry id="https://registry.gdi-de.org/">'
            . '<label xml:lang="en">GDI-DE Registry</label>'
            . '</registry>'
            . '</register>'
            . '<containeditems>';  
    return $template;
  }
  
  private function CodelistTemplateRev() {
    $template = '</containeditems></codelist>';
    return $template;
  }
  
  private function CodeTemplate($item) {
    $template = '<value id="https://registry.gdi-de.org/register/codelist/'.$this->codelist.'/'.$item->getTitle().'">'
            . '<thisversion>https://registry.gdi-de.org/register/codelist/'.$this->codelist.'/'.$item->getTitle().':1</thisversion>'
            . '<latestversion>https://registry.gdi-de.org/register/codelist/'.$this->codelist.'/'.$item->getTitle().'</latestversion>'
            . '<label xml:lang="en">'.$item->get('field_inspirevalue')->value.'</label>'
			. '<definition xml:lang="en">'.$item->get('field_inspiredescription')->value.'</definition>'
            . '<itemclass uriname="CodeListValue"><label xml:lang="en">Code list value'
            . '</label>'
            . '</itemclass>'
            . '<!-- <status id="http://inspire.ec.europa.eu/registry/status/submitted"><label xml:lang="en">Submitted</label></status>-->'
            . '</value>';
    return $template;
  }
  
  
  
  
  
}

