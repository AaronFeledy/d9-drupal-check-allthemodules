<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Ajax\CommandInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;

use Drupal\isoregistry\Controller\RegistryExceptions;
use Symfony\Component\HttpFoundation\RedirectResponse;

function registry_styles_install() {
  
}

function registry_styles_uninstall() {
   
}

function registry_styles_theme() {
  return [
    // From core file.module.
    'file_preview' => [
      'variables' => ['filepath' => NULL],
    ],
  ];
}

function registry_styles_form_node_styles_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['#validate'][] = 'registry_styles_validate';
}

function registry_styles_form_node_styles_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['#validate'][] = 'registry_styles_validate';
}

function registry_styles_validate(&$form, $form_state) {
  $node = $form_state->getFormObject()->getEntity();
  $query = \Drupal::entityQuery('node')
    ->condition('type', 'styles')
    ->condition('title', $form_state->getValue('title')[0]['value'])
    ->condition('field_namespace', $form_state->getValue('field_namespace')[0]['target_id'])
    ->execute();
  
  if(count($query) > 0) {
    if (!in_array($node->id(),$query)) {
      $form_state->setErrorByName('title', t('Your title is used by in other node in this namespace'));
    }
  }
}

function registry_styles_node_view(&$build, $node, $display, $view_mode){
  if($_GET['format'] === 'sld') {
    $realPath = \Drupal\Core\Url::fromUri(file_create_url("https://www.google.com"))->toString();
    $response = new RedirectResponse($realPath);
    $response->send();
  }
  //return  $response;
}