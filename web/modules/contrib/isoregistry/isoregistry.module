<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Ajax\CommandInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;

function isoregistry_form_taxonomy_term_namespaces_form_alter(&$form, FormStateInterface $form_state) {
  $current_user = \Drupal::currentUser();
  $roles = $current_user->getRoles();
  if(!in_array('administrator',$roles)) {
    $form['relations']['#access'] = FALSE; 
  }
  
  
  if(isset($form_state->getValue('field_parent')[0]['target_id']) || isset($form_state->getValue('field_shortcut')[0]['value']) ) {
    $valueParent = null;
    $valueShortcut = null;
    $tmp = null;
    if(isset($form_state->getValue('field_parent')[0]['target_id'])) {
      $term = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($form_state->getValue('field_parent')[0]['target_id']);
      $valueParent = $term->field_namespace->value;
    }
    if ($form_state->getValue('field_shortcut')[0]['value'] !== null) {
      $valueShortcut = $form_state->getValue('field_shortcut')[0]['value'];
    }
      
    if($valueParent !== null && $valueShortcut !== null)  {
      $tmp = $valueParent . '.' . $valueShortcut;
    } elseif ($valueParent !== null && $valueShortcut === null){
      $tmp = $valueParent;
    } elseif($valueParent === null && $valueShortcut !== null) {
      $tmp = $valueShortcut;
    }
    
    $form['field_namespace']['widget'][0]['value']['#default_value'] = $tmp;
  }
  
  $form['field_namespace']['#disabled'] = TRUE;
  $form['field_namespace']['#prefix'] = '<div id="edit-namespace-value-wrapper">';
  $form['field_namespace']['#suffix'] = '</div>';
  /*
   * funzt 
   */
  $form['field_parent']['widget'][0]['target_id']['#ajax'] = array(
    'event' => 'change',
    'callback' => 'buildNamespace',
    'wrapper' => 'edit-namespace-value-wrapper',
  );
  
  
  /*
   * funzt
   */
  $form['field_shortcut']['widget'][0]['value']['#ajax'] = array(
    'event' => 'change',
    'callback' => 'buildNamespace',
    'wrapper' => 'edit-namespace-value-wrapper',
  );
  
  return $form;
}

function buildNamespace(array &$form, FormStateInterface $form_state) {
  $form['field_namespace']['#prefix'] = '<div id="edit-namespace-value-wrapper">';
  $form['field_namespace']['#suffix'] = '</div>';
  return $form['field_namespace'];
}

function isoregistry_taxonomy_term_presave(EntityInterface $term) {
  if( $term->bundle() === 'namespaces') {
    if(sizeof($term->get('field_parent')->target_id) > 0) {
      $term->set('parent', ['target_id' => $term->get('field_parent')->target_id]);
    } else {
      $term->set('parent', ['target_id' => 0]);
    }
  }
}
