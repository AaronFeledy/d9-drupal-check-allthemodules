<?php
/**
 * @file
 * Whiteboard module install.
 */

/**
 * Implements hook_requirements().
 */
function whiteboard_requirements($phase) {
  $requirements = array();

  if ($phase == 'runtime') {
    if (!_whiteboard_library_present()) {
      $requirements['whiteboard_jsDraw2D_library'] = array(
        'title' => t('Whiteboard'),
        'value' => t('Missing jsDraw2D libraries'),
        'description' => t("The required library jsDraw2D has not been found. Please download to the whiteboard module directory so that jsDraw2D is available at 'whiteboard/jsDraw2D/jsDraw2D.js'."),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}

/**
 * Determines whether the jsDraw2D sources are present.
 *
 * @return bool
 *   True if jsDraw2D library is found
 */
function _whiteboard_library_present() {
  $jsp = FALSE;
  $whiteboard_path = drupal_get_path('module', 'whiteboard');
  $jspath = $whiteboard_path . '/jsDraw2D/jsDraw2D.js';
  $jsp = file_exists($jspath);
  return $jsp;
}

/**
 * @file
 * Install whiteboard module
 */

/**
 * Implements hook_schema().
 */
function whiteboard_schema() {
  $schema['whiteboard'] = array(
    'fields' => array(
      'wbid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
        'description' => 'Primary key: wbid of the whiteboard.',
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this whiteboard.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'The title of this whiteboard.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'marks' => array(
        'type' => 'text',
        'size' => 'medium',
        'description' => 'Marks stored from canvas',
      ),
      'format' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The {filter_format}.format used for message output.',
      ),
    ),
    'primary key' => array('wbid'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function whiteboard_uninstall() {
  // TODO: fill in this stub.
}
