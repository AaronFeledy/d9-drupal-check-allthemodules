<?php

/**
 * @file
 * Install, uninstall, update and requirements hooks for Matomo Reporting API.
 */

use Drupal\Core\Url;

/**
 * Implements hook_requirements().
 */
function matomo_reporting_api_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    // Warn the user if they are using insecure HTTP transport.
    $matomo_settings = \Drupal::configFactory()->get('matomo.settings');
    $https_url = $matomo_settings->get('url_https');
    if (empty($https_url) || parse_url($https_url)['scheme'] !== 'https') {
      $requirements['matomo_reporting_api_https'] = [
        'title' => t('Matomo reporting API'),
        'value' => t('Matomo user credentials are not encrypted and visible on the network.'),
        'description' => t('The user authentication token is transmitted without encryption and is vulnerable to being discovered on the network. Attackers can use this token to take over the Matomo server. It is <strong>highly recommended</strong> to provide an encrypted HTTPS URL for Matomo on production environments.'),
        'severity' => REQUIREMENT_WARNING,
      ];
    }
    else {
      $requirements['matomo_reporting_api_https'] = [
        'title' => t('Matomo reporting API'),
        'value' => t('Communication with the Matomo server is handled using a secure connection.'),
      ];
    }

    // Throw an error when the authentication token is not set.
    $matomo_reporting_api_settings = \Drupal::configFactory()->get('matomo_reporting_api.settings');
    if (empty($matomo_reporting_api_settings->get('token_auth'))) {
      $requirements['matomo_reporting_api_missing_token'] = [
        'title' => t('Matomo reporting API'),
        'value' => t('Authentication token not set.'),
        'description' => t('Please <a href=":configuration_form">provide an authentication token</a> to enable communication with the Matomo server.', [
          ':configuration_form' => \Drupal::service('url_generator')->generateFromRoute('matomo_reporting_api.settings_form'),
        ]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    // Throw an error when the Matomo server cannot be reached.
    elseif (matomo_reporting_api_get_api_version() === FALSE) {
      $requirements['matomo_reporting_api_server_unreachable'] = [
        'title' => t('Matomo reporting API'),
        'value' => t('Matomo server cannot be reached.'),
        'description' => t('Please <a href=":matomo_reporting_api_configuration_form">verify the authentication token</a> as well as the <a href=":matomo_configuration_form">Matomo site ID and URL</a>.', [
          ':matomo_reporting_api_configuration_form' => \Drupal::service('url_generator')->generateFromRoute('matomo_reporting_api.settings_form'),
          ':matomo_configuration_form' => \Drupal::service('url_generator')->generateFromRoute('matomo.admin_settings_form'),
        ]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }

  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function matomo_reporting_api_install() {
  if (\Drupal::moduleHandler()->moduleExists('piwik_reporting_api')) {
    // If 'piwik_reporting_api' module was previously enabled migrate its
    // configuration and disable the module.
    $config_factory = \Drupal::configFactory();
    $config = $config_factory->get('piwik_reporting_api.settings');
    $data = $config->getRawData();
    $config_factory->getEditable('matomo_reporting_api.settings')
      ->setData($data)
      ->save();
    \Drupal::service('module_installer')->uninstall(['piwik_reporting_api']);
  }
}
