<?php

/**
 * @file
 * Contains commerce_recent_purchase_popup.module.
 */

/**
 * Implements hook_theme().
 */
function commerce_recent_purchase_popup_theme($existing, $type, $theme, $path) {
  return [
    'commerce_recent_purchase_popup_block' => [
      'variables' => [
        'user_info' => [],
      ],
    ],
  ];
}

/**
 * Prepares variables for recent purchase template.
 *
 * Default template: commerce-recent-purchase-popup-block.html.twig.
 *
 * @param array $variables
 *   An associative array with variables for template.
 */
function template_preprocess_commerce_recent_purchase_popup_block(array &$variables) {
  $variables['items'] = [];
  $entity_type_manager = \Drupal::service('entity_type.manager');
  $orderStorage = $entity_type_manager->getStorage('commerce_order');

  $query = $orderStorage->getQuery()
    ->condition('state', 'completed')
    ->sort('order_id', 'DESC')
    ->range(0, 10);

  // Allow other modules to alter query.
  /** @var \Drupal\Core\Entity\Query\Sql\Query $query */
  \Drupal::moduleHandler()->alter('commerce_recent_purchase_popup_query', $query);

  $order_ids = $query->execute();
  if ($order_ids) {
    $orders = $orderStorage->loadMultiple($order_ids);
    $products = [];
    foreach ($orders as $order) {
      $items = $order->getItems();
      foreach ($items as $item) {
        if (($purchased_entity = $item->getPurchasedEntity()) && ($product = $purchased_entity->getProduct())) {
          $products[] = [
            'product' => $product,
            'order' => $order,
          ];
        }
      }
    }
    if ($products) {
      $random_products_ids = count($products) > 10 ? array_rand($products, 10) : array_keys($products);
      foreach ($random_products_ids as $random_products_id) {
        $random_product = $products[$random_products_id];
        $image = '';
        if ($random_product['product']->hasField('field_product_image')) {
          $images = $random_product['product']->get('field_product_image')
            ->getValue();
          $image = !empty($images[0]['target_id']) ? $entity_type_manager->getStorage('file')->load($images[0]['target_id']) : '';
        }
        $variables['items'][] = [
          'product_image' => $image ? $image->getFileUri() : $image,
          'product_link' => [
            'url' => $random_product['product']->toUrl(),
            'title' => $random_product['product']->getTitle(),
          ],
          'order_place' => \Drupal::service('token')->replace($variables['user_info'], ['profile' => $random_product['order']->getBillingProfile()]),
          'order_time' => t('@time ago', ['@time' => \Drupal::service('date.formatter')->formatTimeDiffSince($random_product['order']->getCompletedTime())]),
        ];
      }
    }
  }
}
