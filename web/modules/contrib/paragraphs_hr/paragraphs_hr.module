<?php

/**
 * @file
 * Paragraph HR module file.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_theme().
 */
function paragraphs_hr_theme($existing, $type, $theme, $path) {

    return [
        'paragraph__hr' => [
            'base hook' => 'paragraph',
        ],
    ];
}

/**
 * Implements hook_preprocess_paragraph().
 */
function paragraphs_hr_preprocess_paragraph__hr(&$vars) {

    $hr = $vars['elements']['#paragraph'];

    $vars['hr_class'] = "";
    if ($class = $hr->field_hr_class->getValue()) {
        $vars['hr_class'] = $class[0]['value'];
    }
}

/**
 * Return the allowed class values for the field.
 *
 * @return array
 */
function paragraphs_hr_allowed_values() {
    $options = [
        'hr--thin' => t('Thin'),
        'hr--thick' => t('Thick'),
    ];

    \Drupal::moduleHandler()->alter('paragraphs_hr_allowed_values', $options, $definition, $entity);
    return $options;
}

/**
 * @param FieldStorageConfig $definition
 * @param ContentEntityInterface|NULL $entity
 * @param $cacheable
 * @return array
 */
function paragraphs_hr_allowed_values_function(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
    return paragraphs_hr_allowed_values();
}

/**
 * @param EntityInterface $entity
 * @param FieldDefinitionInterface $field_definition
 * @return array
 */
function paragraphs_hr_default_value_callback(EntityInterface $entity, FieldDefinitionInterface $field_definition) {
    $options = paragraphs_hr_allowed_values();
    $option = array_shift(array_keys($options));
    return ['value' => $option];
}
