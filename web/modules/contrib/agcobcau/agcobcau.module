<?php

/**
 * @file
 * Contains agcobcau.module.
 */

use Drupal\Core\DependencyInjection\ContainerBuilder;
use Drupal\Core\PhpStorage\PhpStorageFactory;
use Drupal\field\Entity\FieldInstanceConfig;

define('AGCOBCAU_NAMESPACE', 'Drupal\agcobcau\Entity\\');

/**
 * Implements hook_entity_bundle_create().
 */
function agcobcau_entity_bundle_create($entity_type_id, $bundle) {
  $entityManager = Drupal::entityManager();
  $typedDataManager = \Drupal::typedDataManager();
  $entityType = $entityManager->getDefinition($entity_type_id);
  $build = array(
    '#theme' => 'agcobcau_entity_class',
    '#entity_type_id' => $entity_type_id,
    '#bundle' => $bundle,
    '#bundle_key' => $entityType->getKey('bundle'),
    '#short_classname' => ContainerBuilder::camelize("$entity_type_id $bundle"),
    '#base_class' => '\\' . $entityType->getClass(),
  );
  foreach ($entityManager->getFieldDefinitions($entity_type_id, $bundle) as $field_name => $definition) {
    $type_definition = $typedDataManager->getDefinition('field_item:' . $definition->getType());
    // @TODO, some definitions start with a \ others don't, so always remove it
    // and then add it back.
    $build['#properties'][$field_name] = array(
      '\\' . ltrim($type_definition['class'], '\\'),
      '\\' . ltrim($type_definition['class'], '\\') . '[]',
      $definition->getClass(),
    );
  }
  PhpStorageFactory::get('agcobcau')->save(str_replace('\\', '/', AGCOBCAU_NAMESPACE  . $build['#short_classname']), drupal_render_root($build));
}

/**
 * Implements hook_entity_bundle_delete().
 */
function agcobcau_entity_bundle_delete($entity_type_id, $bundle) {
  $classname = AGCOBCAU_NAMESPACE . ContainerBuilder::camelize("$entity_type_id $bundle");
  PhpStorageFactory::get('agcobcau')->delete(str_replace('\\', '/', $classname));
}

/**
 * Implements hook_ENTITY_TYPE_create().
 */
function agcobcau_field_config_create(\Drupal\field\Entity\FieldConfig $field) {
  agcobcau_entity_bundle_create($field->getTargetEntityTypeId(), $field->getTargetBundle());
}

/**
 * Implements hook_theme().
 */
function agcobcau_theme() {
  return array(
    'agcobcau_entity_class' => array(
      'variables' => array(
        'entity_type_id' => NULL,
        'bundle' => NULL,
        'bundle_key' => NULL,
        'short_classname' => NULL,
        'properties' => array(),
        'base_class' => NULL),
      'template' => 'agcobcau-entity-class',
    ),
  );
}

/**
 * Implements hook_cron().
 */
function agcobcau_cron() {
  PhpStorageFactory::get('agcobcau')->garbageCollection();
}
