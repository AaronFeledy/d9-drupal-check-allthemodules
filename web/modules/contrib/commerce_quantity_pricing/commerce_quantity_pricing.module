<?php

/**
 * @file
 * Hooks for quantity pricing.
 */

use Drupal\commerce_price\Price;
use Drupal\commerce_product\Entity\Product;

/**
 * Fetches price for product based on quantity (if available).
 *
 * @param \Drupal\commerce_product\Entity\Product $product
 *   Product entity.
 * @param int $quantity
 *   Quantity of entity present.
 *
 * @return \Drupal\commerce_price\Price|bool
 *   Returns the price entity or FALSE if price isn't found.
 */
function commerce_quantity_pricing_get_price(Product $product, $quantity) {
  foreach ($product->referencedEntities() as $referencedEntity) {
    $class = get_class($referencedEntity);
    if (strpos($class, 'Term') > -1 && $referencedEntity->hasField('field_quantity_pricing')) {
      $values = $referencedEntity->get('field_quantity_pricing')->getValue();
      if ($values) {
        foreach ($values as $value) {
          if ($value['min'] <= $quantity && $quantity <= $value['max']) {
            $price = explode('/', $value['price']);
            return new Price($price[0], $price[1]);
          }
        }
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_theme().
 */
function commerce_quantity_pricing_theme($existing, $type, $theme, $path) {
  return [
    'quantity_pricing_format' => [
      'variables' => ['price' => NULL, 'currency'=> NULL, 'quantity' => NULL],
    ],
  ];
}
