<?php

/**
 * @file
 * Main module file.
 */

/**
 * Implements hook_form_alter().
 */
function dirtyform_form_alter(&$form, &$form_state, $form_id) {
  if (dirtyform_form_id($form_id)) {
    $form['#attached']['library'][] = 'dirtyform/dirtyform';
    $conf = [
      'addRemoveFieldsMarksDirty' => TRUE,
    ];
    \Drupal::moduleHandler()->alter('dirtyform_configure', $conf, $form);
    $form['#attached']['drupalSettings']['dirtyform'] = [$form['#id'] => $conf];
  }
}

/**
 * Determine if dirtyform is enabled for the form id.
 */
function dirtyform_form_id($form_id) {
  if (in_array($form_id, dirtyform_form_id_whitelist())) {
    return TRUE;
  }
  if (in_array($form_id, dirtyform_form_id_blacklist())) {
    return FALSE;
  }
  foreach (dirtyform_form_id_regex() as $pattern) {
    if (preg_match($pattern, $form_id)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Getter/setter for the configured form id whitelist.
 */
function dirtyform_form_id_whitelist($value = NULL) {
  if (isset($value)) {
    $config = \Drupal::configFactory()->getEditable('dirtyform.settings');
    $config->set('dirtyform_form_id_whitelist', $value);
    $config->save();
  }
  else {
    $config = \Drupal::config('dirtyform.settings');
  }
  return $config->get('dirtyform_form_id_whitelist') ?: [];
}

/**
 * Getter/setter for the configured form id blacklist.
 */
function dirtyform_form_id_blacklist($value = NULL) {
  if (isset($value)) {
    $config = \Drupal::configFactory()->getEditable('dirtyform.settings');
    $config->set('dirtyform_form_id_blacklist', $value);
    $config->save();
  }
  else {
    $config = \Drupal::config('dirtyform.settings');
  }
  return $config->get('dirtyform_form_id_blacklist') ?: [];
}

/**
 * Getter/setter for the configured form id regex.
 */
function dirtyform_form_id_regex($value = NULL) {
  if (isset($value)) {
    $config = \Drupal::configFactory()->getEditable('dirtyform.settings');
    $config->set('dirtyform_form_id_regex', $value);
    $config->save();
  }
  else {
    $config = \Drupal::config('dirtyform.settings');
  }
  return $config->get('dirtyform_form_id_regex') ?: ['/.*_node_form/'];
}
