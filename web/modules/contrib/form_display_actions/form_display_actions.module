<?php

/**
 * @file
 * Contains form_display_actions.module.
 */

use Drupal\Core\Field\FieldConfigInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function form_display_actions_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.form_display_actions':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Add in actions to fields on the form_display edit page.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function form_display_actions_form_entity_form_display_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $user = \Drupal::currentUser();
  if (!$user->hasPermission('access form display actions')) {
    return;
  }

  $form_display = $form_state->getFormObject()->getEntity();
  $field_definitions = form_display_actions_fetch_field_definitions($form_display->getTargetEntityTypeId(), $form_display->getTargetBundle());
  $entity_type_id = $form_display->getTargetEntityTypeId();
  $bundle = $form_display->getTargetBundle();
  $entity_type_manager = \Drupal::service('entity_type.manager');
  $bundle_entity_type = $entity_type_manager->getDefinition($entity_type_id)->get('bundle_entity_type');

  foreach ($field_definitions as $field_name => $field_definition) {
    $destination = \Drupal::destination()->getAsArray();
    $edit_url = Url::fromRoute(
      'entity.field_config.' . $entity_type_id . '_field_edit_form',
      [
        'field_config' => $entity_type_id . '.' . $bundle . '.' . $field_name,
        $bundle_entity_type => $bundle,
      ],
      ['query' => $destination]
    );

    $delete_url = Url::fromRoute(
      'entity.field_config.' . $entity_type_id . '_field_delete_form',
      [
        'field_config' => $entity_type_id . '.' . $bundle . '.' . $field_name,
        $bundle_entity_type => $bundle,
      ],
      ['query' => $destination]
    );

    $form['fields'][$field_name]['operations'] = [
      '#type' => 'dropbutton',
      '#links' => [
        'edit' => [
          'title' => t('Edit'),
          'url' => $edit_url,
        ],
        'delete' => [
          'title' => t('Delete'),
          'url' => $delete_url,
        ],
      ],
    ];
  }

  // Add in operations to header at the end.
  $form['fields']['#header'][] = ['data' => t('Operations')];

  foreach (\Drupal\Core\Render\Element::children($form['fields']) as $field_name) {
    if (!isset($form['fields'][$field_name]['operations'])) {
      $form['fields'][$field_name]['operations']['#markup'] = '';
    }
  }

  // Special field_group handling.
  if (\Drupal::moduleHandler()->moduleExists('field_group')) {
    if (isset($form['#fieldgroups'])) {
      foreach ($form['#fieldgroups'] as $group_name) {
        // Shift any field_group operations placed into settings_edit into the
        // operations column.
        if (isset($form['fields'][$group_name]['settings_edit'])) {
          $field_group_actions = str_replace('</div>', '', $form['fields'][$group_name]['settings_edit']['#suffix']);
          $form['fields'][$group_name]['settings_edit']['#suffix'] = '</div>';
          $form['fields'][$group_name]['operations']['#markup'] = $field_group_actions;
        }
      }
    }

    if (isset($form['fields']['_add_new_group']['operations'])) {
      unset($form['fields']['_add_new_group']['operations']);
    }
  }

}

/**
 * Fetch the field definitions.
 */
function form_display_actions_fetch_field_definitions($entity_type, $bundle, $field_definitions = NULL) {
  if ($field_definitions === NULL) {
    $entity_manager = \Drupal::entityManager();
    $field_definitions = $entity_manager->getFieldDefinitions($entity_type, $bundle);
  }

  $field_definitions = array_filter($field_definitions, function($field_definition) {
    return $field_definition instanceof FieldConfigInterface;
  });

  uasort($field_definitions, ['\Drupal\Core\Config\Entity\ConfigEntityBase', 'sort']);

  return $field_definitions;
}
