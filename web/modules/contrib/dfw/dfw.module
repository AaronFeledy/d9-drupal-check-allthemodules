<?php
/**
 * Implements hook_menu().
 */
function dfw_menu() {
  $items = array();

  $items[] = array(
    // Add a config form
    $items['admin/config/dfw/config'] = array(
      'title' => 'Configure dfw',
      'description' => 'Configuring main dfw options.',
      'page arguments' => array('dfw_configuring_form'),
      'page callback' => 'drupal_get_form',
      'access arguments' => array('administer site configuration'),
      'weight' => 10,
    ),
    $items['admin/config/dfw/debug'] = array(
      'title' => 'Dfw Debugger',
      'description' => 'Debugging helpers',
      'page arguments' => array('dfw_debugging_form'),
      'page callback' => 'drupal_get_form',
      'access arguments' => array('administer site configuration'),
      'weight' => 11,
    ),
    // @todo Remove once drupal_valid_path() is fixed to find and access check
    //   paths managed by the new routing system: http://drupal.org/node/1793520.
    $items['dfw/autocomplete'] = array(
      'title' => 'Dfw autocomplete',
      // _menu_router_build() denies access to paths without a page callback.
      'page callback' => 'NOT_USED',
      //'access callback' => 'user_access',
      'access arguments' => array('administer site configuration'),
      'type' => MENU_CALLBACK,
      //'file' => 'user.pages.inc',
    ),
  );

  return $items;
}

/**
 * Main module config form().
 */
function dfw_configuring_form($form_state) {
  $config = config('dfw.config');
  $dfw_vars = $config->get('dfw.dfw_vars');

/*
 *  @todo make this vars configurable via admin interface
 *  dfw_select hooks_form()
 *  @see http://api.drupal.org/api/drupal/includes%21module.inc/function/module_hook_info/7
 */
  $dfw_vars_menu = $config->get('dfw.dfw_vars_menu');
  $dfw_vars_cron = $config->get('dfw.dfw_vars_cron');

  $form['menu'] = array(
    '#type' => 'details',
    '#title' => t('hook_menu filter setting - check modules to disable menu'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  // looking for disabled in config hooks
  if (is_array($dfw_vars_menu)) {
    foreach ($dfw_vars_menu as $module => $val) {
      if ($module != 'dfw') {
        $form['menu'][$module . '_menu'] = array(
          '#type' => 'checkbox',
          '#title' => check_plain($module . '_menu'),
          '#default_value' => $val,
          '#description' => t('Disabled in config. Firewalled!!!'),
        );
      }
    }
  }
  // looking for already enabled hooks
  // getImplementations() - overrides disabled in config if cache not rebuild
  foreach (drupal_container()->get('module_handler')->getImplementations('menu') as $module) {
    if ($module != 'dfw') {
      $form['menu'][$module . '_menu'] = array(
        '#type' => 'checkbox',
        '#title' => check_plain($module . '_menu'),
        '#default_value' => isset($dfw_vars_menu[$module]) ? $dfw_vars_menu[$module] : NULL,
        '#description' => isset($dfw_vars_menu[$module]) && ($dfw_vars_menu[$module] != 1) ? t('Got via getImplementations()') : t('Got via getImplementations(). Not disabled yet - have to do cache clear all!!!'),
      );
    }
  }


  $form['cron'] = array(
    '#type' => 'details',
    '#title' => t('hook_cron filter setting - check modules to disable menu'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  // looking for disabled in config hooks
  if (is_array($dfw_vars_cron)) {
    foreach ($dfw_vars_cron as $module => $val) {
      if ($module != 'dfw') {
        $form['cron'][$module . '_cron'] = array(
          '#type' => 'checkbox',
          '#title' => check_plain($module . '_cron'),
          '#default_value' => $val,
          '#description' => t('Disabled in config. Firewalled!!!'),
        );
      }
    }
  }
  // looking for already enabled hooks
  // getImplementations() - overrides disabled in config if cache not rebuild
  foreach (drupal_container()->get('module_handler')->getImplementations('cron') as $module) {
    if ($module != 'dfw') {
      $form['cron'][$module . '_cron'] = array(
        '#type' => 'checkbox',
        '#title' => check_plain($module . '_cron'),
        '#default_value' => isset($dfw_vars_cron[$module]) ? $dfw_vars_cron[$module] : NULL,
        '#description' => isset($dfw_vars_cron[$module]) && ($dfw_vars_cron[$module] != 1) ? t('Got via getImplementations()') : t('Got via getImplementations(). Not disabled yet - have to do cache clear all!!!'),
      );
    }

  }
  $form['cache'] = array(
    '#type' => 'details',
    '#title' => t('Cache parameters'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['cache']['cca'] = array(
    '#type' => 'checkbox',
    '#title' => 'Clear cache all - drupal_flush_all_caches',
    '#default_value' => $dfw_vars['cca'],
  );
  $form['dfw'] = array(
    '#type' => 'details',
    '#title' => t('dfw parameters'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['dfw']['menu'] = array(
    '#type' => 'checkbox',
    '#title' => 'Clear dfw menu settings',
    '#default_value' => $dfw_vars['dfw_menu'],
  );
  $form['dfw']['cron'] = array(
    '#type' => 'checkbox',
    '#title' => 'Clear dfw cron settings',
    '#default_value' => $dfw_vars['dfw_cron'],
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Dfw debugging form
 */
function dfw_debugging_form($form_state) {
  $form['debug'] = array(
    '#type' => 'details',
    '#title' => t('Debug'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['debug']['drupal_container'] = array(
    '#type' => 'textfield',
    '#autocomplete_path' => 'dfw/autocomplete',
    '#title' => t('drupal_container() debugger'),
    '#size' => '120',
    '#maxlength' => '1024',
    '#default_value' => '',
  );
  // @todo remove this debug
  // @todo Remove once drupal_valid_path() is fixed to find and access check
  //   paths managed by the new routing system: http://drupal.org/node/1793520.
  if (drupal_valid_path($form['debug']['drupal_container']['#autocomplete_path'])){
    drupal_set_message('Dfw: valid autocomplete');
  }
  return $form;
}

/**
 * Handling form submit with setting options.
 * @see http://drupal.org/node/1894902
 *
 * @todo create actions via hook_action_info()
 */
function dfw_configuring_form_submit($form, &$form_state) {
  $config = config('dfw.config');
  $dfw_vars = array();

  // @todo make this vars configurable via admin interface
  // @see http://api.drupal.org/api/drupal/includes%21module.inc/function/module_hook_info/7
  $dfw_vars_menu = $config->get('dfw.dfw_vars_menu');
  $dfw_vars_cron = $config->get('dfw.dfw_vars_cron');

  // looking for disabled in config hooks
  if (is_array($dfw_vars_menu)) {
    foreach ($dfw_vars_menu as $module => $val) {
      if ($module != 'dfw' && isset($form['menu'][$module . '_menu'])) {
        $dfw_vars_menu[$module] = $form['menu'][$module . '_menu']['#checked'];
      }
    }
  }
  foreach (drupal_container()->get('module_handler')->getImplementations('menu') as $module) {
    if ($module != 'dfw') {
      $dfw_vars_menu[$module] = $form['menu'][$module . '_menu']['#checked'];
    }
  }

  // looking for disabled in config hooks
  if (is_array($dfw_vars_cron)) {
    foreach ($dfw_vars_cron as $module => $val) {
      if ($module != 'dfw' && isset($form['cron'][$module . '_cron'])) {
        $dfw_vars_cron[$module] = $form['cron'][$module . '_cron']['#checked'];
      }
    }
  }
  foreach (drupal_container()->get('module_handler')->getImplementations('cron') as $module) {
    if ($module != 'dfw') {
      $dfw_vars_cron[$module] = $form['cron'][$module . '_cron']['#checked'];
    }
  }
  $dfw_vars['cca'] = $form['cache']['cca']['#checked'];
  $dfw_vars['dfw_cron'] = $form['dfw']['cron']['#checked'];
  $dfw_vars['dfw_menu'] = $form['dfw']['menu']['#checked'];

  $config = config('dfw.config');
  $config->set('dfw.dfw_vars_cron', $dfw_vars_cron);
  $config->set('dfw.dfw_vars_menu', $dfw_vars_menu);
  $config->save();

  if ($dfw_vars['dfw_cron']) {
    $config->clear('dfw.dfw_vars_cron');

    drupal_set_message('dfw_vars_cron cleared');
  }
  if ($dfw_vars['dfw_menu']) {
    $config->clear('dfw.dfw_vars_menu');

    drupal_set_message('dfw_vars_menu cleared');
  }
  if ($dfw_vars['cca']) {
    drupal_flush_all_caches();
    drupal_set_message('all caches cleared');
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function dfw_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'menu') {
    drupal_set_message('Dfw: all hook_menu re-executed');
    $dfw_vars = array();
    $config = config('dfw.config');
    $dfw_vars = $config->get('dfw.dfw_vars_menu');

    if (is_array($dfw_vars)) {
      foreach ($dfw_vars as $module => $val) {
        if ($val) {
          unset($implementations[$module]);
        }
      }
    }
  }
  if ($hook == 'cron') {
    drupal_set_message('Dfw: all hook_cron re-executed');
    $dfw_vars_cron = array();
    $config = config('dfw.config');
    $dfw_vars_cron = $config->get('dfw.dfw_vars_cron');

    if (is_array($dfw_vars_cron)) {
      foreach ($dfw_vars_cron as $module => $val) {
        if ($val) {
          unset($implementations[$module]);
        }
      }
    }
  }
}
