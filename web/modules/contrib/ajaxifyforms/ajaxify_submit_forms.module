<?php

/**
 * @file
 * Implement ajax form submit functionality.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\PrependCommand;
use Drupal\Core\Render\Element\StatusMessages;

/**
 * Implements hook_form_alter().
 */
function ajaxify_submit_forms_form_alter(&$form, &$form_state, $form_id) {
  $list = getlist_forms($form_id);

  if (count($list) > 0) {
    $selector = "ajaxify_submit_form_" . $form_id;
    $form['#prefix'] = '<div id="' . $selector . '">';
    $form['#suffix'] = '</div>';

    foreach ($list as $key => $value) {
      $value = explode(':', $value);
      $action = $value[1];
      // Adjust the form to use ajax submit.
      $form['actions'][$action]['#ajax'] = [
        'callback' => 'ajaxify_submit_forms_form_ajax_callback',
        'wrapper' => $selector,
        'effect' => 'fade',
      ];
    }
  }
}

/**
 * Ajax callback for form.
 *
 * @param mixed $form
 * @param mixed $form_state
 *
 * @return response
 */

/**
 * Implements ajaxify_submit_forms_form_ajax_callback().
 */
function ajaxify_submit_forms_form_ajax_callback($form, FormStateInterface & $form_state) {
  $form_id = $form['form_id']['#value'];

  $selector = "ajaxify_submit_form_" . $form_id;

  // Used to display results of drupal_set_message() calls.
  $messages = StatusMessages::renderMessages(NULL);

  // Create AJAX Response object.
  $response = new AjaxResponse();

  $output = [];

  if ($form_state->getErrors()) {
    $output[] = $messages;
    $response->addCommand(new PrependCommand($render_selector, $output));
  }
  else {
    // Default reload the page printing the status message.
    $output[] = $messages;
    $output[] = $form;
    $response->addCommand(new HtmlCommand($render_selector, $output));
  }

  return $response;
}

/**
 * Get list actions by form_id to use ajax.
 *
 * @param mixed $form_id
 *
 * @return array
 */

/**
 * Implements getlist_forms().
 */
function getlist_forms($form_id) {
  $configs = \Drupal::config('ajaxify_submit_forms.settings');
  $data = $configs->getRawData();
  $list = [];
  if (count($data) > 0) {
    for ($x = 0; $x < count($data); $x++) {
      $value = explode(':', $configs->get('ajaxify_submit_form_' . $x));
      if (in_array($form_id, $value)) {
        $list[] = $configs->get('ajaxify_submit_form_' . $x);
      }
    }
  }

  return $list;
}
