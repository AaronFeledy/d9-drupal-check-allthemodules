<?php

/**
 * @file
 * Contains location_selector.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\FieldStorageConfigInterface;

/**
 * Implements hook_help().
 */
function location_selector_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the location_selector module.
    case 'help.page.location_selector':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Location Selector with third party API.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_field_views_data_alter().
 *
 * Views integration for entity reference fields which reference nodes.
 * Adds a term relationship to the default field data.
 *
 * @see views_field_default_views_data()
 * @see https://drupal.stackexchange.com/questions/226268/views-exposed-filter-to-have-dropdown-of-entity-reference-in-cutstom-entity
 */
function location_selector_field_views_data_alter(array &$data, FieldStorageConfigInterface $field_storage) {
  if ($field_storage->getType() == 'location_selector_type') {
    foreach ($data as $table_name => $table_data) {
      foreach ($table_data as $field_name => $field_data) {
        if (isset($field_data['filter']) && $field_name != 'delta') {
          $data[$table_name][$field_name]['filter']['id'] = 'location_selector_filter';
        }
      }
    }
  }
}
