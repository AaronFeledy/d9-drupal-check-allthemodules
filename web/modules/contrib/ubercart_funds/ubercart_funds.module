<?php

/**
 * @file
 * Handles tierce functions for Ubercart funds.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function ubercart_funds_theme($existing, $type, $theme, $path) {
  return [
    'admin_site_balance' => [
      'variables' => [
        'balance' => NULL,
        'currency' => NULL,
        'symbol_after' => NULL,
      ],
    ],
    'admin_user_balances' => [
      'variables' => [
        'balance' => NULL,
        'currency' => NULL,
        'symbol_after' => NULL,
      ],
    ],
    'user_balance' => [
      'variables' => [
        'balance' => NULL,
        'currency' => NULL,
        'symbol_after' => NULL,
      ],
    ],
    'user_operations' => [
      'variables' => [
        'withdrawal_methods' => NULL,
      ],
    ],
    'uc_funds_mail' => [
      'template' => 'uc_funds_mail',
      'variables' => [
        'message' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function ubercart_funds_mail($key, &$message, $params) {
  switch ($key) {
    case 'uc_funds_transaction':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed; delsp=yes';
      $message['subject'] = $params['subject'];
      $message['title'] = $params['title'];
      $message['body'][] = $params['body'];
      break;
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Alter the checkout page to display the fees applied
 * for each payment method and prevent balance account
 * to be used as payment method.
 */
function ubercart_funds_form_uc_cart_checkout_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $item = reset($form['panes']['cart']['#items']);
  $model = $item->get('model')->getValue()[0]['value'];
  $item_type = explode('_', $model)[0];

  // Alter the methods markups to indicate the fees.
  if ($item_type == "deposit") {
    $payment_methods = $form['panes']['payment']['payment_method']['#options'];

    foreach ($payment_methods as $payment_method => $markup) {
      $plugin_id = \Drupal::entityTypeManager()->getStorage('uc_payment_method')->load($payment_method)->getPlugin()->getPluginId();
      $msg = \Drupal::service('ubercart_funds.fees_manager')->printMethodFee($payment_method);
      $form['panes']['payment']['payment_method']['#options'][$payment_method] = $markup . '<br>' . $msg;

      // Remove balance payment method for deposits.
      if ($plugin_id == 'funds') {
        unset($form['panes']['payment']['payment_method']['#options'][$payment_method]);
      }
    }
  }
}
