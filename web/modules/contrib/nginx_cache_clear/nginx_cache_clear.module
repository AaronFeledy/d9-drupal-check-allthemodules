<?php

/**
 * @file
 * Nginx Cache Clear module that help to clear the CGI/Proxy Cache file.
 */

 use Drupal\Core\Routing\RouteMatchInterface;
 use Drupal\Core\Url;
 use Drupal\Core\Link;
 use Drupal\nginx_cache_clear\Controller\NginxCacheClearController;

/**
 * Implements hook _help().
 */
function nginx_cache_clear_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.nginx_cache_clear':
      $config_link = Url::fromRoute('nginx_cache_clear.settings');
      $adminurl = Link::fromTextAndUrl(t('@text', ['@text' => 'Nginx Cache Clear Settings']), $config_link)->toString();
      $output = '';
      $output .= '<h3>' . t('About : Nginx Cache Clear') . '</h3>';
      $output .= '<p>' . t('Nginx Cache Clear(NCC) module helps to delete the cache file that created by Fast CGI Cache or Proxy Cache of nginx. This module helps to delete the cache file of specific url. It also helps to delete cache file of a specific node when it is updated.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('@adminurl', ['@adminurl' => $adminurl]) . '</dt>';
      $output .= '<dd>' . t('Under this module, the admin can configure the folder in the server where the cache files are stored. When implementing this module the administrator need to get knowledge of the cache key and the path that configured in the nginx configuration.');
      $output .= '<p>' . t('The following are the fields in admin configuration.') . '</p>';
      $output .= '<ul><li><strong>' . t('Webserver cache key :') . '</strong><i>' . t('The key value that configured nginx config file for variables fastcgi_cache_key or proxy_cache_key.') . '</i></li>';
      $output .= '<li><strong>' . t('Web Server Cache File Path :') . '</strong><i>' . t('The system path that configured in the nginx config to store cache file.') . '</i></li>';
      $output .= '<li><strong>' . t('Auto Clear Cache when Content edit :') . '</strong><i>' . t('If this option is enabled the module will delete the cache file of node when it is edited.') . '</i></li>';
      $output .= '</ul>';
      $output .= '<dd>';
      $output .= '<dt><b>' . t('Clear Nginx Cahe:') . '</b></dt>';
      $output .= '<dd>' . t('Nginx cache file can be removed by the following methods.');
      $output .= '<ol><li><strong>' . t('By Admin menu :') . '</strong> <i>' . t('Enable the module Administration menu(admin_menu). Open the URL in browser. Click the menu Proxy/CGI Cache under home > flush all caches.') . '</i></li>';
      $output .= '<li><strong>' . t('Auto Clear on Edit Node') . '</strong><i>' . t('Enable Auto Clear option in the module configuration. This will help to clear the cache file of node when it is updated.') . '</i></li>';
      $output .= '</ol>';
      $output .= '</dd>';
      $output .= '<dd>';
      $output .= '<h4>' . t('Hooks') . '</h4>';
      $output .= '<dt>' . t('hook_add_related_cached_url(&$alias_urls =array(), $node = null)') . '</dt>';
      $output .= '<dd>';
      $output .= '<ul><li><strong>' . t('$alias_urls') . '</strong> <i>' . t('$alias_urls is a reference array variable. In this variable the actual url will be in the first index. If you need to clear the cache of alias url push the other urls as string to that variable.') . '</i></li>';
      $output .= '<li><strong>' . t('$node :') . '</strong> <i>' . t('This variable holds the object of the node (if the node exist, otherwise holds null value).') . '</i></li>';
      $output .= '</ul>';
      $output .= '</dd>';
      $output .= '</dl>';
      return $output;
  }
}
/**
 * Implements hook_menu_links_discovered_alter().
 */
 function nginx_cache_clear_menu_links_discovered_alter(&$links) {
  $links['admin_toolbar_tools.clear_nginx'] = [
    'title' => t('Clear Nginx Cache'),
    'route_name' => 'admin_toolbar_tools.clear_nginx',
    'menu_name' => 'admin',
    'parent' => 'admin_toolbar_tools.flush',
  ];
}
/**
 * Implements hook_node_update().
 *
 * This hook is invoked when the user update any node.
 * In the settings page, if the option 'Auto clear cache when content edit'
 * is enabled, this hook will checks the cache file and delete
 * the same for the node.
 */
 function nginx_cache_clear_node_update($node) {
  // Checking the configuration of auto delete.
  if (!\Drupal::config('nginx_cache_clear.settings')->get('server_cache_auto_delete')) {
    return;
  }

  $alias_urls = array();

  $options = ['absolute' => TRUE];
  $url = \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $node->id()], $options);
  $url = $url->toString();
  array_push($alias_urls, $url);

  if (count(\Drupal::moduleHandler()->getImplementations('add_related_cached_url')) > 0) {
    foreach (\Drupal::moduleHandler()->getImplementations('add_related_cached_url') as $module) {
      $function = $module . '_add_related_cached_url';
      $function($alias_urls, $node);
    }
  }

  foreach ($alias_urls as $alias_url) {
    $msgs = array(
      "status" => t("The Nginx Cache of the @url is removed.", array("@url" => $alias_url)),
      "warning" => t("The Nginx Cache file of @url not found.", array("@url" => $alias_url)),
    );

    // Call a function nginxClearUrl in NginxCacheClearController.
    $cache_clear = new NginxCacheClearController;
    $status = $cache_clear->nginxClearUrl($alias_url) ? "status" : "warning";
    drupal_set_message($msgs[$status], $status);
  }

}