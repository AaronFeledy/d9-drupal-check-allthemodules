<?php

/**
 * @file
 * Main module file.
 */

/**
 * Implements hook_locale_translation_projects_alter().
 */
function l10n_update_bundled_locale_translation_projects_alter(&$projects) {
  // Get a regex of po files we're looking for.
  $po_regex = implode('|', array_keys(locale_translatable_language_list()));
  $po_regex = '# (' . $po_regex . ')\.po #';

  // Get all modules and themes.
  $files = system_rebuild_module_data();
  $files += \Drupal::service('theme_handler')->rebuildThemeData();

  /** @var \Drupal\Core\Extension\Extension $file */
  foreach ($files as $file) {
    if (isset($file->info['project']) && $file->info['project'] === 'drupal') {
      // Skip projects that belong to core.
      continue;
    }

    // Check that the project contains at least one of the required po files.
    $path = $file->getPath() . '/translations';
    if (!is_dir($path)) {
      continue;
    }

    $files = array_diff(scandir($path), array('.', '..'));
    $files = ' ' . implode(' ', $files) . ' ';

    if (!preg_match($po_regex, $files)) {
      continue;
    }

    // Build and add the info.
    $name = $file->getName();
    $info = $file->info;
    $info += array(
      'interface translation project' => $name,
      'interface translation server pattern' => $path . '/%language.po',
    );

    // Add or update the project.
    $projects[$name] = array(
      'name' => $name,
      'info' => $info,
      'datestamp' => REQUEST_TIME,
      'includes' => array(
        $name => $info['name'],
      ),
      'project_type' => $file->getType(),
      'project_status' => !empty($file->status),
    );
  }
}
