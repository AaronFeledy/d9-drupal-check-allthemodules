<?php

/**
 * @file
 * Contains commerce_cart_refresh.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\commerce_product\Entity\ProductVariationInterface;

/**
 * Implements hook_help().
 */
function commerce_cart_refresh_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name == 'help.page.commerce_cart_refresh') {
    $output = '';
    $output .= '<h3>' . t('Commerce Cart Refresh') . '</h3>';
    $output .= '<p>' . t('Custom behaviors to dynamically refresh carts content.') . '</p>';
    return $output;
  }
}

/**
 * Implements hook_entity_type_build().
 */
function commerce_cart_refresh_entity_type_build(array &$entity_types) {
  $entity_types['commerce_order_item']->setFormClass('add_to_cart', '\Drupal\commerce_cart_refresh\Form\AddToCartForm');
}

/**
 * Implements hook_preprocess_field().
 */
function commerce_cart_refresh_preprocess_field(&$variables) {
  // Add unique ID for Ajax replacement.
  if ($variables['field_type'] == 'commerce_price') {
    $field_name   = $variables['field_name'];
    $field_object = isset($variables['element']['#object']) ? $variables['element']['#object'] : NULL;
    if ($field_object instanceof ProductVariationInterface) {
      // We don't use $variables['attributes']['id'] because our Twig might print many Price items.
      // Hardcoded: 'product--variation-field--variation_' . $field_name . '__' . $variation->getProductId();
      $variables['ajax_unique_id'] = \Drupal::service('commerce_cart_refresh.manager')->getPriceDomSelector($field_object);
    }
  }
}
