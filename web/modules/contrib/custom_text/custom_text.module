<?php

/**
 * @file
 * Custom Text module file.
 */

/**
 * Implements hook_hook_info().
 */
function custom_text_hook_info() {
  $hooks = array();
  $hooks['custom_text_group_info'] = array(
    'group' => 'custom_text',
  );
  $hooks['custom_text_info'] = array(
    'group' => 'custom_text',
  );
  return $hooks;
}

/**
 * Change a text.
 */
function custom_text_set($identifier, $text, $text_format, $langcode = NULL) {
  if (!$langcode) {
    $language = \Drupal::languageManager()->getCurrentLanguage();
    $langcode = $language->getId();
  }

  $record = array(
    'identifier' => $identifier,
    'language' => $langcode,
    'text' => $text,
    'text_format' => $text_format,
    'text_cache' => $text_format ? (string) check_markup($text, $text_format, $langcode) : SafeMarkup::checkPlain($text),
  );

  db_transaction();
  return \Drupal::database()->merge('custom_text')
      ->fields($record)
      ->key(array(
        'identifier' => $identifier,
        'language' => $langcode,
      ))
      ->execute();
}

/**
 * Returns all (unformatted) texts for the form.
 */
function _custom_text_get_all() {
  $query = db_select('custom_text', 'ct');
  $query->fields('ct', array('identifier', 'language', 'text', 'text_format'));

  $texts = array();
  foreach ($query->execute() as $row) {
    $texts[$row->identifier][$row->language] = array(
      'value' => $row->text,
      'format' => $row->text_format,
    );
  }
  return $texts;
}

/**
 * Returns the text.
 *
 * The returned text is already formatted, there is no need to pass it through
 * check_plain() or check_markup().
 */
function custom_text_get($identifier, $langcode = NULL) {
  if (!$langcode) {
    $language = \Drupal::languageManager()->getCurrentLanguage();
    $langcode = $language->getId();
  }
  $query = db_select('custom_text', 'ct');
  $query->condition('identifier', $identifier);
  $query->condition('language', $langcode);
  $query->addField('ct', 'text_cache');

  $text = $query->execute()->fetchField();
  return $text;
}
