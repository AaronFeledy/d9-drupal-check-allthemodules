<?php

/**
 * @file
 * Contains multivalue_field_restriction.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function multivalue_field_restriction_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the multivalue_field_restriction module.
    case 'help.page.multivalue_field_restriction':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Restricts the number of value to display for multivalue fields') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function multivalue_field_restriction_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == 'entity_view_display_edit_form') {
    $data = get_stored_data();
    $entity_type = $form['#entity_type'];
    $bundle = $form['#bundle'];
    $view_mode = substr($form['#cache']['tags'][0], strrpos($form['#cache']['tags'][0], '.', -1) + 1);
    $form['fields']['#header'][] = "Limit in front";

    foreach ($form['#fields'] as $field) {
      $index = $entity_type . '.' . $bundle . '.' . $view_mode . '.' . $field;
      $defaultValue = isset($data[$index]) ? $data[$index] : '';
      $form['fields'][$field]['multivalue_limit'] = [
        '#type' => 'number',
        '#min' => 0,
        '#default_value' => $defaultValue,
      ];
    }

    foreach (array_keys($form['actions']) as $action) {
      if ($action != 'preview' && isset($form['actions'][$action]['#type']) && $form['actions'][$action]['#type'] === 'submit') {
        $form['actions'][$action]['#submit'][] = 'multivalue_field_restriction_form_submit';
      }
    }
  }
}

/**
 * Implements hook_preprocess_field().
 */
function multivalue_field_restriction_preprocess_field(&$variables, $hook) {

  foreach ($variables['element'] as $index => $values) {
    $view_mode = isset($variables['element']['#view_mode']) ? $variables['element']['#view_mode'] : NULL;
    $view_mode = $view_mode == 'full' ? 'default' : $view_mode;
    $entity_type = isset($variables['element']['#entity_type']) ? $variables['element']['#entity_type'] : NULL;
    $bundle = isset($variables['element']['#bundle']) ? $variables['element']['#bundle'] : NULL;
    $fieldName = isset($variables['element']['#field_name']) ? $variables['element']['#field_name'] : NULL;

    if ($entity_type && $bundle && $view_mode && $fieldName) {
      $data = get_stored_data();
      $index = $entity_type . '.' . $bundle . '.' . $view_mode . '.' . $fieldName;
      $value = isset($data[$index]) ? $data[$index] : '';
      if ($value != '') {
        $items = [];
        foreach ($variables['element'] as $k => $v) {
          if (is_int($k)) {
            $items[] = $value;
          }
        }
        if (count($items) > $value) {
          $variables['items'] = array_slice($variables['items'], 0, $value);
        }
      }
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function multivalue_field_restriction_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    $group = $implementations['multivalue_field_restriction'];
    unset($implementations['multivalue_field_restriction']);
    $implementations['multivalue_field_restriction'] = $group;
  }
}

/**
 * Form submit callback function.
 *
 * @param array $form
 *   Form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state object.
 */
function multivalue_field_restriction_form_submit(array &$form, FormStateInterface $form_state) {
  $entity_type = $form['#entity_type'];
  $bundle = $form['#bundle'];
  $view_mode = substr($form['#cache']['tags'][0], strrpos($form['#cache']['tags'][0], '.', -1) + 1);
  $formValues = $form_state->getValues();

  if ($entity_type && $bundle && $view_mode && isset($formValues['fields'])) {
    $config = \Drupal::configFactory()->getEditable('multivalue_field_restriction.settings');
    if ($config) {
      $newValues = NULL;
      foreach ($formValues['fields'] as $fieldName => $value) {
        if (isset($value['multivalue_limit']) && $value['multivalue_limit'] != '') {
          $newValues[$entity_type . '.' . $bundle . '.' . $view_mode . '.' . $fieldName] = $value['multivalue_limit'];
        }
      }
      $config->set('fields', serialize($newValues));
      $config->save();
    }
  }
}

/**
 * Get config data.
 *
 * @return mixed|null
 *   Array.
 */
function get_stored_data() {
  $config = \Drupal::configFactory()->getEditable('multivalue_field_restriction.settings');
  if ($config) {
    $values = $config->get('fields');
    if ($values) {
      return unserialize($values);
    }
  }
  return NULL;
}
