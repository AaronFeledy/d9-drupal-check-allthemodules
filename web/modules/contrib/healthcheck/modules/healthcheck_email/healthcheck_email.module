<?php

/**
 * @file
 * Contains healthcheck_email.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function healthcheck_email_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the healthcheck_email module.
    case 'help.page.healthcheck_email':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Email notifications Healthcheck') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_mail().
 */
function healthcheck_email_mail($key, &$message, $params) {
  switch($key) {
    case 'healthcheck_critical':
    case 'healthcheck_cron':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function healthcheck_email_form_healthcheck_settings_form_alter(&$form,  \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Get the site's default email address.
  $site_email = \Drupal::config('system.site')->get('mail');

  // Get settings for the module.
  $config = \Drupal::config('healthcheck_email.settings');

  $form['email_critical'] = [
    '#type' => 'fieldset',
    '#title' => t('Email notifications for critical findings')
  ];

  $email_critical_enabled = $config->get('email_critical_enabled');
  $form['email_critical']['email_critical_enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Send email when for critical findings'),
    '#description' => t('The frequency of emails depends on the value of the <em>Run Every</em> field.'),
    '#default_value' => $email_critical_enabled,
  ];

  $email_critical_to = $config->get('email_critical_to');
  $form['email_critical']['email_critical_to'] = [
    '#type' => 'email',
    '#title' => t('Email'),
    '#default_value' => empty($email_critical_to) ? $site_email : $email_critical_to,
    '#required' => TRUE,
  ];

  $email_critical_subject = $config->get('email_critical_subject');
  $form['email_critical']['email_critical_subject'] = [
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#required' => TRUE,
    '#default_value' => !empty($email_critical_subject) ? $email_critical_subject : t('Your site has a critical issue!'),
    '#description' => t('This field supports tokens.'),
  ];

  $email_critical_body = $config->get('email_critical_body');
  $form['email_critical']['email_critical_body'] = [
    '#type' => 'textarea',
    '#title' => t('Body'),
    '#required' => TRUE,
    '#default_value' => !empty($email_critical_body) ? $email_critical_body : t('The following critical findings have been found: '),
    '#description' => t('This field supports tokens.'),
  ];

  $form['email_critical']['tree'] = [
    '#theme' => 'token_tree_link',
    '#token_types' => ['healthcheck_report'],
  ];

  $form['email_cron'] = [
    '#type' => 'fieldset',
    '#title' => t('Email background reports')
  ];

  $email_cron_enabled = $config->get('email_cron_enabled');
  $form['email_cron']['email_cron_enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Send email when for reports run in the background'),
    '#description' => t('The frequency of emails depends on the value of the <em>Run Every</em> field.'),
    '#default_value' => $email_cron_enabled,
  ];

  $email_cron_to = $config->get('email_cron_to');
  $form['email_cron']['email_cron_to'] = [
    '#type' => 'email',
    '#title' => t('Email'),
    '#default_value' => empty($email_cron_to) ? $site_email : $email_cron_to,
    '#required' => TRUE,
  ];

  $email_cron_subject = $config->get('email_cron_subject');
  $form['email_cron']['email_cron_subject'] = [
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#required' => TRUE,
    '#default_value' => !empty($email_cron_subject) ? $email_cron_subject : t('Your Healthcheck report'),
    '#description' => t('This field supports tokens.'),
  ];

  $email_cron_body = $config->get('email_cron_body');
  $form['email_cron']['email_cron_body'] = [
    '#type' => 'textarea',
    '#title' => t('Body'),
    '#required' => TRUE,
    '#default_value' => !empty($email_cron_body) ? $email_cron_body : t('Healthcheck has inspected your site.'),
    '#description' => t('This field supports tokens.'),
  ];

  $form['email_cron']['tree'] = [
    '#theme' => 'token_tree_link',
    '#token_types' => ['healthcheck_report'],
  ];

  $form['#submit'][]  = 'healthcheck_email_healthcheck_settings_form_submit';
}

/**
 * Submit handler for Healthcheck settings form.
 */
function healthcheck_email_healthcheck_settings_form_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  /** @var \Drupal\Core\Config\Config $config */
  $config = \Drupal::service('config.factory')->getEditable('healthcheck_email.settings');

  $config->set('email_critical_enabled', $form_state->getValue('email_critical_enabled'))
    ->set('email_critical_to', $form_state->getValue('email_critical_to'))
    ->set('email_critical_subject', $form_state->getValue('email_critical_subject'))
    ->set('email_critical_body', $form_state->getValue('email_critical_body'))
    ->set('email_cron_enabled', $form_state->getValue('email_cron_enabled'))
    ->set('email_cron_to', $form_state->getValue('email_cron_to'))
    ->set('email_cron_subject', $form_state->getValue('email_cron_subject'))
    ->set('email_cron_body', $form_state->getValue('email_cron_body'))
    ->save();
}
