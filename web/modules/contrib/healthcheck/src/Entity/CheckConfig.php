<?php

namespace Drupal\healthcheck\Entity;

use Drupal\Core\Config\Entity\ConfigEntityBase;
use Drupal\Core\Entity\EntityStorageInterface;
use Drupal\Core\Plugin\DefaultSingleLazyPluginCollection;

/**
 * Defines the CheckConfig entity.
 *
 * @ConfigEntityType(
 *   id = "checkconfig",
 *   label = @Translation("Healthcheck Plugin Config"),
 *   handlers = {
 *     "view_builder" = "Drupal\Core\Entity\EntityViewBuilder",
 *     "list_builder" = "Drupal\healthcheck\Controller\CheckConfigListBuilder",
 *     "form" = {
 *       "edit" = "Drupal\healthcheck\Form\CheckConfigForm",
 *     },
 *     "route_provider" = {
 *       "html" = "Drupal\healthcheck\CheckConfigHtmlRouteProvider",
 *     },
 *   },
 *   config_prefix = "check",
 *   config_export = {
 *     "id",
 *     "uuid",
 *     "label",
 *     "healthcheckConfig",
 *   },
 *   admin_permission = "configure healthcheck",
 *   entity_keys = {
 *     "id" = "id",
 *     "label" = "label",
 *     "uuid" = "uuid"
 *   },
 *   links = {
 *     "edit-form" = "/admin/config/system/healthcheck/checks/{checkconfig}/edit",
 *     "collection" = "/admin/config/system/healthcheck/checks"
 *   }
 * )
 */
class CheckConfig extends ConfigEntityBase implements CheckConfigInterface {

  /**
   * The CheckConfig ID.
   *
   * @var string
   */
  protected $id;

  /**
   * The CheckConfig label.
   *
   * @var string
   */
  protected $label;

  /**
   * The healthcheck plugin config.
   *
   * @var array
   */
  protected $healthcheckConfig = [];

  /**
   * The healthcheck plugin collection.
   *
   * @var \Drupal\Core\Plugin\DefaultSingleLazyPluginCollection
   */
  protected $checkPluginCollection;

  /**
   * {@inheritdoc}
   */
  public function getPluginCollections() {
    return [
      'healthcheckConfig' => $this->getCheckCollection(),
    ];
  }

  public function getCheckCollection() {
    if (!$this->checkPluginCollection) {
      $this->checkPluginCollection = new DefaultSingleLazyPluginCollection(
        \Drupal::service('plugin.manager.healthcheck_plugin'),
        $this->id,
        $this->healthcheckConfig
      );
    }

    return $this->checkPluginCollection;
  }

  public function getCheck() {
    return $this->getCheckCollection()->get($this->id);
  }

  public function preSave(EntityStorageInterface $storage) {
    parent::preSave($storage); // TODO: Change the autogenerated stub
  }
}
