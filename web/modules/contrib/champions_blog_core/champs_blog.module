<?php

/**
 * @file
 * Contains champs_blog.module.
 */

// Include the common / utility functions
require_once __DIR__ . '/includes/champs_blog.common.inc';

// Apply updates
require_once __DIR__ . '/includes/champs_blog.updates.inc';

// Include template registers
require_once __DIR__ . '/includes/champs_blog.templates.inc';

// Include template suggestion additions / alters
require_once __DIR__ . '/includes/champs_blog.suggestions.inc';

// Include metatags hooks
require_once __DIR__ . '/includes/champs_blog.metatags.inc';

// Include preprocess hooks
require_once __DIR__ . '/includes/champs_blog.preprocess.inc';


use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\taxonomy\Entity\Term;
// use Drupal\Core\Session\AccountProxyInterface; NOTE:  not sure if needed
use Drupal\user\Entity\User;
use Drupal\Core\Breadcrumb\Breadcrumb;


/**
 * Implements hook_help().
 */
function champs_blog_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the champs_blog module.
    case 'help.page.champs_blog':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The champions blog built by Joris. This is the first version which will contain some / most config files to be imported by config synchronization to speed up the migration process across sites.') . '</p>';
      return $output;

    default:
  }
}


/**
 * When a paragraph is removed, it is not deleted.
 * ! FIXME: yes, this is an existing bug, but it won't be solved with a hook.
 * ! A current workaround is to untick 'TOC Check' before removing the paragraph.
 */



/**
 * This hook is here mostly for the 3.1 sites. If there are breadcrumbs present
 * on the site, due to the URL patterns that we utilise for authors / tags,
 * breadcrumbs add an additional, non-existant URL to the set of breadcrumbs.
 * This then leads to 404 issues for SEO and a generally worse user experience.
 */
function champs_blog_system_breadcrumb_alter(\Drupal\Core\Breadcrumb\Breadcrumb &$breadcrumb, \Drupal\Core\Routing\RouteMatchInterface $route_match, array $context) {

  // Proceed only if breadcrumbs exist and this is not an admin page
  if ($breadcrumb && !\Drupal::service('router.admin_context')->isAdminRoute()) {

    // Get the current route name
    $route_name = \Drupal::routeMatch()->getRouteName();

    // Array of routes for which to remove the last breadcrumb
    $blog_routes = [
      'view.cb_view_author.page_1',
      'view.cb_view_tag.page_1'
      // 'view.cb_view_topic.page_1', // NOTE: don't need to enable this for topics
    ];

    if (in_array($route_name, $blog_routes)) {

      // Because the breadcrumbs links array is protected, we instead get the current
      // links, remove the last one, create a new breadcrumbs object and add the
      // new set of links to the new object.
      $links = $breadcrumb->getLinks();
      array_pop($links);
      $breadcrumb = new Breadcrumb();
      $breadcrumb->setLinks($links);
    }
  }
}