<?php

/**
 * @file
 * Adds Simple SEO preview content field for node entities.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function simple_seo_preview_theme($existing, $type, $theme, $path) {
  return [
    'simple_seo_preview_overview' => [
      'variables' => [
        'title'       => NULL,
        'url'         => NULL,
        'description' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_page_attachments_alter().
 */
function simple_seo_preview_page_attachments_alter(array &$attachments) {
  /** @var \Drupal\simple_seo_preview\SimpleSeoPreviewManager $simple_seo_preview_manager */
  $simple_seo_preview_manager = \Drupal::service('simple_seo_preview.manager');
  $elements = $simple_seo_preview_manager->generateElements();

  // Merge existing attachments.
  $attachments = array_merge_recursive($attachments, $elements);
}

/**
 * Implements template_preprocess_html().
 */
function simple_seo_preview_preprocess_html(&$variables) {
  /** @var \Drupal\simple_seo_preview\SimpleSeoPreviewManager $simple_seo_preview_manager */
  $simple_seo_preview_manager = \Drupal::service('simple_seo_preview.manager');
  $elements = $simple_seo_preview_manager->generateElements();

  if (!empty($elements['#attached']['html_head'])) {
    foreach ($elements['#attached']['html_head'] as $key => $element) {
      if (!empty($element[1]) && $element[1] === 'title') {
        // Empty head_title to avoid the site name and slogan to be appended to
        // the meta title.
        $variables['head_title'] = [];
        $variables['head_title']['title'] = html_entity_decode($element[0]['#attributes']['content'], ENT_QUOTES);
        break;
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for 'field_storage_config_edit_form'.
 */
function simple_seo_preview_form_field_storage_config_edit_form_alter(&$form, FormStateInterface $form_state) {
  if ($form_state->getFormObject()->getEntity()->getType() == 'simple_seo_preview') {
    // Hide the cardinality field.
    $form['cardinality_container']['#access'] = FALSE;
    $form['cardinality_container']['#disabled'] = TRUE;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Configuration defaults are handled via a different mechanism, so do not allow
 * any values to be saved.
 */
function simple_seo_preview_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state) {
  if ($form_state->getFormObject()->getEntity()->getType() == 'simple_seo_preview') {
    // Hide the default value fields.
    $form['default_value']['#access'] = FALSE;
    $form['default_value']['#disabled'] = TRUE;

    // Step through the default value structure and erase any '#default_value'
    // items that are found.
    foreach ($form['default_value']['widget'][0] as &$outer) {
      if (is_array($outer)) {
        foreach ($outer as &$inner) {
          if (is_array($inner) && isset($inner['#default_value'])) {
            if (is_array($inner['#default_value'])) {
              $inner['#default_value'] = [];
            }
            else {
              $inner['#default_value'] = NULL;
            }
          }
        }
      }
    }
  }
}
