<?php
/**
 * @file
 * Currencylayer currency converter Module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function currencylayer_currency_converter_help($route_name, RouteMatchInterface $route_match) {
  if ($route_name == 'help.page.currencylayer_currency_converter') {
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t("This module will help your website convert currency using the Currencylayer. It will give you a block to convert currency from one format to another. This module provides the option to set your default block currency. This module also provide a function to convert currency from one
format to another.") . '</p>';
    $output .= '<h3>' . t('Uses') . '</h3>';
    $output .= '<dl>';
    $output .= '<dt>' . t('Register on currencylayer') . '</dt>';
    $output .= '<dd>' . t('To register on <a href="@currencylayer" target="_blank">currencylayer</a> site and get Access Key', array('@currencylayer' => 'https://currencylayer.com')) . '</dd>';
    $output .= '<dt>' . t('Set API key') . '</dt>';
    $output .= '<dd>' . t('Set API key, at admin >> configuration >> currencylayer-currency-converter-setting.') . '</dd>';
    $output .= '<dt>' . t('Run Cron') . '</dt>';
    $output .= '<dd>' . t('Every cron run currency conversion rate save in "currencylayer_converter_rate" variable and at the time of currency conversion, system use this conversion rate. For more accurate rate set cron every 3 hours.') . '</dd>';
    $output .= '<dt>' . t('Enable Currencylayer currency converter block') . '</dt>';
    $output .= '<dd>' . t('Enable Currencylayer currency converter block & Change default currencies to convert from and to, at  admin » structure » block layout.') . '</dd>';
    $output .= '</dl>';
    return $output;
  }
}

/**
 * The callback for the cron job,
 */
function currencylayer_currency_converter_cron() {
  $apikey = \Drupal::config('currencylayer_currency_converter.settings')->get('currencylayer_currency_api_key');
  if (!$apikey) {
    \Drupal::logger('currencylayer currency converter')->notice("Please set currencylayer API key from configuration.");
  }
  else {
    \Drupal::configFactory()->getEditable('currencylayer_currency_converter.settings')->set('currencylayer_time', date('Y-m-d H:i:s'))->save();
    // start Currencylayer currency convert rate
    $url = "http://www.apilayer.net/api/live?access_key=" . $apikey;
    $request = curl_init();
    $timeout = 30;
    curl_setopt($request, CURLOPT_URL, $url);
    curl_setopt($request, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($request, CURLOPT_CONNECTTIMEOUT, $timeout);
    $results = curl_exec($request);
    curl_close($request);

    $currencylayer_converter_rate_array = json_decode($results);
    if ($currencylayer_converter_rate_array->success == 'true') {
      \Drupal::configFactory()->getEditable('currencylayer_currency_converter.settings')->set('currencylayer_converter_rate', $results)->save();
      \Drupal::logger('currencylayer currency converter')->notice("Currencylayer currency conversion rate $results.");
    }
    else { // Retry again to fetch currency rate
      $url = "http://www.apilayer.net/api/live?access_key=" . $apikey;
      $request = curl_init();
      $timeout = 30;
      curl_setopt($request, CURLOPT_URL, $url);
      curl_setopt($request, CURLOPT_RETURNTRANSFER, 1);
      curl_setopt($request, CURLOPT_CONNECTTIMEOUT, $timeout);
      $results = curl_exec($request);
      curl_close($request);

      $currencylayer_converter_rate_array = json_decode($results);
      if ($currencylayer_converter_rate_array->success == 'true') {
        \Drupal::configFactory()->getEditable('currencylayer_currency_converter.settings')->set('currencylayer_converter_rate', $results)->save();
        \Drupal::logger('currencylayer currency converter')->notice("Currencylayer currency conversion rate $results.");
      }
      else {
        \Drupal::logger('currencylayer currency converter')->notice("Currencylayer currency conversion not worked.");
      }
    }
  }
}
