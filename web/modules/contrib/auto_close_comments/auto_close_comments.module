<?php

/**
 * @file
 * Provides an auto close comments cron.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function auto_close_comments_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.auto_close_comments':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This Auto Close Comments module use to close comments for nodes after cretain period
                  of time.') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Configuring Auto Close Comments Cron') . '</dt>';
      $output .= '<dd>' . t('On the <a href=":auto-close-comments-settings">Configuration page</a>, you can set the frequency (time interval) for closing comments.', [':auto-close-comments-settings' => \Drupal::url('auto_close_comments.settings')]) . '</dd>';
      $output .= '</dl>';
      return $output;
  }
}

/**
 * Implements hook_cron().
 */
function auto_close_comments_cron() {
  // Get configuration.
  $config = \Drupal::config('auto_close_comments.settings');
  // Selected content type.
  $content_type = array_values(array_filter($config->get('auto_close_comments_content_type')));
  // Time interval to close comments.
  $interval = $config->get('auto_close_comments_time') ? $config->get('auto_close_comments_time') : '-7 days';
  // Time interval to close comments.
  $range = $config->get('auto_close_comments_items') ? $config->get('auto_close_comments_items') : FALSE;

  // Check conetnt type.
  if (!isset($content_type) && empty($content_type)) {
    drupal_set_message(t('Please select atleast one content type.'), 'status', FALSE);
    return;
  }
  // Get all nodes with open comments and with the time range.
  $query = \Drupal::database()->select('node', 'n');
  $query->join('node_field_data', 'nfd', 'n.nid = nfd.nid');
  $query->join('node__comment', 'nc', 'n.nid = nc.entity_id');
  $query->fields('n', ['nid', 'type']);
  $query->fields('nfd', ['created']);
  $query->condition('nfd.status', '1', '=');
  $query->condition('nc.comment_status', '1', '!=');
  $query->condition('n.type', $content_type, 'IN');
  $query->condition('nfd.created', strtotime($interval), '<=');
  // Number of item to process on cron run.
  if ($range) {
    // No offset required.
    $query->range(0, $range);
  }

  $z_results = $query->execute()->fetchAll();
  // Close comments for specify nodes.
  foreach ($z_results as $result) {
    $nid = $result->nid;
    $upd = \Drupal::database()->update('node__comment');
    $upd->fields(['comment_status' => 1]);
    $upd->condition('entity_id', $nid, '=');
    $upd->execute();
    \Drupal::entityManager()
      ->getStorage('node')
      ->resetCache([
        $nid,
      ]);
  }
}
