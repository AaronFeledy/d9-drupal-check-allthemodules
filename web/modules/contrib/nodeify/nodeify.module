<?php

/**
 * @file
 * Contains nodeify.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\node\NodeTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function nodeify_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the nodeify module.
    case 'help.page.nodeify':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Control Drupal core node messages.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nodeify_form_node_type_form_alter(&$form, FormStateInterface $form_state) {
  $node_type = $form_state->getFormObject()->getEntity();
  $form['nodeify'] = [
    '#type' => 'details',
    '#title' => t('Message settings'),
    '#access' => \Drupal::currentUser()->hasPermission('administer nodeify'),
    '#group' => 'additional_settings',
    '#tree' => TRUE,
  ];

  $settings = $form_state->getFormObject()->getEntity()->getThirdPartySetting('nodeify', 'text', []);

  foreach (['create', 'delete', 'update'] as $action) {
    $form['nodeify'][$action] = [
      '#type' => 'textarea',
      '#title' => t('@label @action text', [
        '@action' => $action,
        '@label' => $node_type->label(),
      ]),
      '#default_value' => !empty($settings[$action]) ? $settings[$action] : '',
    ];
    // Only open it if one of the actions have an override.
    if (!empty($message) && !isset($form[$node_type]['#open'])) {
      $form['nodeify']['#open'] = TRUE;
    }
  }
  $form['#entity_builders'][] = 'nodeify_form_node_type_form_builder';
}

/**
 * Entity builder for the node type form with menu options.
 *
 * @see nodeify_form_node_type_form_alter()
 */
function nodeify_form_node_type_form_builder($entity_type, NodeTypeInterface $type, &$form, FormStateInterface $form_state) {
  $type->setThirdPartySetting('nodeify', 'text', $form_state->getValue('nodeify'));
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nodeify_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  Drupal::service('nodeify.message_handler')->addSubmitHandlers($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function nodeify_form_node_confirm_form_alter(&$form, $form_state, $form_id) {
  Drupal::service('nodeify.message_handler')->addSubmitHandlers($form, $form_state);
}
