<?php

/**
 * @file
 * Contains taxonomy_quick_child.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\taxonomy\VocabularyInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_help().
 */
function taxonomy_quick_child_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the taxonomy_quick_child module.
    case 'help.page.taxonomy_quick_child':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows users to quickly add children to taxonomy terms.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function taxonomy_quick_child_form_taxonomy_vocabulary_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['taxonomy_quick_child'] = [
    '#type' => 'details',
    '#title' => t('Taxonomy Quick Child'),
    '#group' => 'additional_settings',
  ];

  // Load the current node type configuration entity.
  /** @var \Drupal\taxonomy\Entity\Vocabulary $vocabulary */
  $vocabulary = $form_state->getFormObject()->getEntity();

  $form['taxonomy_quick_child']['taxonomy_quick_child_enabled'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable Taxonomy Quick Child'),
    '#description' => t('This will allow users to quickly add children when creating or editing a term.'),
    '#default_value' => $vocabulary->getThirdPartySetting('taxonomy_quick_child', 'enabled', 0),
  ];

  $form['#entity_builders'][] = 'taxonomy_quick_child_form_taxonomy_vocabulary_form_builder';
}

/**
 * Entity form builder for the taxonomy vocabulary form to map some values to
 * third party settings.
 */
function taxonomy_quick_child_form_taxonomy_vocabulary_form_builder($entity_type, VocabularyInterface $vocabulary, &$form, FormStateInterface $form_state) {
  if ($form_state->getValue('taxonomy_quick_child_enabled') === 1) {
    $vocabulary->setThirdPartySetting('taxonomy_quick_child', 'enabled', 1);
    return;
  }

  $vocabulary->unsetThirdPartySetting('taxonomy_quick_child', 'enabled');
}

/**
 * Implements hook_entity_extra_field_info().
 */
function taxonomy_quick_child_entity_extra_field_info() {
  $extra = [];

  $vocabularies = Vocabulary::loadMultiple();
  $vocabularies = array_filter($vocabularies, function ($vocabulary) {
    /** @var \Drupal\taxonomy\Entity\Vocabulary $vocabulary */
    return $vocabulary->getThirdPartySetting('taxonomy_quick_child', 'enabled') === 1;
  });

  foreach ($vocabularies as $vocabulary) {
    /** @var \Drupal\taxonomy\Entity\Vocabulary $vocabulary */
    $extra['taxonomy_term'][$vocabulary->Id()]['form']['taxonomy_quick_child'] = [
      'label' => t('Add child terms'),
      'description' => t('A field for adding child terms to the current term'),
      'weight' => 100,
      'visible' => TRUE,
    ];
  }

  return $extra;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Adds the "Add child terms" form field to taxonomy term create and edit forms.
 */
function taxonomy_quick_child_form_taxonomy_term_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $storage = $form_state->getStorage();

  if ($storage['form_display']->getComponent('taxonomy_quick_child')) {
    /** @var \Drupal\Core\Entity\EntityInterface $entity */
    $entity = $form_state->getFormObject()->getEntity();

    /** @var \Drupal\taxonomy\Entity\Vocabulary $vocabulary */
    $vocabulary = Vocabulary::load($entity->bundle());

    $enabled = $vocabulary->getThirdPartySetting('taxonomy_quick_child', 'enabled');
    if (!$enabled) {
      return;
    }

    $form['taxonomy_quick_child'] = [
      '#type' => 'details',
      '#title' => t('Child terms'),
      '#open' => TRUE,
      '#tree' => TRUE,
    ];
    $form['taxonomy_quick_child']['add_child_terms'] = [
      '#type' => 'textfield',
      '#title' => t('Add child terms'),
      '#description' => t('Enter a comma-separated list of terms to add as children to this term.'),
      '#size' => 128,
      '#maxlength' => 256,
    ];

    $form['actions']['submit']['#submit'][] = 'taxonomy_quick_child_form_taxonomy_term_form_submit';

  }
}

/**
 * Submit handler for forms with Taxonomy Quick Child.
 */
function taxonomy_quick_child_form_taxonomy_term_form_submit($form, FormStateInterface $form_state) {
  $input = $form_state->getValue(['taxonomy_quick_child', 'add_child_terms']);

  if ($input) {
    /** @var \Drupal\Core\Entity\EntityInterface $entity */
    $entity = $form_state->getFormObject()->getEntity();

    $add_child_terms = preg_split('/, ?/', $input);

    // Create a new child term for each of the values entered by the user.
    foreach ($add_child_terms as $add_term) {
      $term = Term::create([
        'parent' => ['target_id' => $entity->id()],
        'name' => $add_term,
        'vid' => $form_state->getValue('vid'),
      ]);
      $term->save();
    }
  }
}
