<?php
/**
 * Implements hook_ppage_attachments().
 */
function tynt_page_attachments(array &$page) {
  $tynt_site_guid = \Drupal::config('tynt.settings')->get('tynt_site_guid');

  if (!empty($tynt_site_guid) && _tynt_visibility_pages() && _tynt_visibility_roles($user)) {
    $page['#attached']['html_head'][] = [
      [
        '#tag' => 'script',
        '#value' => "if(document.location.protocol=='http:'){
   var Tynt=Tynt||[];Tynt.push('" . $tynt_site_guid . "');
   (function(){var s=document.createElement('script');s.async=\"async\";s.type=\"text/javascript\";s.src='http://tcr.tynt.com/ti.js';var h=document.getElementsByTagName('script')[0];h.parentNode.insertBefore(s,h);})();
  }",
      ],
      'tynt'
    ];
  }
}

/**
 * Tynt visibility role check.
 *
 * Based on visibility setting this function returns TRUE if Tynt code should
 * be added for the current role and otherwise FALSE.
 */
function _tynt_visibility_roles($account) {

  $enabled = FALSE;
  $roles   = \Drupal::config('tynt.settings')->get('tynt_roles');

  if (array_sum($roles) > 0) {

    // One or more roles are selected for tracking.
    foreach (array_keys($account->roles) as $rid) {

      // Is the current user a member of one role enabled for tracking?
      if (isset($roles[$rid]) && $rid == $roles[$rid]) {

        // Current user is a member of a role that should be tracked.
        $enabled = TRUE;
        break;
      }
    }
  }
  else {

    // No role is selected for tracking, therefor all roles should be tracked.
    $enabled = TRUE;
  }

  return $enabled;
}

/**
 * Tynt visibility page check.
 *
 * Based on visibility setting this function returns TRUE if Tynt code should
 * be added to the current page and otherwise FALSE.
 */
function _tynt_visibility_pages() {
  static $page_match;

  // Cache visibility setting in hook_init for hook_footer.
  if (!isset($page_match)) {

    $visibility = \Drupal::config('tynt.settings')->get('tynt_visibility');
    $pages = \Drupal::config('tynt.settings')->get('tynt_pages');

    // Match path if necessary.
    if (!empty($pages)) {
      if ($visibility < 2) {
        $path = \Drupal::request()->getRequestUri();
        // Compare with the internal and path alias (if any)
        $page_match = \Drupal::service('path.matcher')->matchPath($path, $pages);
        if ($path != $_GET['q']) {
          $page_match = $page_match || \Drupal::service('path.matcher')->matchPath($_GET['q'], $pages);
        }
        // When $visibility has a value of 0, the block is displayed on
        // all pages except those listed in $pages. When set to 1, it
        // is displayed only on those pages listed in $pages.
        $page_match = !($visibility xor $page_match);
      }
      else {
        $page_match = drupal_eval($pages);
      }
    }
    else {
      $page_match = TRUE;
    }

  }
  return $page_match;
}
