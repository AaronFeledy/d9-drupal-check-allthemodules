<?php

/**
 * @file
 * Contains private_messages.module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\private_messages\Entity\DialogInterface;

/**
 * Implements hook_help().
 */
function private_messages_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the private_messages module.
    case 'help.page.private_messages':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides website with private messages grouped by dialogs functionality.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function private_messages_theme($existing, $type, $theme, $path) {
  $module_path = drupal_get_path('module', 'private_messages');
  $forms_path = $module_path . '/templates/forms';

  return [
    'dialog'          => [
      'template'       => 'dialog',
      'render element' => 'elements',
      'file'           => 'dialog.theme.inc',
    ],
    'message'         => [
      'template'       => 'message',
      'render element' => 'elements',
      'file'           => 'message.theme.inc',
    ],
    'dialog_add_form' => [
      'template'       => 'dialog-add-form',
      'path'           => $forms_path,
      'render element' => 'children',
    ],
    'blocked_users'   => [
      'template'  => 'blocked-users',
      'variables' => [
        'form' => NULL,
        'view' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_mail().
 */
function private_messages_mail($key, &$message, $params) {
  switch ($key) {
    case 'new_message':
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function private_messages_user_view_alter(
  array &$build,
  EntityInterface $user,
  EntityViewDisplayInterface $display
) {
  $current_user = \Drupal::currentUser();

  $build['start_dialog_link'] = [
    '#title' => t('Start dialog'),
    '#type'  => 'link',
    '#url'   => Url::fromRoute('entity.dialog.add_form',
      [
        'user'      => $current_user->id(),
        'recipient' => $user->id(),
      ]),
    '#weight' => 99,
  ];
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function private_messages_dialog_insert(EntityInterface $entity) {
  Cache::invalidateTags(['private_messages.dialog_tab']);
}

/**
 * Checks current page: is the full page view of the passed-in dialog.
 *
 * @param \Drupal\private_messages\Entity\DialogInterface $dialog
 *   A dialog entity.
 *
 * @return int|false
 *   The ID of the dialog if this is a full page view, otherwise FALSE.
 */
function dialog_is_page(DialogInterface $dialog) {
  $route_match = \Drupal::routeMatch();
  if ($route_match->getRouteName() == 'entity.dialog.canonical') {
    $page_dialog = $route_match->getParameter('dialog');
  }
  return (!empty($page_dialog) ? $page_dialog->id() == $dialog->id() : FALSE);
}
