<?php

/**
 * @file
 * Contains node_form_api_fields.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function node_form_api_fields_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the node_form_api_fields module.
    case 'help.page.node_form_api_fields':
      $output = '';
      $output .= '<h3>' . t('About the Node Form API Fields module') . '</h3>';
      $output .= '<p>' . t('This module allows you to add fields to node 
        edit screen via the Form API. It automatically stores submissions from 
        your Form API fields using the Drupal 8 Key Value storage rather than 
        creating tables for each field. Useful for one-off fields that you want 
        to avoid growing the complexity of the database for.') . '</p>';

      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function node_form_api_fields_form_node_page_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _node_form_api_fields_form_node_page_form_alter($form, $form_state, $form_id);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function node_form_api_fields_form_node_page_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _node_form_api_fields_form_node_page_form_alter($form, $form_state, $form_id);
}

/**
 * Modify the node create and edit form for page bundle.
 */
function _node_form_api_fields_form_node_page_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $defaults = [];
  $node = $form_state->getFormObject()->getEntity();
  if (isset($node->form_api_fields)) {
    $defaults = $node->form_api_fields;
  }

  // Run the alter to allow modules to add fields to this form.
  $form_api_fields = [];
  $context = [
    'form' => $form,
    'form_state' => $form_state,
    'form_id' => $form_id,
    'node' => $node,
    'nid' => $node->id(),
  ];
  \Drupal::moduleHandler()->alter('node_form_api_fields_form', $form_api_fields, $defaults, $context);

  // If we have any extra fields to add.
  if ($form_api_fields) {

    $config = \Drupal::config('node_form_api_fields.settings');

    if ($config->get('wrap_in_fieldset')) {

      $label = $config->get('fieldset_wrapper_label');
      $weight = $config->get('fieldset_default_weight');

      // Add our extra fields fieldset.
      $form['form_api_fields'] = [
        '#type' => 'fieldset',
        '#title' => (!is_null($label) ? $label : 'Additional Fields'),
        '#weight' => ($weight ? $weight : 50),
      ];
    }
    else {
      $form['form_api_fields'] = [];
    }

    // Set defaults if not set.
    foreach ($form_api_fields as $key => &$extra) {
      if (!isset($extra['#default_value']) && isset($defaults[$key])) {
        $extra['#default_value'] = $defaults[$key];
      }
    }

    // Add our extra fields.
    $form['form_api_fields'] += $form_api_fields;

    // Add out submit handler.
    $skip_actions = ['delete', 'preview', '#type'];
    foreach ($form['actions'] as $action => $settings) {
      if (!in_array($action, $skip_actions)) {
        $form['actions'][$action]['#submit'][] = 'node_form_api_fields_node_page_form_submit';
      }
    }

  }
}

/**
 * Handles form submission.
 */
function node_form_api_fields_node_page_form_submit($form, FormStateInterface $form_state) {
  $keys = FALSE;

  // Get the keys of all extra fields.
  if (isset($form['form_api_fields'])) {
    $keys = array_keys($form['form_api_fields']);
    $keys = array_filter($keys, function ($key) {
      return (strpos($key, '#') !== 0);
    });
  }

  // Compare out extra fields to the submission.
  if ($keys && $values = $form_state->getValues()) {
    $nid = $values['nid'];
    \Drupal::keyValue('node_form_api_fields.' . $nid)->setMultiple($values);
  }
}

/**
 * Implements hook_node_load().
 */
function node_form_api_fields_node_load($nodes, $types = FALSE) {
  if ($nodes) {
    foreach ($nodes as $node) {

      // Get the form api fields.
      $nid = $node->id();
      $values = \Drupal::keyValue('node_form_api_fields.' . $nid)->getAll();

      // Make the form_api_fields available on the node object.
      if ($values) {
        $node->form_api_fields = $values;
      }
    }
  }
}
