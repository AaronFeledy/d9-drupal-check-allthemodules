<?php

/**
 * @file
 * Contains migrate_override.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\migrate_override\OverrideManagerServiceInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Entity\ContentEntityInterface;

/**
 * Implements hook_help().
 */
function migrate_override_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the migrate_override module.
    case 'help.page.migrate_override':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allow field level overrides of migrated content') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_field_widget_multivalue_form_alter().
 */
function migrate_override_field_widget_multivalue_form_alter(array &$elements, FormStateInterface $form_state, array $context) {
  /** @var Drupal\Core\Field\FieldItemListInterface $items */
  $items = $context['items'];
  $field = $items->getFieldDefinition()->getName();
  $entity = $items->getEntity();
  /** @var \Drupal\migrate_override\OverrideManagerServiceInterface $manager */
  $manager = \Drupal::service("migrate_override.override_manager");
  if (!$manager->entityBundleEnabled($entity)) {
    return;
  }
  if ($manager->entityFieldInstanceSetting($entity, $field) === OverrideManagerServiceInterface::FIELD_IGNORED) {
    return;
  }
  $type = $entity->getEntityTypeId();
  $bundle = $entity->bundle();
  $entity_id = $entity->id() ? ('.' . $entity->id()) : '';
  $selector = "fieldset[migrate_override_identifier='{$type}.{$bundle}{$entity_id}'] input[value='$field']";
  $states = [
    'enabled' => [
      "$selector" => [
        'checked' => TRUE,
      ],
    ],
  ];

  /** @var \Drupal\Core\Field\WidgetInterface $widget */
  $widget = $context['widget'];
  switch ($widget->getPluginId()) {
    case 'inline_entity_form_complex':
      if (isset($elements['entities'])) {
        foreach (Element::children($elements['entities']) as $delta) {
          $elements['entities'][$delta]['actions']['ief_entity_edit']['#states'] = $states;
          $elements['entities'][$delta]['actions']['ief_entity_remove']['#states'] = $states;
        }
      }
      if (isset($elements['actions'])) {
        $elements['actions']['#states'] = $states;
      }
      break;

    case 'telephone_default':
    case 'email_default':
      foreach (Element::children($elements) as $key) {
        $elements[$key]['value']['#states'] = $states;
      }
      break;

    case 'link_default':
      foreach (Element::children($elements) as $key) {
        $elements[$key]['uri']['#states'] = $states;
        $elements[$key]['title']['#states'] = $states;
      }
      break;

    case 'office_hour_widget':
    case 'text_textarea_with_summary':
      break;

    default:
      foreach (Element::children($elements) as $outerkey) {
        if (isset($elements[$outerkey]['#type'])) {
          $elements[$outerkey]['#states'] = $states;
        }
        else {
          foreach (Element::children($elements[$outerkey]) as $innerkey) {
            $elements[$outerkey][$innerkey]['#states'] = $states;
          }
        }
      }
  }

}

/**
 * {@inheritdoc}
 */
function migrate_override_migration_plugins_alter(array &$migrations) {
  foreach ($migrations as $migration_id => $migration) {
    /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager */
    $entity_type_manager = \Drupal::service('entity_type.manager');
    $destination = $migration['destination']['plugin'];
    if (substr($destination, 0, 7) === 'entity:') {
      $type = substr($destination, 7);
      $definition = $entity_type_manager->getDefinition($type);
      if ($definition->entityClassImplements(ContentEntityInterface::class)) {
        $migrations[$migration_id]['destination']['plugin'] = 'entity_override:' . $type;
      }
    }
  }

}
