<?php

/**
 * @file
 * Kudos slider.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\file\Entity\File;
use Drupal\Core\Url;
use Drupal\image\Entity\ImageStyle;
use Drupal\Component\Utility\Html;
use Drupal\Core\Language\Language;

/**
 * Function for retreiving kudos slider contents.
 */
function kudos_slider_homepage() {
  $output = '';
  $config = \Drupal::config('kudos_slider.settings');
  $sliders = array();
  $nids = array();
  $current_language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  global $base_url;
  $query = \Drupal::database()->select('node_field_data', 'n');
  $query->fields('n', ['nid']);
  $query->join('node__field_slider_image', 'img', 'n.nid = img.entity_id');
  $query->condition('n.type', 'kudos_slider');
  $query->condition('n.status', 1);
  $query->condition('n.langcode', array($current_language, Language::LANGCODE_NOT_SPECIFIED), 'IN');
  $query->orderBy('n.changed', 'DESC');
  $query->range(0, $config->get('kudos_slider_no_of_slides'));
  $query->addTag('node_access');
  $query_result = $query->execute();
  foreach ($query_result as $key => $record) {
    $nids[] = $record->nid;
  }
  $nodes = \Drupal::entityManager()->getStorage('node')->loadMultiple($nids);
  $key = 0;
  foreach ($nodes as $slide_node) {
    $sliders[$key]['nid'] = $slide_node->nid->value;
    $field_slideshow_image = $slide_node->get('field_slider_image')->getValue();
    if (!empty($field_slideshow_image)) {
      $sliders[$key]['image']['alt'] = !empty($field_slideshow_image[0]['alt']) ? Html::escape($field_slideshow_image[0]['alt']) : Html::escape($slide_node->title->value);
      $sliders[$key]['image']['title'] = !empty($field_slideshow_image[0]['title']) ? Html::escape($field_slideshow_image[0]['title']) : Html::escape($slide_node->title->value);
      $fid = $field_slideshow_image[0]['target_id'];
      $file = File::load($fid);
      $uri = $file->uri->value;
      $sliders[$key]['image']['pic'] = ImageStyle::load('kudos_slider_style')->buildUrl($uri);
    }
    $sliders[$key]['title'] = Html::escape($slide_node->title->value);
    $sliders[$key]['title'] = substr(strip_tags($slide_node->title->value), 0, 90);
    $sliders[$key]['title'] = strlen(Html::escape($sliders[$key]['title'])) > 90 ? $sliders[$key]['title'] . '...' : $sliders[$key]['title'];
    
    
    $user = \Drupal::currentUser();
    $permission = $user->hasPermission('administer nodes');
    if ($permission) {
      $editpath = $base_url . '/node/' . $slide_node->nid->value . '/edit';
      $editurl = Url::fromUri($editpath);
      $edit_link = \Drupal::l(t('Edit'), $editurl);
      $sliders[$key]['link'] = $edit_link;
    }
    $key++;
  }

  $output = '';
  $item_count = count($sliders);
  
  $config = \Drupal::config('kudos_slider.settings');
  $output .= '<div class="slider">
              <div class="slide_viewer">
              <div class="slide_group">';
  for ($i = 0; $i < $item_count; $i++) {
    $output .= '<div class=slide>';
    $output .= '<img class="home-img-slideshow" title="' . $sliders[$i]['image']['title'] . '" alt="' . $sliders[$i]['image']['alt'] . '" src="' . $sliders[$i]['image']['pic'] . '" />';
    $output .= '</div>';
  }
  $output .= '</div>';
  $output .= '</div>
              </div><div class="slide_buttons">
              </div>';
  return $output;
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function kudos_slider_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.kudos_slider':
      $output = '<h3>' . t('Kudos Slider programatically') . '</h3>';
      $output .= '<p>';
      $output .= t('This is simple resposnive slider to developer help to customize as per requirement.');
      $output .= '</p>';
      return $output;
  }
}

