<?php

/**
 * @file
 * Contains commerce_inventory_square.module.
 */

use Drupal\commerce_inventory\InventoryHelper;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function commerce_inventory_square_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the commerce_inventory_square module.
    case 'help.page.commerce_inventory_square':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Use Square as an Commerce Inventory Provider.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for commerce_inventory_location_form.
 */
function commerce_inventory_square_form_commerce_inventory_location_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Validate that there is a connection to square set up.
  $entity = $form_state->getFormObject()->getEntity();
  if ($entity->bundle() == 'square') {
    $connection = \Drupal::service('plugin.manager.client_connection')->resolveInstance('square', InventoryHelper::buildContexts([
      $entity->getEntityTypeId() => $entity
    ]));
    if (is_null($connection)) {
      $message = t('Square connection configuration missing. @link', [
        '@link' => Link::createFromRoute('Modify your configuration.', 'client_connection_square.settings')->toString()
      ]);
      \Drupal::messenger()->addMessage($message, \Drupal\Core\Messenger\Messenger::TYPE_WARNING);
    }
  }

}