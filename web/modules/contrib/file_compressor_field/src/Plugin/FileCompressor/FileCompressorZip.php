<?php

/**
 * @file
 * Contains \Drupal\file_compressor_field\Plugin\FileCompressor\FileCompressorZip.
 */

namespace Drupal\file_compressor_field\Plugin\FileCompressor;

use Drupal\file_compressor_field\Plugin\FileCompressorBase;

/**
 * Implements Zip compressor for File Compressor field.
 *
 * @FileCompressor(
 *   id = "zip_built_in",
 *   admin_label = @Translation("Zip (Built in)"),
 *   extension = "zip"
 * )
 */
class FileCompressorZip extends FileCompressorBase {

  /**
   * @{@inheritdoc}
   */
  public function generateCompressedFile($file_uri, $files) {
    $logger = \Drupal::logger('file_compressor_field');
    $zip = new \ZipArchive();
    if ($zip_open = $zip->open(drupal_realpath($file_uri), \ZIPARCHIVE::CREATE | \ZIPARCHIVE::OVERWRITE)) {
      $zip->setArchiveComment('Generated by File Compressor field for Drupal.');
      // http://drupal.org/node/1234282 - duplicate filenames.
      foreach ($files as $file) {
        $path = drupal_realpath($file);
        if (file_exists($file)) {
          if (!$zip->addFile($path, basename($path))) {
            $logger->error('Failed to add !file to Zip.', array('!file' => $file));
          }
        }
        else {
          $logger->error('file_compressor_field', 'Failed to locate !file.', array('!file' => $file));
        }
      }
      if (!$zip->close()) {
        $logger->error('file_compressor_field', 'Error saving file: !status_string', array('!status_string' => $zip->getStatusString()));
        return FALSE;
      }
      return TRUE;
    }
    return FALSE;
  }

}
