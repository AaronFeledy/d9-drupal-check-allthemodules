# This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can  specify a custom docker image from Docker Hub as your build environment.
image: bosolutions/d8-cli:v4

pipelines:
  default:
    - step:
        name: Code Validation
        caches:
          - composer
        script:
          # Check Drupal coding standards
          - phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,js .
          # Check Drupal Best Practice
          - phpcs --standard=DrupalPractice --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,js .
  branches:
    8.x-1.x:
      - step:
          name: Deployment Acquia Dev
          deployment: test
          script:
            #- mkdir -p ~/.ssh
            #- cat known_hosts >> ~/.ssh/known_hosts
            #- (umask 077; echo ${AC_SSH_KEY} | base64 --decode -i > ~/.ssh/id_rsa)
            # Run command over SSH into Acquia server
            #- ssh -o PasswordAuthentication=no `echo ${AC_SUBSCRIPTION}`.dev@`echo ${AC_HOST}` 'cd /var/www/html/ciandtjanrain.dev/docroot && ls'
            # Copy file from Pipelines into Acquia server
            #- rsync -avz -e ssh rsync_test.txt `echo ${AC_SUBSCRIPTION}`.dev@srv-6311.devcloud.hosting.acquia.com:/tmp
            - git clone -b ${AC_DEV_BRANCH} ${AC_VCS_URL} /tmp/acquia
            - rsync -rCcv --delete --exclude bitbucket-pipelines.yml . /tmp/acquia/docroot/modules/${MODULE_NAME}/
            - git config --global user.email "bitbucket@ciandt.com"
            - git config --global user.name "CI&T Bitbucket Pipelines"
            - git -C /tmp/acquia add .
            - git -C /tmp/acquia commit -m "Automated deployment from CI&T Bitbucket pipelines" || echo "No changes to commit"
            - git -C /tmp/acquia push

      - step:
          name: Deployment Acquia Stage
          deployment: staging
          script:
            # TODO: push change to acquia staging.
            - echo "Hello World"
#TODO: Fix push to Drupal.org repository.
#      - step:
#          name: Deplyment Drupal.org
#          deployment: production
#          script:
#            - git status
#            - sed -i "/\[remote \"origin\"\]/a url = ${DORG_VCS_URL}" .git/config
#            - cat .git/config
#            - git push

    develop:
      - step:
          name: Code Validation
          caches:
            - composer
          script:
            # Check Drupal coding standards
            - phpcs --standard=Drupal --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,js .
            # Check Drupal Best Practice
            - phpcs --standard=DrupalPractice --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,js .
      - step:
          name: Running Unit Tests
          caches:
            - composer
          script:
            - drupal quick:start --no-interaction --directory="/tmp/unit_test" --repository="drupal-composer/drupal-project:8.x-dev" --profile="standard" > /tmp/quick_start_log.txt 2>&1 &
            - grep -m 1 "Listening on" <(tail -f /tmp/quick_start_log.txt)
            - mkdir -p /tmp/unit_test/web/modules/custom/${MODULE_NAME}/
            - cp -a . /tmp/unit_test/web/modules/custom/${MODULE_NAME}/
            - BROWSERTEST_OUTPUT_DIRECTORY=/tmp SIMPLETEST_BASE_URL=http://127.0.0.1:8088/ /tmp/unit_test/vendor/phpunit/phpunit/phpunit -c /tmp/unit_test/web/core/ --testsuite functional --group ${MODULE_NAME} --log-junit ./test-results/${MODULE_NAME}_test.xml
