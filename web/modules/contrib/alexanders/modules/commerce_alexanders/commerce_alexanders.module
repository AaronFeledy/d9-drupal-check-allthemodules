<?php

/**
 * @file
 * Defines commerce hooks to translate to Alexanders entities.
 */

use Drupal\alexanders\Client\AlexandersApi;
use Drupal\alexanders\Entity\AlexandersOrder;
use Drupal\alexanders\Entity\AlexandersOrderItem;
use Drupal\alexanders\Entity\AlexandersShipment;
use Drupal\commerce_order\Entity\Order;

/**
 * Implements hook_ENTITY_TYPE_update().
 *
 * Converts commerce orders into more convenient Alexanders orders.
 */
function commerce_alexanders_commerce_order_update(Order $order) {
  $state = $order->getState();
  $config = \Drupal::configFactory()
    ->getEditable('commerce_alexanders.settings');
  $send_state = $config->get('order_state');
  $alexanders_order_items = [];
  if ($state->getId() === $send_state) {
    foreach ($order->getItems() as $key => $item) {
      $product = $item->getPurchasedEntity()->getProduct();
      if ($product->hasField('alxdr_send')) {
        $send = $product->get('alxdr_send')->getValue()[0]['value'];
        if ($send
          && $item->hasField('alxdr_file_url')
          && $item->hasField('alxdr_secondary_url')) {
          $alexanders_order_items[] = AlexandersOrderItem::create([
            'sku' => $item->getPurchasedEntity()
              ->get('sku')
              ->getValue()[0]['value'],
            'quantity' => $item->getQuantity(),
            //          'file' => $item->get('field_file_url')->getValue()[0],
            //          'foil' => $item->get('field_alexanders_foil_url')->getValue()[0],
            'file' => 'example.com',
            'foil' => 'example.com',
          ]);
        }
      }
    }

    // We've filtered through the order and found nothing to send, exit.
    if (empty($alexanders_order_items)) {
      return;
    }

    $shipments = $order->get('shipments')->referencedEntities();
    $alexanders_shipment = AlexandersShipment::create([
      'method' => $shipments[0]->label(),
      'address' => $shipments[0]->getShippingProfile()->get('address'),
    ]);

    $alexanders_order = AlexandersOrder::create([
      'order_number' => $order->id(),
      'rush' => $order->hasField('alxdr_rush') && $order->get('alxdr_rush')->value,
      'standardPrintItems' => $alexanders_order_items,
      'shipping' => $alexanders_shipment,
    ]);
    $alexanders_order->save();
    $api = new AlexandersApi();
    $api->createOrder($alexanders_order);
  }
}
