<?php

/**
 * @file
 * Contains while.module.
 */

use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function white_label_entity_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the while module.
    case 'help.page.while':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a simple entity type where labels and paths can be configured via settings.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function white_label_entity_theme() {
  $theme = [];
  $theme['while_entity'] = [
    'render element' => 'elements',
    'file' => 'while_entity.theme.inc',
    'template' => 'while-entity',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function white_label_entity_theme_suggestions_while_entity(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#while_entity'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'while_entity__' . $sanitized_view_mode;
  $suggestions[] = 'while_entity__' . $entity->bundle();
  $suggestions[] = 'while_entity__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'while_entity__' . $entity->id();
  $suggestions[] = 'while_entity__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_menu_links_discovered_alter().
 */
function white_label_entity_menu_links_discovered_alter(&$links) {
  // Add links dynamically, so configured entity names are applied.
  $entity_type_while = \Drupal::entityTypeManager()->getDefinition('while_entity');
  $entity_type_while_type = \Drupal::entityTypeManager()->getDefinition('while_entity_type');

  $links['entity.while_entity.collection'] = [
    'title' => $entity_type_while->getLabel(),
    'route_name' => 'entity.while_entity.collection',
    'description' => new TranslatableMarkup('Manage @entity_name_plural.', ['@entity_name_plural' => $entity_type_while->getPluralLabel()]),
    'parent' => 'system.admin_content',
    'weight' => 0,
  ];

  $links['entity.while_entity_type.collection'] = [
    'title' => $entity_type_while_type->getLabel(),
    'route_name' => 'entity.while_entity_type.collection',
    'description' => new TranslatableMarkup('Manage @entity_type_name_plural.', ['@entity_type_name_plural' => $entity_type_while_type->getPluralLabel()]),
    'parent' => 'system.admin_structure',
    'weight' => 0,
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function white_label_entity_entity_type_alter(&$entity_types) {
  // Alter the name of the entity and provide the English source strings. This
  // assumes the while config is provided in English - otherwise it won't work
  // correctly.
  $config = \Drupal::config('white_label_entity.settings');

  $entity_name = $config->get('entity_name') != NULL ? $config->get('entity_name') : 'White label entity';
  $entity_name_plural = $config->get('entity_name_plural') != NULL ? $config->get('entity_name_plural') : 'White label entities';
  $entity_types['while_entity']->set('label', new TranslatableMarkup($entity_name));
  $entity_types['while_entity']->set('label_plural', new TranslatableMarkup($entity_name_plural));

  $entity_type_name = $config->get('entity_type_name') != NULL ? $config->get('entity_type_name') : 'White label entity type';
  $entity_type_name_plural = $config->get('entity_type_name_plural') != NULL ? $config->get('entity_type_name_plural') : 'White label entity types';
  $entity_types['while_entity_type']->set('label', new TranslatableMarkup($entity_type_name));
  $entity_types['while_entity_type']->set('label_plural', new TranslatableMarkup($entity_type_name_plural));

  // Generate a suiting path-string for admin-path usage.
  $admin_path = strtr(strtolower($entity_name), ['_' => '-', ' ' => '-']);
  $admin_path_type = strtr(strtolower($entity_type_name), ['_' => '-', ' ' => '-']);

  $entity_types['while_entity']->setLinkTemplate('canonical', "/admin/content/{$admin_path}/{while_entity}");
  $entity_types['while_entity']->setLinkTemplate('add-page', "/admin/content/{$admin_path}/add");
  $entity_types['while_entity']->setLinkTemplate('add-form', "/admin/content/{$admin_path}/add/{while_entity_type}");
  $entity_types['while_entity']->setLinkTemplate('edit-form', "/admin/content/{$admin_path}/{while_entity}/edit");
  $entity_types['while_entity']->setLinkTemplate('delete-form', "/admin/content/{$admin_path}/{while_entity}/delete");
  $entity_types['while_entity']->setLinkTemplate('version-history', "/admin/content/{$admin_path}/{while_entity}/revisions");
  $entity_types['while_entity']->setLinkTemplate('revision', "/admin/content/{$admin_path}/{while_entity}/revisions/{while_entity_revision}/view");
  $entity_types['while_entity']->setLinkTemplate('revision_revert', "/admin/content/{$admin_path}/{while_entity}/revisions/{while_entity_revision}/revert");
  $entity_types['while_entity']->setLinkTemplate('translation_revert', "/admin/content/{$admin_path}/{while_entity}/revisions/{while_entity_revision}/revert/{langcode}");
  $entity_types['while_entity']->setLinkTemplate('revision_delete', "/admin/content/{$admin_path}/{while_entity}/revisions/{while_entity_revision}/delete");
  $entity_types['while_entity']->setLinkTemplate('collection', "/admin/content/{$admin_path}");

  $entity_types['while_entity_type']->setLinkTemplate('canonical', "/admin/structure/{$admin_path_type}/{while_entity_type}");
  $entity_types['while_entity_type']->setLinkTemplate('add-form', "/admin/structure/{$admin_path_type}/add");
  $entity_types['while_entity_type']->setLinkTemplate('edit-form', "/admin/structure/{$admin_path_type}/{while_entity_type}/edit");
  $entity_types['while_entity_type']->setLinkTemplate('delete-form', "/admin/structure/{$admin_path_type}/{while_entity_type}/delete");
  $entity_types['while_entity_type']->setLinkTemplate('collection', "/admin/structure/{$admin_path_type}");
}
