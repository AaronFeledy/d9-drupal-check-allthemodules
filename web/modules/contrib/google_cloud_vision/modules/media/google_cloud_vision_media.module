<?php

use Drupal\media\MediaInterface;
use Drupal\media\MediaTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function google_cloud_vision_media_media_insert(MediaInterface $media) {
  /** @var \Drupal\google_cloud_vision_media\MediaManagerInterface $mediaManager */
  $mediaManager = Drupal::service('google_cloud_vision.media_manager');
  $mediaManager->queueAnnotation($media);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function google_cloud_vision_media_media_update(MediaInterface $media) {
  /** @var \Drupal\google_cloud_vision_media\MediaManagerInterface $mediaManager */
  $mediaManager = Drupal::service('google_cloud_vision.media_manager');
  if ($mediaManager->mediaSourceHasChanged($media)) {
    $mediaManager->queueAnnotation($media);
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function google_cloud_vision_media_form_media_type_form_alter(&$form, FormStateInterface $form_state) {
  $setting = 'google_cloud_vision_media';
  $labelTagField = 'label_tag_field';
  $imageStyleField = 'image_style';

  $enabled = 'enabled';
  $source = 'source';

  $form['google_cloud_vision_media'] = [
    '#type' => 'details',
    '#title' => t('Google Cloud Vision'),
    '#group' => 'additional_settings',
    '#tree' => TRUE,
  ];

  /** @var \Drupal\Core\Entity\EntityFormInterface $formObject */
  $formObject = $form_state->getFormObject();
  /** @var \Drupal\media\MediaTypeInterface $mediaType */
  $mediaType = $formObject->getEntity();

  $form[$setting][$enabled] = [
    '#type' => 'checkbox',
    '#title' => t('Enable'),
    '#description' => t('Check this box if you would like google cloud vision integration with the files on this media type.'),
    '#default_value' => $mediaType->getThirdPartySetting($setting, $enabled, 0),
  ];

  $form[$setting][$source] = [
    '#type' => 'radios',
    '#title' => t('File Source'),
    '#description' => t('Choose which source field you want to use, the thumbnail or the media source field.'),
    '#default_value' => $mediaType->getThirdPartySetting($setting, $source, 'thumbnail'),
    '#options' => [
      'thumbnail' => t('Thumbnail'),
      'source' => t('Source'),
    ],
  ];

  $entityFieldManager = \Drupal::service('entity_field.manager');
  $imageStyleStorage = \Drupal::service('entity_type.manager')->getStorage('image_style');

  /** @var \Drupal\Core\Field\FieldDefinitionInterface[] $fields */
  $fields = $entityFieldManager->getFieldDefinitions('media', $mediaType->id());
  $options = [];
  foreach ($fields as $field) {
    if ($field->getType() !== 'entity_reference' || $field->getSettings()['target_type'] !== 'taxonomy_term' || count($field->getSettings()['handler_settings']['target_bundles']) !== 1) {
      continue;
    }
    $options[$field->getName()] = $field->getLabel();
  }
  $form[$setting][$labelTagField] = [
    '#type' => 'select',
    '#empty_value' => '',
    '#title' => t('Label target field'),
    '#description' => t('Choose which taxonomy entity reference field you want to use to store the labels from google cloud vision in. If multiple vocabularies are enabled, it will choose the first.'),
    '#default_value' => $mediaType->getThirdPartySetting($setting, $labelTagField),
    '#options' => $options,
  ];

  $styles = $imageStyleStorage->loadMultiple();
  foreach ($styles as $name => $style) {
    $options[$name] = $style->get('label');
  }
  $form[$setting][$imageStyleField] = [
    '#type' => 'select',
    '#options' => $options,
    '#title' => t('Image Style'),
    '#description' => t('Image style version to send to google vision, use this to make sure your images do not exceed 10mb.'),
    '#empty_value' => '',
    '#default_value' => $mediaType->getThirdPartySetting($setting, $imageStyleField, NULL),
  ];

  $form['#entity_builders'][] = 'google_cloud_vision_media_type_form_builder';
}

/**
 * Form builder to save the google cloud vision settings for the media type.
 *
 * @param string $entityTypeId
 *   Entity Type ID.
 * @param \Drupal\media\MediaTypeInterface $mediaType
 *   Media Type Config Entity.
 * @param array $form
 *   Form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form State Object.
 */
function google_cloud_vision_media_type_form_builder($entityTypeId, MediaTypeInterface $mediaType, array &$form, FormStateInterface $form_state) {
  $setting = 'google_cloud_vision_media';
  $labelTagField = 'label_tag_field';
  $imageStyleField = 'image_style';
  $enabled = 'enabled';
  $source = 'source';

  if (!$values = $form_state->getValue($setting)) {
    $mediaType->unsetThirdPartySetting($setting, $enabled);
    $mediaType->unsetThirdPartySetting($setting, $labelTagField);
    $mediaType->unsetThirdPartySetting($setting, $source);
    $mediaType->unsetThirdPartySetting($setting, $imageStyleField);
    return;
  }

  $mediaType->setThirdPartySetting($setting, $enabled, $values[$enabled]);
  $mediaType->setThirdPartySetting($setting, $labelTagField, $values[$labelTagField]);
  $mediaType->setThirdPartySetting($setting, $source, $values[$source]);
  $mediaType->setThirdPartySetting($setting, $imageStyleField, $values[$imageStyleField]);
}
