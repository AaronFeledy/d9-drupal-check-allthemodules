<?php

/**
 * @file
 * Hooks for webform digest module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\Core\Mail\MailFormatHelper;

/**
 * Implements hook_entity_operation().
 */
function webform_digests_entity_operation(EntityInterface $entity) {
  $operations = [];
  if ($entity->getEntityTypeId() == 'webform_digest') {
    $operations['conditions'] = array(
      'title' => t('Conditions'),
      'url' => Url::fromRoute('webform_digests.conditions_form', ['webform_digest' => $entity->id()]),
      'weight' => 50,
    );
  }
  return $operations;
}

/**
 * Implements hook_cron().
 */
function webform_digests_cron() {
  $settings = \Drupal::configFactory()->get('webform_digests.settings');
  if ($settings->get('cron.enabled') !== TRUE) {
    return;
  }
  $last_run = \Drupal::state()->get('webform_digests.last_run', 0);

  $time_since_last_run = 3600;
  switch ($settings->get('cron.frequency', 'day')) {
    case 'hour':
      $time_since_last_run = 3600;
      break;

    case 'day':
      $time_since_last_run = 3600 * 24;
      break;

    case 'week':
      $time_since_last_run = 3600 * 24 * 7;
      break;
  }

  if ($last_run) {
    \Drupal::logger('webform_digests')->notice('Digest last compiled: @last_run.', [
      '@last_run' => date('D, d M Y H:i:s', $last_run),
    ]);
  }

  if ((\Drupal::time()->getRequestTime() - $last_run) >= $time_since_last_run) {
    if (date('G') >= $settings->get('cron.hour', 9)) {
      $queue_count = \Drupal::service('webform_digests.queue_builder')->queueSubmissions();
      \Drupal::logger('cron')->notice('@queued webform digest(s) queued.', [
        '@queued' => $queue_count,
      ]);
      \Drupal::state()->set('webform_digests.last_run', \Drupal::time()->getRequestTime());
    }
  }
}

/**
 * Implements hook_mail().
 */
function webform_digests_mail($key, &$message, $params) {
  $message['subject'] = $params['subject'];
  $message['body'][] = MailFormatHelper::htmlToText($params['body']);
}
