<?php

/**
 * @file
 * Contains smartling.module
 */

use Drupal\Core\Entity\ContentEntityFormInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\smartling\SmartlingSubmissionInterface;

// @todo move them to classes.
define('SMARTLING_CRON_RUN_INTERVAL', 3 * 60 * 60);

define('SMARTLING_STATUS_EVENT_SEND_TO_UPLOAD_QUEUE', 'smartling_send_node_to_upload_queue');
define('SMARTLING_STATUS_EVENT_FAILED_UPLOAD', 'smartling_send_node_failed_upload');
define('SMARTLING_STATUS_EVENT_UPLOAD_TO_SERVICE', 'smartling_upload_node_to_service');
define('SMARTLING_STATUS_EVENT_DOWNLOAD_FROM_SERVICE', 'smartling_download_node_from_service');
define('SMARTLING_STATUS_EVENT_UPDATE_FIELDS', 'smartling_update_node_fields');
define('SMARTLING_STATUS_EVENT_NODE_ENTITY_UPDATE', 'check_status_in_node_entity_update');

/**
 * Implements hook_help().
 */
function smartling_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.smartling':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Smartling module manages the remote translation of entities and strings') . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Administering submissions') . '</dt>';
      $output .= '<dd>' . t('The <a href=":smartling">Smartling</a> page lists your submissions, allowing you filter, edit or delete existing submission, or perform bulk operations on existing submissions.', [':smartling' => \Drupal::url('entity.smartling_submission.collection')]) . '</dd>';
      $output .= '<dt>' . t('User permissions') . '</dt>';
      $output .= '<dd>' . t('The Smartling module makes a number of permissions available, which can be set by role on the <a href=":permissions">permissions page</a>.', [':permissions' => \Drupal::url('user.admin_permissions', [], ['fragment' => 'module-smartling'])]) . '</dd>';
      $output .= '</dl>';
      return $output;

    // @todo Add other pages.
  }
}

///**
// * Implements hook_form_FORM_ID_alter()
// *
// * @see \Drupal\language\FormContentLanguageSettingsForm
// */
//function smartling_form_language_content_settings_form_alter(array &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
//  foreach (Element::children($form['settings']) as $entity_type_id) {
//    foreach(Element::children($form['settings'][$entity_type_id]) as $bundle_id) {
//      $element = &$form['settings'][$entity_type_id][$bundle_id];
//
//      $element['settings']['smartling_translatable'] = [
//        '#type' => 'checkbox',
//        '#title' => t('Should be translated via Smartling'),
//        '#default_value' => Drupal::config('smartling.settings')->get("entities_settings.$entity_type_id.$bundle_id")
//      ];
//    }
//  }
//  $form['#submit'][] = 'smartling_language_configuration_element_submit';
//}
//
//function smartling_language_configuration_element_submit(array &$form, FormStateInterface $form_state) {
//  $config = Drupal::service('config.factory')->getEditable('smartling.settings');
//  foreach ($form_state->getValues()['settings'] as $entity_type_id => $entity_settings) {
//    foreach ($entity_settings as $bundle_id => $bundle_settings) {
//      if (!empty($bundle_settings['settings']['smartling_translatable'])) {
//        $config->set("entities_settings.$entity_type_id.$bundle_id", 1);
//      }
//    }
//  }
//  $config->save();
//}

/**
 * Implements hook_cron().
 */
function smartling_cron() {
  $queue = \Drupal::queue('smartling_check_status');
  /** @var \Drupal\smartling\SubmissionStorageInterface $storage */
  $storage = \Drupal::entityManager()->getStorage('smartling_submission');

  $ids = $storage->getSubmissionsIdsToCheckStatus();
  foreach ($ids as $id) {
    $queue->createItem($id);
  }
}

/**
 * Implements hook_entity_type_alter().
 */
function smartling_entity_type_alter(array &$entity_types) {
  // Provide defaults for translation info.
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  foreach ($entity_types as $entity_type) {
    if ($entity_type->isTranslatable()) {
      if (!$entity_type->hasHandlerClass('smartling')) {
        $entity_type->setHandlerClass('smartling', 'Drupal\smartling\SmartlingEntityHandler');
      }
    }
//    if (in_array($entity_type->id(), ['block', 'smartling_config_translation'])) {
//      $entity_type->setHandlerClass('smartling', 'Drupal\smartling\SmartlingEntityHandler');
//    }
  }
}


function smartling_views_data_alter(array &$data) {

  $data['node']['target_language'] = [
    'title' => t('Target Language'),
    'field' => [
      //'real field' => 'target_language',
      'id' => 'smartling_submission_target_language',
      'title' => t('Target Language'),
      'help' => t('Smartling submission "target_language" property.'),
      //'click sortable' => TRUE,
    ],
  ];
}

