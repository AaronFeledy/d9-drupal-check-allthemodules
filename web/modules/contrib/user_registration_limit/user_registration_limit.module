<?php

/**
 * @file
 * Main module file of the user registration limit module.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function user_registration_limit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the custom module.
    case 'help.page.user_registration_limit':
      $output = '';
      $output .= '<h3>' . t('User Registration Limit') . '</h3>';
      $output .= '<p>' . t('This module Limit user registrations based on the configurations. for more info visit <a href="@link">here</a>.', array('@link' => 'https://www.drupal.org/project/user_registration_limit')) . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Limit the user registrations') . '</dt>';
      return $output;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function user_registration_limit_form_user_admin_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['registration_cancellation']['user_registration_limit'] = [
    '#type' => 'number',
    '#title' => t('User Registration limit'),
    '#description' => t('Enter number of user registration allowed to limit.'),
    '#default_value' => \Drupal::config('user.settings')->get('user_registration_limit'),
    '#required' => FALSE,
    '#min' => 1,
  ];
  $form['#validate'][] = 'user_registration_limit_validate';
  $form['actions']['submit']['#submit'][] = 'user_registration_limit_user_admin_settings_form_submit';
  if (\Drupal::currentUser()->hasPermission('administer_account_settings')) {
    $message = t('Currently registrations are not allowed, To allow you should change the User Registration limit value.');
    user_registration_limit_check($message, 'user_admin_settings');
  }
}

/**
 * Validation handler fot the user admin settings form.
 */
function user_registration_limit_validate(&$form, FormStateInterface $form_state) {
  $user_registration_limit = $form_state->getValue('user_registration_limit');
  if (!empty($user_registration_limit)) {
    $users = \Drupal::database()->select('users')->fields(NULL, array('uid'))->countQuery()->execute()->fetchField();
    if ($form_state->getValue('user_registration_limit') <= $users) {
      $message = t('Always User Registration limit value should be more than users existing in site.');
      $form_state->setErrorByName('user_registration_limit', $message);
    }
  }
}

/**
 * Submit handler function for the user admin settings form.
 */
function user_registration_limit_user_admin_settings_form_submit(&$form, FormStateInterface $form_state) {
  $config = \Drupal::configFactory()->getEditable('user.settings');
  $config->set('user_registration_limit', $form_state->getValue('user_registration_limit'))->save(TRUE);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function user_registration_limit_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // In case if user is having has 'administer-users' permission, that user can create any number of users.
  if (\Drupal::currentUser()->hasPermission('administer_users')) {
    return;
  }
  $message = t('Registration are closed..! Contact site administrator.');
  user_registration_limit_check($message, 'user_register_form');
}

/**
 * Check the user registrations limit.
 */
function user_registration_limit_check($message, $form_id) {
  $user_registration_limit = \Drupal::config('user.settings')->get('user_registration_limit');
  if (!empty($user_registration_limit)) {
    $users = \Drupal::database()->select('users')->fields(NULL, array('uid'))->countQuery()->execute()->fetchField();
    if ((integer) $user_registration_limit <= $users) {
      drupal_set_message($message);
      if ($form_id == 'user_register_form') {
        throw new AccessDeniedHttpException();
      }
    }
  }
}
