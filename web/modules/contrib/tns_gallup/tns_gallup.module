<?php

/**
 * @file
 * TNS Gallup module.
 *
 * Loads required Javascript on your Drupal pages to add the TNS Gallup script.
 */

use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_html().
 */
function tns_gallup_preprocess_html(&$variables) {
  $user = \Drupal::currentUser();
  $config = \Drupal::config('tns_gallup.settings');
  $site_id = $config->get('site_id');
  $content_path = _tns_gallup_get_content_path($site_id);

  // Build the image src for the image in the noscript tag.
  // Encode the absolute URL of the current page.
  $encoded_url = urlencode(Url::fromRoute('<current>', [], ['absolute' => TRUE])->toString());
  $image_src = "//{$site_id}.tns-gallup.dk/j0=,,,;+,cp={$content_path}+url={$encoded_url};;;";

  // Build the image tag to go inside the noscript tag.
  $img = array(
    '#tag' => 'img',
    '#attributes' => array(
      'src' => $image_src,
      'alt' => '',
    ),
    '#type' => 'html_tag',
  );

  // Build the render array containing noscript tag with library and settings
  // attached.
  $tns_gallup = [
    '#tag' => 'noscript',
    '#value' => \Drupal::service('renderer')->render($img),
    '#type' => 'html_tag',
    '#attached' => [
      'library' => ['tns_gallup/spring'],
      'drupalSettings' => [
        'tns_gallup' => [
          'site_id' => $site_id,
          'content_path' => $content_path,
        ],
      ],
    ],
  ];

  // 1. Check if the TNS Gallup site id has a value.
  // 2. Track page views based on visibility value.
  // 3. Check if we should track the currently active user's role.
  if (
    $site_id &&
    _tns_gallup_visibility_pages() &&
    _tns_gallup_visibility_roles($user)
  ) {
    $variables['page_bottom']['tns_gallup'] = $tns_gallup;
  }
}

/**
 * Get the content path for the script.
 */
function _tns_gallup_get_content_path($site_id) {
  $content_path = $site_id;

  \Drupal::moduleHandler()->alter('tns_gallup_content_path', $content_path);

  return $content_path;
}

/**
 * Determine visibility based on roles.
 *
 * Based on visibility setting this function returns TRUE if the
 * current role must see the TNS Gallup code and otherwise FALSE.
 *
 * @param AccountInterface $account
 *   The user account to check visibility for.
 *
 * @return bool
 *   Whether account should include the script or not.
 */
function _tns_gallup_visibility_roles(AccountInterface $account) {
  $roles = \Drupal::config('tns_gallup.settings')->get('roles');
  // Roles are defined as an map of roles where the value is the role name or 0
  // depending on whether the role is required or not.
  $role_requirement_set = !empty(array_filter($roles));
  // If there is no roles requirement or a match between enabled roles and user
  // roles then include the script.
  return
    !$role_requirement_set ||
    !empty(array_intersect($roles, $account->getRoles()));
}

/**
 * Determine visibility based on path.
 *
 * Based on visibility setting this function returns TRUE if the
 * current page must include the TNS Gallup code and otherwise FALSE.
 *
 * @return bool
 *   Whether page should include the script or not.
 */
function _tns_gallup_visibility_pages() {
  $config = \Drupal::config('tns_gallup.settings');
  $visibility = $config->get('visibility');
  $pages = $config->get('pages');

  // Match path if necessary.
  if (!empty($pages)) {
    /* @var \Drupal\Core\Path\AliasManagerInterface $alias_manager */
    $alias_manager = \Drupal::service('path.alias_manager');
    /* @var \Drupal\Core\Path\PathMatcherInterface $path_matcher */
    $path_matcher = \Drupal::service('path.matcher');

    $route = \Drupal::routeMatch();
    $internal_path = $route->getRouteObject()->getPath();
    $path = $alias_manager->getAliasByPath($internal_path);
    // Compare with the internal and path alias (if any).
    $page_match = $path_matcher->matchPath($path, $pages);
    if ($path != $internal_path) {
      $page_match = $page_match || $path_matcher->matchPath(
          $internal_path,
          $pages
        );
    }
    // When $visibility has a value of 0, display the block on all
    // pages except those listed in $pages. When set to 1, display
    // it only on those pages listed in $pages.
    $page_match = !($visibility xor $page_match);
  }
  else {
    $page_match = !$visibility;
  }

  return $page_match;
}
