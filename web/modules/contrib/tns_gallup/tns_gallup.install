<?php

/**
 * @file
 * Install routines for the TNS Gallup module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_requirements().
 */
function tns_gallup_requirements($phase) {
  $status = [];

  if ($phase == 'runtime') {
    // Status of existence of spring.js script.
    /* @var \Drupal\Core\Asset\LibraryDiscoveryInterface $library_discover */
    $library_discovery = \Drupal::service('library.discovery');
    $library = $library_discovery->getLibraryByName('tns_gallup', 'spring');
    $spring = $library['js'][1]['data'];
    $status['tns_gallup_spring'] = [
      'title' => t('TNS Gallup spring.js installed'),
      'description' => t('The file <em>spring.js</em> needs to be placed in a folder named <em>tns_gallup_spring</em> in your libraries folder.'),
      'value' => file_exists($spring) ? t('Found %script', ['%script' => $spring]) : t('%script not found', ['%script' => 'spring.js']),
      'severity' => file_exists($spring) ? REQUIREMENT_OK : REQUIREMENT_ERROR,
    ];

    // Status on configuration of Site ID.
    $config = \Drupal::config('tns_gallup.settings');
    /* @var \Drupal\Core\Utility\LinkGeneratorInterface $link_generator */
    $link_generator = \Drupal::service('link_generator');
    $config_link = $link_generator->generate(
      t('No Site ID configured'),
      Url::fromRoute('tns_gallup.settings')
    );
    $site_id = $config->get('site_id');
    $status['tns_gallup_site_id'] = [
      'title' => t('TNS Gallup Site ID'),
      'value' => $site_id ? '<em>' . $site_id . '</em>' : $config_link,
      'severity' => $site_id ? REQUIREMENT_OK : REQUIREMENT_WARNING,
    ];

    // Status on which module alters content path.
    $hooks = \Drupal::moduleHandler()->getImplementations('tns_gallup_content_path_alter');
    $status['tns_gallup_alter_hooks'] = [
      'title' => t('TNS Gallup content path alter hooks'),
      'value' => !empty($hooks) ? t('Modules altering content path: %modules', ['%modules' => implode(',', $hooks)]) : t('No modules alter the content path'),
      'severity' => !empty($hooks) ? REQUIREMENT_OK : REQUIREMENT_INFO,
    ];
  }

  return $status;
}
