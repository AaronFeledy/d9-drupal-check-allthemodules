definitions:
  create_push_message:
    method: "post"
    endpoint: "/push/v1/message"
    schema: |
      {
      	"$schema": "http://json-schema.org/draft-06/schema#",
      	"title": "Create push message",
      	"description": "Creates a push message. That request optionally allows you to pass the text of the message to override the message specified in the definition.",
      	"type": "object",
      	"properties": {
          "messageType": {
            "type": "integer"
          },
          "contentType": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "application": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": false
          },
          "alert": {
            "type": "string"
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "content-available": {
            "type": "integer"
          },
          "openDirect": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "custom": {
            "type": "object"
          },
          "sendInitiator": {
            "type": "integer"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "messagesPerPeriod": {
            "type": "integer"
          },
          "minutesPerPeriod": {
            "type": "integer"
          },
          "numberOfPeriods": {
            "type": "integer"
          },
          "periodType": {
            "type": "integer"
          },
          "isRollingPeriod": {
            "type": "boolean"
          },
          "messageLimit": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "tzBased": {
            "type": "boolean"
          },
          "tzPastSendAction": {
            "type": "integer"
          },
          "scheduledTzOffset": {
            "type": "integer"
          },
          "scheduledTzSupportsDst": {
            "type": "boolean"
          },
          "inclusionLists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "exclusionLists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "status": {
            "type": "integer"
          },
          "pageId": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "media": {
            "type": "object",
            "properties": {
              "androidUrl": {
                "type": "string"
              },
              "iosUrl": {
                "type": "string"
              },
              "alt": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "geofences": {
            "type": "array"
          }
      	},
      	"required": [
          "messageType",
          "contentType",
          "name",
          "application"
      	],
      	"additionalProperties": false
      }
  get_push_messages:
    method: "get"
    endpoint: "/push/v1/message"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get push messages",
        "description": "Retrieves all messages currently defined within an account.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  create_location:
    method: "post"
    endpoint: "/push/v1/location"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Create location",
        "description": "Creates a new location.",
        "type": "object",
        "properties" : {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "center": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            },
            "additionalProperties": false
          },
          "radius": {
            "type": "integer"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string"
                },
                "value": {
                  "value": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "locationType": {
            "type": "integer"
          },
          "proximityUuid": {
            "type": "string"
          },
          "major": {
            "type": "integer"
          },
          "minor": {
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
  get_locations:
    method: "get"
    endpoint: "/push/v1/location"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get locations",
        "description": "Gets a list of all locations.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_app_info:
    method: "get"
    endpoint: "/push/v1/application/[appId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get app info",
        "description": "Retrieves a single app associated with an account.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  update_push_message:
    method: "put"
    endpoint: "/push/v1/message/[messageId]"
    schema: |
      {
      	"$schema": "http://json-schema.org/draft-06/schema#",
      	"title": "Update push message",
      	"description": "Updates a push message. That request optionally allows you to pass the text of the message to override the message specified in the definition.",
      	"type": "object",
      	"properties": {
          "messageType": {
            "type": "integer"
          },
          "contentType": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "application": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ],
            "additionalProperties": false
          },
          "alert": {
            "type": "string"
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "content-available": {
            "type": "integer"
          },
          "openDirect": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "custom": {
            "type": "object"
          },
          "sendInitiator": {
            "type": "integer"
          },
          "startDate": {
            "type": "string"
          },
          "messagesPerPeriod": {
            "type": "integer"
          },
          "minutesPerPeriod": {
            "type": "integer"
          },
          "numberOfPeriods": {
            "type": "integer"
          },
          "periodType": {
            "type": "integer"
          },
          "isRollingPeriod": {
            "type": "boolean"
          },
          "messageLimit": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "tzBased": {
            "type": "boolean"
          },
          "tzPastSendAction": {
            "type": "integer"
          },
          "scheduledTzOffset": {
            "type": "integer"
          },
          "scheduledTzSupportsDst": {
            "type": "boolean"
          },
          "inclusionLists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "exclusionLists": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "status": {
            "type": "integer"
          },
          "pageId": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "geofences": {
            "type": "array"
          }
      	},
      	"additionalProperties": false
      }
  delete_push_message:
    method: "delete"
    endpoint: "/push/v1/message/[messageId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Delete push message",
        "description": "Deletes an existing message.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_push_message:
    method: "get"
    endpoint: "/push/v1/message/[messageId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get push message",
        "description": "Retrieves a single message currently defined within an account.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_specific_location:
    method: "get"
    endpoint: "/push/v1/location/[locationId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get specific location",
        "description": "Gets a specific location.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  update_location:
    method: "put"
    endpoint: "/push/v1/location/[locationId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Update location",
        "description": "Updates an existing location.",
        "type": "object",
        "properties" : {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "center": {
            "type": "object",
            "properties": {
              "latitude": {
                "type": "number"
              },
              "longitude": {
                "type": "number"
              }
            },
            "additionalProperties": false
          },
          "radius": {
            "type": "integer"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "attribute": {
                  "type": "string"
                },
                "value": {
                  "value": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "locationType": {
            "type": "integer"
          },
          "proximityUuid": {
            "type": "string"
          },
          "major": {
            "type": "integer"
          },
          "minor": {
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      }
  delete_location:
    method: "delete"
    endpoint: "/push/v1/location/[locationId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Delete location",
        "description": "Deletes a specific location.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_custom_keys:
    method: "get"
    endpoint: "/push/v1/application/[appId]/key"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get custom keys",
        "description": "Retrieves all custom key values associated with an app.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  update_custom_keys:
    method: "put"
    endpoint: "/push/v1/application/[appId]/key"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Update custom keys",
        "description": "Updates information on all custom key values associated with an app.",
        "type": "array",
        "items" : {
          "type": "object",
          "properties": {
            "key":{
              "type": "string"
            },
            "description":{
              "type": "string"
            }
          },
          "required": [
            "key",
            "description"
          ],
          "additionalProperties": false
        }
      }
  delete_custom_keys:
    method: "delete"
    endpoint: "/push/v1/application/[appId]/key"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Delete custom keys",
        "description": "Deletes all custom key values associated with an app.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  refresh_list:
    method: "post"
    endpoint: "/push/v1/contacts/refreshList/[id]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Refresh list",
        "description": "Refreshes a list.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  send_message_to_all:
    method: "post"
    endpoint: "/push/v1/messageApp/[messageId]/send"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Send message to all",
        "description": "Broadcasts a message to all users of a push-enabled app.",
        "type": "object",
        "properties" : {
          "override": {
            "type": "boolean"
          },
          "messageText": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "sendTime": {
            "type": "string"
          },
          "blackoutWindow": {
            "type": "string"
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "openDirect": {
            "type": "string"
          },
          "customPayload": {
            "type": "object"
          },
          "customKeys": {
            "type": "object"
          }
        },
        "additionalProperties": false
      }
  send_message_to_tagged_users:
    method: "post"
    endpoint: "/push/v1/messageTag/[messageId]/send"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Send message to tagged users",
        "description": "Sends a push message to users with the specified tags.",
        "type": "object",
        "properties": {
          "inclusionTags": {
            "type": "array"
          },
          "exclusionTags": {
            "type": "array"
          },
          "override": {
            "type": "boolean"
          },
          "messageText": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "sendTime": {
            "type": "string"
          },
          "blackoutWindow": {
            "type": "string"
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "openDirect": {
            "type": "string"
          },
          "customPayload": {
            "type": "object"
          },
          "customKeys": {
            "type": "object"
          }
        },
        "required": [
          "inclusionTags"
        ],
        "additionalProperties": false
      }
  send_message_to_list:
    method: "post"
    endpoint: "/push/v1/messageList/[messageId]/send"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Send message to list",
        "description": "Sends a message to the specified mobile devices of a push-enabled app.",
        "type": "object",
        "properties": {
          "inclusionListIds": {
            "type": "array"
          },
          "exclusionListIds": {
            "type": "array"
          },
          "inclusionDataExtensionIds": {
            "type": "array"
          },
          "exclusionDataExtensionIds": {
            "type": "array"
          },
          "override": {
            "type": "boolean"
          },
          "messageText": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "sendTime": {
            "type": "string"
          },
          "blackoutWindow": {
            "type": "string"
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "openDirect": {
            "type": "string"
          },
          "customPayload": {
            "type": "object"
          },
          "customKeys": {
            "type": "object"
          }
        },
        "required": [
          "inclusionListIds"
        ],
        "additionalProperties": false
      }
  update_custom_key:
    method: "put"
    endpoint: "/push/v1/application/[appId]/key/[key]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Delete custom key",
        "description": "Updates information on a single custom key value associated with an app.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  delete_custom_key:
    method: "delete"
    endpoint: "/push/v1/application/[appId]/key/[key]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Update custom key",
        "description": "Deletes a single custom key value associated with an app.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  send_messages_to_mobile_devices_in_batch:
    method: "post"
    endpoint: "/push/v1/messageBatch/[messageId]/send"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Update custom key",
        "description": "Deletes a single custom key value associated with an app.",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "deviceTokens": {
              "type": "array"
            },
            "subscriberKeys": {
              "type": "array"
            },
            "inclusionTags": {
              "type": "array"
            },
            "exclusionTags": {
              "type": "array"
            },
            "sendTime": {
              "type": "string"
            },
            "message": {
              "type": "object",
              "properties": {
                "alert": {
                  "type": "string"
                },
                "sound": {
                  "type": "string"
                },
                "badge": {
                  "type": "string"
                },
                "openDirect": {
                  "type": "string"
                },
                "custom": {
                  "type": "object"
                },
                "keys": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ],
                  "additionalProperties": false
                }
              },
              "required": [
                "alert"
              ],
              "additionalProperties": false
            },
            "title": {
              "type": "string"
            },
            "subtitle": {
              "type": "string"
            },
            "mutable-content": {
              "type": "boolean"
            }
          },
          "required": [
            "message"
          ],
          "additionalProperties": false
        }
      }
  send_message_to_mobile_devices:
    method: "post"
    endpoint: "/push/v1/messageContact/[messageId]/send"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Send message to mobile devices",
        "description": "Sends a message to the specified mobile devices of a push-enabled app.",
        "type": "object",
        "properties": {
          "inclusionTags": {
            "type": "array"
          },
          "exclusionTags": {
            "type": "array"
          },
          "deviceTokens": {
            "type": "array"
          },
          "subscriberKeys": {
            "type": "array"
          },
          "override": {
            "type": "boolean"
          },
          "messageText": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "mutable-content": {
            "type": "boolean"
          },
          "sendTime": {
            "type": "string"
          },
          "blackoutWindow": {
            "type": "string"
          },
          "messageCategory": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "sound": {
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "openDirect": {
            "type": "string"
          },
          "customPayload": {
            "type": "object"
          },
          "customKeys": {
            "type": "object"
          }
        },
        "additionalProperties": false
      }
  get_refresh_list_status:
    method: "get"
    endpoint: "/push/v1/contacts/refreshList/[id]/status/[tokenId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get refresh list status",
        "description": "Gets the refresh list status.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_delivery_status_of_message_app:
    method: "get"
    endpoint: "/push/v1/messageApp/[messageId]/deliveries/[tokenId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get delivery status of messageApp",
        "description": "Retrieves delivery status of a previous messageApp send job.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_delivery_status_of_message_tag:
    method: "get"
    endpoint: "/push/v1/messageTag/[messageId]/deliveries/[tokenId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get delivery status of messageTag",
        "description": "Retrieves delivery status of a previous messageTag send job.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_delivery_status_of_message_list:
    method: "get"
    endpoint: "/push/v1/messageList/[messageId]/deliveries/[tokenId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get delivery status of messageList",
        "description": "When you send a push message from the API, you receive a token ID in response. Use the token in this API call to retrieve the number of contacts we attempted to send to, not including those who opted out, for a messageList send job.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
  get_delivery_status_of_message_contact:
    method: "get"
    endpoint: "/push/v1/messageContact/[messageId]/deliveries/[tokenId]"
    schema: |
      {
        "$schema": "http://json-schema.org/draft-06/schema#",
        "title": "Get delivery status of messageContact",
        "description": "Retrieves delivery status of a previous messageContact send job.",
        "type": "object",
        "properties" : {},
        "additionalProperties": false
      }
