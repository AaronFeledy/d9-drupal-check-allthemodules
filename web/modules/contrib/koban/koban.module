<?php

use Drupal\Component\Utility\Unicode;
use Drupal\koban\Component\Render\KobanJavaScriptSnippet;


function koban_page_attachments(array &$page) {

    $config = \Drupal::config('koban.settings');
    $request = \Drupal::request();

    $status = NULL;
    if ($exception = $request->attributes->get('exception')) {
        $status = $exception->getStatusCode();
    }
    $trackable_status_codes = [
        '403',
        '404',
    ];

    if ($config->get('tracking_enabled') && $config->get('apikey') != NULL && _koban_visibility_pages() && !in_array($status, $trackable_status_codes)) {

        $script = '(function (i, s, o, g, r, a, m) {';
        $script .= 'i["KobanObject"] = r; i[r] = i[r] || function () {';
        $script .= '(i[r].q = i[r].q || []).push(arguments)';
        $script .= '}, i[r].l = 1 * new Date(); a = s.createElement(o),';
        $script .= 'm = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)';
        $script .= '})';
        $script .= '(window, document, "script", "//track.itsonlyleads.com/libapi/kobantracker.js", "kb");';
        $script .= 'kb("reg", "'.$config->get('apikey').'");';

        $page['#attached']['html_head'][] = [
            [
                '#tag' => 'script',
                '#value' => new KobanJavaScriptSnippet($script)
            ],
            'koban_tracking_script',
        ];
    }
}

function _koban_visibility_pages() {

    static $page_match;

    if(!isset($page_match)){

        $config = \Drupal::config('koban.settings');
        $visibility_request_path_mode = $config->get('visibility.request_path_mode');
        $visibility_request_path_pages = $config->get('visibility.request_path_pages');

        if (!empty($visibility_request_path_pages)) {

            $pages = Unicode::strtolower($visibility_request_path_pages);
            if ($visibility_request_path_mode < 2) {

                $path = \Drupal::service('path.current')->getPath();
                $path_alias = Unicode::strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($path));
                $page_match = \Drupal::service('path.matcher')->matchPath($path_alias, $pages) || (($path != $path_alias) && \Drupal::service('path.matcher')->matchPath($path, $pages));

                $page_match = !($visibility_request_path_mode xor $page_match);
            }
            else {
                $page_match = FALSE;
            }
        }
        else {
            $page_match = TRUE;
        }
    }

    return $page_match;
}