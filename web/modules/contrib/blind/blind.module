<?php

/**
 * @file
 * Main procedural code file for the Blind module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function blind_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.blind':
      $text = file_get_contents(dirname(__FILE__) . "/README.txt");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function blind_form_system_site_information_settings_alter(&$form, FormStateInterface $form_state) {

  $config = \Drupal::config('blind.settings');

  $form['site_information']['blind'] = [
    '#type' => 'fieldset',
    '#title' => t('Blind carbon copy'),
  ];

  $form['site_information']['blind']['bcc_mail_address'] = [
    '#type' => 'email',
    '#title' => t('Recipient address'),
    '#description' => t('Enter the e-mail address that should receive copies of all site e-mails.'),
    '#default_value' => $config->get('bcc_mail_address'),
  ];

  $form['#submit'][] = 'blind_form_system_site_information_settings_submit';
}

/**
 * Submission handler for "system_site_information_settings" form.
 */
function blind_form_system_site_information_settings_submit($form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('blind.settings')
    ->set('bcc_mail_address', $form_state->getValue('bcc_mail_address'))
    ->save();
}

/**
 * Implements hook_mail_alter().
 *
 * Sends a blind carbon copy to all outgoing emails.
 */
function blind_mail_alter(&$message) {
  if ($bcc_mail_address = \Drupal::config('blind.settings')->get('bcc_mail_address')) {
    $existing_bcc = isset($message['headers']['Bcc']) ? $message['headers']['Bcc'] : '';
    $message['headers']['Bcc'] = implode(' ', array_merge(
      explode(' ', $existing_bcc),
      [$bcc_mail_address]
    ));
  }
}
