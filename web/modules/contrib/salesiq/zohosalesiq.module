<?php
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Path\PathMatcher;
use Drupal\Core\Url;

define('SALESIQ_BLACKLIST_MODE', 0);
define('SALESIQ_WHITELIST_MODE', 1);

/**
 * Implements hook_page_attachments().
 */
function zohosalesiq_page_attachments(array &$page) {
  // Load module settings.
  $user = \Drupal::currentUser();
  $user_name = $user->getUsername();
  $user_email = $user->getEmail();
  $zohosalesiq_ready_fn = _zohosalesiq_construct_ready_function($user_name,$user_email);
  $config = \Drupal::config('zohosalesiq.settings');
  // Don't add the Zoho SalesIQ during indtallation
  if (drupal_installation_attempted()) {
    return;
  }
  if (!_zohosalesiq_verify_config()) {
    return;
  }
  $zohosalesiq_widget_code = strip_tags($config->get('zohosalesiq_widget_code'));
  $zohosalesiq_widget_code = "//Zoho SalesIQ Drupal code starts".$zohosalesiq_widget_code.$zohosalesiq_ready_fn."\n//Zoho SalesIQ Drupal code ends";
  $page['#attached']['html_head'][] = [
    // The data.
    [
      '#type' => 'html_tag',
      // The HTML tag to add, in this case a  tag.
      '#tag' => 'script',
      // The value of the HTML tag, here we want to end up with
      '#value' => $zohosalesiq_widget_code,
      // Set attributes like src to load a file.
      '#attributes' => array('type' => 'text/javascript','id' => 'zohosalesiq_drupal_integration'),
    ],
    'zohosalesiq-script',
  ];
}
function _zohosalesiq_verify_config() {
  $config = \Drupal::config('zohosalesiq.settings');
  $zohosalesiq_enabled = $config->get('zohosalesiq_enabled');
  $zohosalesiq_widget_code = $config->get('zohosalesiq_widget_code');
  $zohosalesiq_show_in = $config->get('zohosalesiq_show_in');
  if (strcmp($zohosalesiq_show_in,'0')==0) {
  // Don't add the Zoho SalesIQ widget on speified paths.
    if (_zohosalesiq_is_admin_page()) {
      return FALSE;
    }
  }
    // Don't add the Zoho SalesIQ widget code not entered or disabled
    if(!_zohosalesiq_verify_code($zohosalesiq_widget_code) || strcmp($zohosalesiq_enabled,'0')!=1){
      return FALSE;
    }
  return TRUE;
}
function _zohosalesiq_is_admin_page(){
  $route = \Drupal::routeMatch()->getRouteObject();

  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute($route);
  $current_path = \Drupal::service('path.current')->getPath();
  if( preg_match('/node\/(\d+)\/edit/', $current_path, $matches)) {
    $is_admin = TRUE;
  }
  return $is_admin;
}
function _zohosalesiq_verify_code($code_str){
  if(empty($code_str)){
    return FALSE;
  }
  if ( !preg_match( "/^<script[^>]*>\s*.+\s*(float\.ls|.+widgetcode.+\/widget)\s*.+\s*<\/script>$/s", $code_str ) ){
    return FALSE;
  }
    return TRUE;
}
function _zohosalesiq_construct_ready_function($user_name,$user_email){
  if(empty($user_email) || empty($user_email)){
    return "";
  }
  return '$zoho.salesiq.internalready = function() { $zoho.salesiq.visitor.name("' .$user_name. '");'.'$zoho.salesiq.visitor.email("' . $user_email . '");}';
}
