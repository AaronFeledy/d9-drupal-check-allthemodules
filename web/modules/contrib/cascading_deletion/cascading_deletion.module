<?php

/**
 * @file
 * Contains cascading_deletion.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 */
function cascading_deletion_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the cascading_deletion module.
    case 'help.page.cascading_deletion':
      $output = '<h3> <strong>' . t('INTRODUCTION') . '</strong></h3> ';
      $output .= '<p> <span style="font-family:verdana,geneva,sans-serif">' . t('This module manages cascading deletion on associated entities.') . '</span></p>';
      $output .= '<h3><strong>' . t('EXAMPLES') . '</strong></h3>';
      $output .= '<p>' . t('Foo is father entity type of Bar (in relation 1 to N, for example).') . '</p>';
      $output .= '<p>' . t('Deleting a Foo entity instance, all Bar entity instances with a reference to Foo (if enabled from field settings) will be deleted too.') . '</p>';
      $output .= '<p>' . t('At this point, if there are other entity types related to Bar, they will be deleted.') . '</p>';
      $output .= '<h3><strong>' . t('CONFIGURATION') . '</strong></h3>';
      $output .= '<h4><strong>' . t('Base Field Definition') . '</strong></h4>';
      $output .= '<p>' . t('In entity static function "baseFieldDefinitions", add the cascading deletion setting in the as follow:') . '</p>';
      $output .= '<p>' . t('->setSetting(\'cascading_deletion\', [\'enabled\' => TRUE])') . '</p>';
      $output .= '<h4><strong>' . t('Field Config') . '</strong></h4>';
      $output .= '<p>' . t('In edit field configuration form of entity reference fields, it is shown a section called "Cascading Deletion".') . '</p>';
      $output .= '<p>' . t('It is just necessary check the checkbox and the module will be in charge of the rest.') . '</p>';
      $output .= '<h3><strong>' . t('AUTHOR/MAINTAINER') . '</strong></h3>';
      $output .= '<pre>' . t('* Gaetano Fabozzo (suerterapida) - https://www.drupal.org/user/3439517') . '</pre>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function cascading_deletion_form_field_config_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $entity = $form_state->getFormObject()->getEntity();

  if ($entity->getType() == 'entity_reference') {

    $form['third_party_settings']['cascading_deletion'] = [
      '#type' => 'details',
      '#title' => t('Cascading Deletion'),
      '#open' => TRUE,
    ];

    // Enable Cascading Deletion.
    $form['third_party_settings']['cascading_deletion']['enabled'] = [
      '#type' => 'checkbox',
      '#title' => t('Enable cascading deletion'),
      '#default_value' => $entity->getThirdPartySetting('cascading_deletion', 'enabled'),
      '#description' => t('When referred entity will be deleted, current entity will be deleted too.'),
    ];
  }
}

/**
 * Implements hook_entity_delete().
 */
function cascading_deletion_entity_delete(Drupal\Core\Entity\EntityInterface $entity) {

  $entityId = $entity->id();
  $entityTypeId = $entity->getEntityTypeId();

  // Cascading Deletion.
  \Drupal::service('cascading_deletion.manager')->delete($entityTypeId, $entityId);
}