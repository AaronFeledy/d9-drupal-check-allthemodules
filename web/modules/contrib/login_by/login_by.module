<?php

/**
 * @file
 * Contains login_by.module
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\StringTranslation\TranslatableMarkup;

/**
 *	Implements hook_help().
 */
function login_by_help($route_name, RouteMatchInterface $route_match) {
	switch ($route_name) {
		case 'help.page.login_by':
			$output = '';
			$output .= '<h3>' . t('Login by') . '</h3>';
			$output .= '<p>' . t('This simple Drupal 8 module allows users to log in with either their username OR email and both. There are additional login configration like as - Enable placeholder, Enable autocomplete off, Enable view password, Enable login page. There are update login page title and login label button.') . '</p>';
			return $output;
		
		default:
	}
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function login_by_form_USER_LOGIN_FORM_alter(&$form, FormStateInterface $form_state) {
	
	$login_by_config = \Drupal::config('login_by.settings');
	$enable_value = $login_by_config->get('login_by_enable');
	$system = \Drupal::config('system.site');
	
	$form['#attached']['library'][] = 'login_by/login_by_js';

	if ($login_by_config->get('login_by_view_password')) {
		$form['#attached']['drupalSettings']['login_by']['view_password'] = $login_by_config->get('login_by_view_password');
	}

	
	switch ($enable_value) {
		case 1:
			if ($login_by_config->get('login_by_placeholder')) {
				$form['name']['#attributes'] = array('placeholder' => t('Username or email address'));
				$form['pass']['#attributes'] = array('placeholder' => t('Password'));
				unset($form['name']['#title']);
				unset($form['name']['#description']);
				unset($form['pass']['#title']);
				unset($form['pass']['#description']);
			} else {
				$form['name']['#title'] = t('Username or email address.');
				$form['name']['#description'] = t(' Enter your @name username or email address.', 
					array('@name' => $system->get('name')));

			}	
				$form['name']['#element_validate'][] = 'login_by_both_validate';
			break;

		case 2:
			if ($login_by_config->get('login_by_placeholder')) {
				$form['name']['#attributes'] = array('placeholder' => t('Email address'));
				$form['pass']['#attributes'] = array('placeholder' => t('Password'));
				unset($form['name']['#title']);
				unset($form['name']['#description']);
				unset($form['pass']['#title']);
				unset($form['pass']['#description']);
			} else {
				$form['name']['#title'] = t('Email address.');
				$form['name']['#description'] = t(' Enter your @name email address.', 
					array('@name' => $system->get('name')));
			}
				$form['name']['#element_validate'][] = 'login_by_email_validate';
			break;
	}

	if ($login_by_config->get('login_by_autocomplete')) {
		$form['#attributes']['autocomplete'] = "off";
	}
	
	$form['actions']['submit']['#value'] = $login_by_config->get('login_by_log_in');

}

function login_by_both_validate($form, FormStateInterface $form_state) {
  $username = $form_state->getValue('name');

  // load by username.
  if ($user = user_load_by_name($username)) {
    return TRUE;
  }

  // loading by email.
  if ($user = user_load_by_mail($username)) {
    // Set the username.
    $form_state->setValue('name', $user->getAccountName());
    return TRUE;
  }

  return FALSE;
}

function login_by_email_validate($form, FormStateInterface $form_state) {
	$username = $form_state->getValue('name');

  // load by email.
  if ($user = user_load_by_mail($username)) {
    // Set the username.
    $form_state->setValue('name', $user->getAccountName());
    return TRUE;
  }

  // load by username.
  if ($user = user_load_by_name($username)) {
    $form_state->setErrorByName('name', t('Unrecognized email address. <a href=":password">Forgot your password?</a>', [':password' => \Drupal::url('user.pass', [], ['query' => ['name' => $username]])]));
    $form_state->setRebuild();
    return FALSE;
  }
  return FALSE;
}


function login_by_preprocess_page_title(&$variables) {
	$path = \Drupal::request()->getpathInfo();
	$arg  = explode('/',$path);
	if ($arg[1] == 'user' && $arg[2] == 'login') {
		$variables['title'] = \Drupal::config('login_by.settings')->get('login_by_title');
	}
}	

/**
 * Implements hook_theme().
 */
function login_by_theme($existing, $type, $theme, $path) {
  
  $config_theme = \Drupal::config('login_by.settings');
	
	if (!$config_theme->get('login_by_login_page')) {
			return array();
	}
  return array(
  	'page__user__login' => array(
    	'template' => 'page--user--login',
    	'path' => $path.'/templates',
    	'base hook' => 'page',
  	)
  );	
}

/**
 * Implements hook_preprocess_page(&$variables).
 */
function login_by_preprocess_page(&$variables) {

  $site_config = \Drupal::config('system.site');
  $variables['site_name'] = $site_config->get('name');
  $variables['site_slogan'] = $site_config->get('slogan');
  // logo needs to be placed within specified folder
  $variables['logopath'] = file_url_transform_relative(file_create_url(theme_get_setting('logo.url')));

}