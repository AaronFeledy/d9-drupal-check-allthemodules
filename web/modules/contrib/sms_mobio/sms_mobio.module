<?php

/**
 * @file
 */

use Drupal\block\BlockInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function sms_mobio_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.sms_mobio':
      $output = '';
      $output .= '<h3>' . t('About SMS Mobio') . '</h3>';
      $output .= '<p>' . t('The SMS Mobio module allows you to use sms payment service.');
      return $output;
  }
}

/**
 * Actions to check the sms code.
 * When the correct code - appointment of a role for the specified time.
 */
/*
function sms_mobio_send_code_submit($form, &$form_state) {
  
  $check = mobio_checkcode($form_state['values']['serv_id'], $form_state['values']['code'], 0);
  
  if ($check) {
    global $user;
    $message = t('Valid code');
    $type = 'status';
    $ip = $_SERVER['REMOTE_ADDR'];
    
    if ($user -> uid == 0) {
      $user -> sid = session_id();
    }
    
    db_insert('sms_mobio')
      ->fields(array(
        'uid' => $user -> uid,
        'sess_id' => $user -> sid,
        'ip' => $ip,
        'time' => time(),
        'sms_code' => $form_state['values']['code'],
        'serv_id' => $form_state['values']['serv_id'],
      ))
    ->execute();
    
    rules_invoke_event('sms_code_insert', $user, array($form_state['values']['code']), array($form_state['values']['serv_id']));
    
    watchdog('sms_mobio',t('A Member !uid sent proper code !code on mobio.bg service !serv_id', array('!uid' => $user -> name, '!code' => $form_state['values']['code'], '!serv_id' => $form_state['values']['serv_id'])));
  }
  else {
    $message = t('Wrong code');
    $type = 'error';
  }
  
  drupal_set_message(t('SMS Mobio: @message', array('@message' => $message)), $type, $repeat = FALSE);
}*/

/**
 * Utility function for connecting to mobio site to send data and read answer
 *
 * @param $serv_id
 *   Identificator of current mobio service.
 *
 * @param $code
 *   Verification code entered by the user.
 *
 * @return
 *   Indicator of the validity of the code inspected.
 *
 */
function mobio_checkcode($serv_id, $code, $debug = 0) {
  $res_lines = file("http://www.mobio.bg/code/checkcode.php?servID=$serv_id&code=$code");
  $ret = 0;
  if ($res_lines) {
    if (strstr("PAYBG=OK", $res_lines[0])) {
      $ret = 1;
    }
    else {
      if ($debug) {
        drupal_set_message(t('@line', array('@line' => $line)), $type = 'error', $repeat = FALSE);
      }
    }
  }
  else {
    if ($debug) {
      drupal_set_message(t('Unable to connect to mobio.bg server.\n'), $type = 'error', $repeat = FALSE);
      $ret = 0;
    }
  }
  return $ret;
}

/**
 * Implements hook_rules_event_info().
 */
/*
function sms_mobio_rules_event_info() {
  $items = array(
    'sms_code_insert' => array(
      'label' => t('After sent proper SMS code'),
      'module' => 'sms_mobio',
      'group' => t('SMS'),
      'variables' => array(
        'acting_user' => array('type' => 'user', 'label' => t('The user who sent code.')),
        'sms_code' => array('type' => 'text', 'label' => t('The sent code.')),
        'service_id' => array('type' => 'text', 'label' => t('The serv_id.')),
      )
    ),
  );
  return $items;
}*/

/**
 * Implements hook_rules_condition_info()
 */
/*
function sms_mobio_rules_condition_info() {
  return array(
    'sms_mobio_condition_service_id' => array(
      'label' => t('Service id'),
      'arguments' => array(
        'acting_user' => array('type' => 'user', 'label' => t('The user who sent code.')),
        'sms_code' => array('type' => 'value', 'label' => t('The sms code.')),
        'service_id' => array('type' => 'string', 'label' => t('The service id (service cost)')),
      ),
      'module' => 'sms_mobio',
    ),
  );
}*/

/**
 * Condition sms_mobio_condition_service_id
 */
/*
function sms_mobio_condition_service_id($user, $sms_code, $service_id) {
  $valid_sms = proper_sent_code_load($user, $sms_code, $service_id);
  return ($valid_sms) ? TRUE : FALSE;
}

function proper_sent_code_load($user, $sms_code, $service_id) {
  $sms_code = db_select('sms_mobio', 's')
    -> fields('s', array('sms_code'))
    -> condition('uid', $user -> uid)
    -> condition('sms_code', $sms_code[0])
    -> condition('service_id', $service_id[0])
    -> execute()
    -> fetchField();
    
  return $sms_code;
}*/

