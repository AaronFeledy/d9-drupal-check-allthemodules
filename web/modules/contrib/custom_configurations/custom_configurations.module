<?php

/**
 * @file
 * Defines common functionality for custom configurations.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function custom_configurations_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.custom_configurations':
      $text = file_get_contents(dirname(__FILE__) . "/README.txt");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()
          ->get('markdown.settings')
          ->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_link_alter().
 */
function custom_configurations_link_alter(&$variables) {
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('custom_configurations.settings');

  if (isset($variables['url']) && $variables['url'] instanceof \Drupal\Core\Url) {
    /** @var \Drupal\Core\Url $menu_link_url */
    $menu_link_url = $variables['url'];
    if ($menu_link_url->isRouted()) {
      if ($menu_link_url->getRouteName() == 'custom_configurations.index' &&
        !empty($config->get('menu_title'))) {
        $variables['text'] = $config->get('menu_title');
      }
    }
  }
}
