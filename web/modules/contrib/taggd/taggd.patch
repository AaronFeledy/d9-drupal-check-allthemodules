diff --git a/README.md b/README.md
index d3aa7df..6fd0884 100644
--- a/README.md
+++ b/README.md
@@ -1,19 +1,24 @@
 The Taggd module integrates the Taggd javascript library with Drupal. 
-Taggd allows you to add tooltips to your image. That sounds way less exciting than it is, though...
+Taggd allows you to add tooltips to your image.
+That sounds way less exciting than it is, though...
 
 ## Installation
 
 To install this module, do the following:
 
-1. Download the [Taggd library](https://github.com/timseverien/taggd)
-      (version 3.x) and place the resulting directory into the libraries directory. 
-      Ensure `libraries/taggd/dist/taggd.min.js` and `libraries/taggd/dist/taggd.css` exist.
+1. Download the [Taggd library]
+   (https://github.com/timseverien/taggd) (version 3.x) 
+   and place the resulting directory into the libraries directory. 
+   Ensure `libraries/taggd/dist/taggd.min.js` and
+   `libraries/taggd/dist/taggd.css` exist.
 2. Download the Taggd module and follow the instruction for
-      [installing contributed modules](https://www.drupal.org/docs/8/extending-drupal-8/installing-contributed-modules-find-import-enable-configure-drupal-8).
+      [installing contributed modules]
+      (https://www.drupal.org/docs/8/extending-drupal-8/
+      installing-contributed-modules-find-import-enable-configure-drupal-8).
 
 ## Usage
 
  1. Add new field of type "Taggd image" to your entity.
  2. Create new content and add one or more images.
  3. Click on the image to add a tag.
- 4. Click on a tag to edit the label.
\ No newline at end of file
+ 4. Click on a tag to edit the label.
diff --git a/css/taggd-classic.css b/css/taggd-classic.css
index dffe8de..ab45f72 100644
--- a/css/taggd-classic.css
+++ b/css/taggd-classic.css
@@ -1,4 +1,3 @@
-
 .taggd__button {
   display: block;
   height: 1rem;
diff --git a/css/taggd-widget.css b/css/taggd-widget.css
index fd3e6f4..c589e36 100644
--- a/css/taggd-widget.css
+++ b/css/taggd-widget.css
@@ -1,3 +1,3 @@
 .draggable a.tabledrag-handle {
-    display: none;
-}
\ No newline at end of file
+  display: none;
+}
diff --git a/src/Plugin/Field/FieldFormatter/TaggdImageFormatter.php b/src/Plugin/Field/FieldFormatter/TaggdImageFormatter.php
index bdbfb8e..6e9ed4d 100644
--- a/src/Plugin/Field/FieldFormatter/TaggdImageFormatter.php
+++ b/src/Plugin/Field/FieldFormatter/TaggdImageFormatter.php
@@ -2,10 +2,8 @@
 
 namespace Drupal\taggd\Plugin\Field\FieldFormatter;
 
-use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
-use Drupal\file\FileInterface;
 use Drupal\image\Plugin\Field\FieldFormatter\ImageFormatter;
 
 /**
@@ -25,11 +23,11 @@ class TaggdImageFormatter extends ImageFormatter {
    * {@inheritdoc}
    */
   public static function defaultSettings() {
-    return array(
-        'taggd_tag_show_event' => 'mouseenter',
-        'taggd_tag_hide_event' => 'mouseleave',
-        'taggd_tag_hide_delay' => 500,
-      ) + parent::defaultSettings();
+    return [
+      'taggd_tag_show_event' => 'mouseenter',
+      'taggd_tag_hide_event' => 'mouseleave',
+      'taggd_tag_hide_delay' => 500,
+    ] + parent::defaultSettings();
   }
 
   /**
@@ -76,7 +74,6 @@ class TaggdImageFormatter extends ImageFormatter {
     return $element;
   }
 
-
   /**
    * {@inheritdoc}
    */
@@ -87,9 +84,9 @@ class TaggdImageFormatter extends ImageFormatter {
     $js_settings = [];
 
     foreach ($elements as $key => &$element) {
-      /** @var FieldItemInterface $item */
+      /** @var \Drupal\Core\Field\FieldItemInterface $item */
       $item = $items[$key];
-      /** @var FileInterface $file */
+      /** @var \Drupal\file\FileInterface $file */
       $file = $files[$key];
       // Add some attributes the the image tag.
       $element['#item_attributes']['data-taggd'] = $file->id();
@@ -99,8 +96,8 @@ class TaggdImageFormatter extends ImageFormatter {
         $js_settings[$file->id()] = $item->taggd_image_data;
       }
       // Add a container.
-      // We need this to set the width and the height of the parent of the image...
-      // Which will be this container.
+      // We need this to set the width and the height of
+      // The parent of the image... Which will be this container.
       $element['#prefix'] = '<div class="tagged-container">';
       $element['#suffix'] = '</div>';
     }
diff --git a/src/Plugin/Field/FieldType/TaggdImageItem.php b/src/Plugin/Field/FieldType/TaggdImageItem.php
index fb65322..e59ec88 100644
--- a/src/Plugin/Field/FieldType/TaggdImageItem.php
+++ b/src/Plugin/Field/FieldType/TaggdImageItem.php
@@ -20,7 +20,6 @@ use Drupal\image\Plugin\Field\FieldType\ImageItem;
  *   constraints = {"ReferenceAccess" = {}, "FileValidation" = {}}
  * )
  */
-
 class TaggdImageItem extends ImageItem {
 
   /**
@@ -49,5 +48,5 @@ class TaggdImageItem extends ImageItem {
 
     return $schema;
   }
-}
 
+}
diff --git a/src/Plugin/Field/FieldWidget/TaggdImageWidget.php b/src/Plugin/Field/FieldWidget/TaggdImageWidget.php
index 605d48f..d0dd6d6 100644
--- a/src/Plugin/Field/FieldWidget/TaggdImageWidget.php
+++ b/src/Plugin/Field/FieldWidget/TaggdImageWidget.php
@@ -3,7 +3,6 @@
 namespace Drupal\taggd\Plugin\Field\FieldWidget;
 
 use Drupal\Component\Serialization\Json;
-use Drupal\Core\Field\FieldItemInterface;
 use Drupal\Core\Field\FieldItemListInterface;
 use Drupal\Core\Form\FormStateInterface;
 use Drupal\image\Plugin\Field\FieldWidget\ImageWidget;
@@ -26,7 +25,7 @@ class TaggdImageWidget extends ImageWidget {
    */
   public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {
     $element = parent::formElement($items, $delta, $element, $form, $form_state);
-    /** @var FieldItemInterface $field_item */
+    /** @var \Drupal\Core\Field\FieldItemInterface $field_item */
     $field_item = $items[$delta];
 
     $default_value = !empty($field_item->taggd_image_data) ? $field_item->taggd_image_data : [];
@@ -40,7 +39,7 @@ class TaggdImageWidget extends ImageWidget {
       '#title' => 'Tag data',
       '#value' => $default_value,
       '#attributes' => [
-        'class' => ['taggd-image-data']
+        'class' => ['taggd-image-data'],
       ],
     ];
 
@@ -58,7 +57,6 @@ class TaggdImageWidget extends ImageWidget {
     // Attach the taggd library.
     $element['taggd_image_data']['#attached']['library'][] = 'taggd/taggd.widget';
 
-
     return $element;
   }
 
@@ -70,7 +68,8 @@ class TaggdImageWidget extends ImageWidget {
 
     foreach ($values as $delta => &$item_values) {
       if (!empty($item_values['taggd_image_data'])) {
-        // Format as array because our field defines a "MapDataDefinition" property which expects an array.
+        // Format as array because our field defines a "MapDataDefinition"
+        // property which expects an array.
         $item_values['taggd_image_data'] = Json::decode($item_values['taggd_image_data']);
       }
       else {
@@ -80,4 +79,5 @@ class TaggdImageWidget extends ImageWidget {
 
     return $values;
   }
-}
\ No newline at end of file
+
+}
diff --git a/taggd.libraries.yml b/taggd.libraries.yml
index a3050d7..3d13f53 100644
--- a/taggd.libraries.yml
+++ b/taggd.libraries.yml
@@ -35,6 +35,3 @@ taggd.widget:
     - core/jquery
     - core/drupalSettings
     - taggd/taggd.library
-
-
-
diff --git a/taggd.module b/taggd.module
index 4b1891a..b25b903 100644
--- a/taggd.module
+++ b/taggd.module
@@ -1,5 +1,10 @@
 <?php
 
+/**
+ * @file
+ * Taggd Module.
+ */
+
 use Drupal\Core\Routing\RouteMatchInterface;
 
 /**
@@ -11,7 +16,8 @@ function taggd_help($route_name, RouteMatchInterface $route_match) {
     case 'help.page.taggd':
       $output = file_get_contents(drupal_get_path('module', 'taggd') . '/README.md');
       return '<pre>' . $output . '</pre>';
-      break;
+
+    break;
     default:
   }
 }
@@ -32,5 +38,4 @@ function taggd_preprocess_image_widget(&$variables) {
     }
   }
 
-
-}
\ No newline at end of file
+}
