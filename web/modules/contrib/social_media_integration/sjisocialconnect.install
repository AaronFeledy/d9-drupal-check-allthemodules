<?php

/**
 * @file
 * Install, update and uninstall functions for the sji social connect module.
 */

/**
 * Implements hook_requirements().
 */
function sjisocialconnect_requirements($phase = 'runtime') {
  $requirements = array();

  if ($phase == 'runtime') {
    // Check for various sji social connect namespaces.
    $sjisocialconnect_problems = array();
    $sjisocialconnect_requirements = array();
    foreach (\Drupal::moduleHandler()->getImplementations('sjisocialconnect_info') as $module) {
      // Will call all modules implementing hook_sjisocialconnect_info and
      // push the results onto the $sjisocialconnect_problems array
      $sjisocialconnect_requirements = \Drupal::moduleHandler()->invoke($module, 'sjisocialconnect_info');
      if (!empty($sjisocialconnect_requirements['library_classes'])) {
        foreach ($sjisocialconnect_requirements['library_classes'] as $class) {
          if (!class_exists($class)) {
            $sjisocialconnect_problems[] = t('Class :class_name missing.', array(':class_name' => $class));
          }
        }
      }
    }
    // Format and display each problem.
    if (!empty($sjisocialconnect_problems)) {
      $message = t('Read the point 1 and 2 of sjisocialconnect/README.txt file.') . '<br />';
      $requirements['sjisocialconnect_problems'] = array(
        'title' => t('Sji social connect requirements'),
        'value' => t('Problems detected'),
        'severity' => REQUIREMENT_WARNING,
        'description' => array('#markup' => $message . implode('<br />', $sjisocialconnect_problems)),
      );
    }
  }

  return $requirements;
}

/**
 * Implements hook_uninstall().
 *
 */
function sjisocialconnect_uninstall() {
  // Remove generated files.
  file_unmanaged_delete_recursive('public://sjiSocialConnect');
}
