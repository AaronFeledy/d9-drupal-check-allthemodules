<?php

/**
 * @file
 * The module file.
 */

use Drupal\ad_entity\Entity\AdEntityInterface;

/**
 * Implements hook_ad_entity_view_alter().
 */
function ad_entity_vi_ad_entity_view_alter(array &$build, AdEntityInterface $ad_entity) {
  if ($ad_entity->type_plugin_id == 'vi') {
    if ($settings = $ad_entity->getThirdPartySettings('ad_entity_vi')) {
      $keywords = $settings['keywords'];
      $keywords_array = explode(',', $keywords);
      $keywords_array = array_map('trim', $keywords_array);

      // Allow modules to alter keywords with hook_ad_entity_vi_keywords_alter().
      \Drupal::moduleHandler()->alter('ad_entity_vi_keywords', $keywords_array);

      $build['#attached']['drupalSettings']['ad_entity_vi']['keywords'] = implode(', ', $keywords_array);
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function ad_entity_vi_page_attachments(&$build) {
  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('vi');
    if (!empty($settings)) {
      foreach ($settings as $setting => $value) {
        $build['#attached']['drupalSettings']['ad_entity_vi'][$setting] = $value;
      }
    }

    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $build['#attached']['drupalSettings']['ad_entity_vi']['language'] = "{$language}-{$language}";
  }
}

/**
 * Implements hook_theme().
 */
function ad_entity_vi_theme($existing, $type, $theme, $path) {
  return [
    'vi_default' => [
      'variables' => ['ad_entity' => NULL],
    ],
  ];
}
