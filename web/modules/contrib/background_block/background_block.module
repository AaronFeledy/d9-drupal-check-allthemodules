<?php

/**
* @file
* Adding ID to blocks.
*/

use Drupal\Core\Form\FormStateInterface;
use Drupal\block\Entity\Block;
use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\block\BlockInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function background_block_block_presave(BlockInterface $entity) {
  if (empty($entity->getThirdPartySetting('background_block', 'background'))) {
    $entity->unsetThirdPartySetting('background_block', 'background');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function background_block_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (\Drupal::currentUser()->hasPermission('administer background block')) {

    /** @var \Drupal\block\BlockInterface $block */
    $block = $form_state->getFormObject()->getEntity();

    // This will automatically be saved in the third party settings.
    $form['third_party_settings']['#tree'] = TRUE;
    $form['third_party_settings']['background_block']['background'] = [
      '#type' => 'textfield',
      '#title' => t('Background Block Color'),
      '#description' => t('Color Code. eg: #ffffff or white'),
      '#default_value' => $block->getThirdPartySetting('background_block', 'background'),
    ];

  }
}


/**
 * Implements hook_preprocess_HOOK().
 */
function background_block_preprocess_block(&$variables) {
  if (!empty($variables['elements']['#id'])) {
    $block = Block::load($variables['elements']['#id']);
    if ($block && $background = $block->getThirdPartySetting('background_block', 'background')) {
      $variables['attributes']['style'] = 'background-color:'.$background;
    }
  }
}