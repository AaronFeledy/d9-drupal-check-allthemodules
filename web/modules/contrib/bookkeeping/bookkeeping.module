<?php

/**
 * @file
 * Primary module hooks for Bookkeeping module.
 */

use Drupal\commerce_payment\Entity\PaymentGatewayInterface;
use Drupal\commerce_store\Entity\StoreInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_toolbar_alter().
 */
function bookkeeping_toolbar_alter(&$items) {
  $items['administration']['#attached']['library'][] = 'bookkeeping/toolbar';
}

/**
 * Implements hook_modules_installed().
 */
function bookkeeping_modules_installed($modules) {
  /** @var \Drupal\bookkeeping\CommerceConfig $commerce_config */
  $commerce_config = \Drupal::service('bookkeeping.commerce_config');
  if (in_array('commerce_store', $modules)) {
    $commerce_config->onCommerceStoreInstall();
  }
  if (in_array('commerce_payment', $modules)) {
    $commerce_config->onCommercePaymentInstall();
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert() for commerce_store.
 */
function bookkeeping_commerce_store_insert(StoreInterface $entity) {
  /** @var \Drupal\bookkeeping\CommerceConfig $commerce_config */
  $commerce_config = \Drupal::service('bookkeeping.commerce_config');
  $commerce_config->initStore($entity);
}

/**
 * Implements hook_ENTITY_TYPE_insert() for commerce_payment_gateway.
 */
function bookkeeping_commerce_payment_gateway_insert(PaymentGatewayInterface $entity) {
  /** @var \Drupal\bookkeeping\CommerceConfig $commerce_config */
  $commerce_config = \Drupal::service('bookkeeping.commerce_config');
  $commerce_config->initPaymentGateway($entity);
}

/**
 * Implements hook_ENTITY_TYPE_insert() for commerce_payment.
 */
function bookkeeping_commerce_payment_insert(EntityInterface $entity) {
  \Drupal::service('bookkeeping.entity_hooks.commerce_payment')->postSave($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update() for commerce_payment.
 */
function bookkeeping_commerce_payment_update(EntityInterface $entity) {
  \Drupal::service('bookkeeping.entity_hooks.commerce_payment')->postSave($entity, $entity->original);
}

/**
 * Implements hook_ENTITY_TYPE_insert() for commerce_order.
 */
function bookkeeping_commerce_order_insert(EntityInterface $entity) {
  \Drupal::service('bookkeeping.entity_hooks.commerce_order')->postSave($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update() for commerce_order.
 */
function bookkeeping_commerce_order_update(EntityInterface $entity) {
  \Drupal::service('bookkeeping.entity_hooks.commerce_order')->postSave($entity, $entity->original);
}
