<?php

/**
 * @file
 * Contains editor_node.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\editor_note\Hook\EntityHook;
use Drupal\user\UserInterface;

/**
 * Implements hook_entity_delete().
 */
function editor_note_entity_delete(EntityInterface $entity) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityHook::class)
    ->onEntityDelete($entity);
}

/**
 * Implements hook_entity_revision_delete().
 */
function editor_note_entity_revision_delete(EntityInterface $entity) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityHook::class)
    ->onEntityRevisionDelete($entity);
}

/**
 * Implements hook_entity_insert().
 */
function editor_note_entity_insert(EntityInterface $entity) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityHook::class)
    ->onEntityInsert($entity);
}

/**
 * Implements hook_entity_update().
 */
function editor_note_entity_update(EntityInterface $entity) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityHook::class)
    // Same as for entity insert.
    ->onEntityInsert($entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function editor_note_user_delete(EntityInterface $entity) {
  \Drupal::service('class_resolver')
    ->getInstanceFromDefinition(EntityHook::class)
    ->onUserDelete($entity);
}

/**
 * Implements hook_user_cancel().
 */
function editor_note_user_cancel($edit, UserInterface $account, $method) {
  switch ($method) {
    case 'user_cancel_reassign':
      \Drupal::service('class_resolver')
        ->getInstanceFromDefinition(EntityHook::class)
        ->onUserCancel($account);
      break;

    default:
      break;
  }
}
