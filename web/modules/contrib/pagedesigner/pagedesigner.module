<?php

/**
 * @file
 * Contains pagedesigner.module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
/**
 * Implements hook_help().
 */
function pagedesigner_help($route_name, RouteMatchInterface $route_match)
{
    switch ($route_name) {
        // Main module help for the pagedesigner module.
        case 'help.page.pagedesigner':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('') . '</p>';
            return $output;

        default:
    }
}

/**
 * Implements hook_theme().
 */
function pagedesigner_theme()
{
    $theme = [];
    $theme['pagedesigner_element'] = [
        'render element' => 'elements',
        'file' => 'pagedesigner_element.page.inc',
        'template' => 'pagedesigner_element',
    ];
    $theme['pagedesigner_element_content_add_list'] = [
        'render element' => 'content',
        'variables' => ['content' => null],
        'file' => 'pagedesigner_element.page.inc',
    ];
    return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function pagedesigner_theme_suggestions_pagedesigner_element(array $variables)
{
    $suggestions = [];
    $entity = $variables['elements']['#pagedesigner_element'];
    $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

    $suggestions[] = 'pagedesigner_element__' . $sanitized_view_mode;
    $suggestions[] = 'pagedesigner_element__' . $entity->bundle();
    $suggestions[] = 'pagedesigner_element__' . $entity->bundle() . '__' . $sanitized_view_mode;
    $suggestions[] = 'pagedesigner_element__' . $entity->id();
    $suggestions[] = 'pagedesigner_element__' . $entity->id() . '__' . $sanitized_view_mode;
    return $suggestions;
}

function pagedesigner_pagedesigner_element_access(EntityInterface $entity, $operation, AccountInterface $account)
{
    if ($account->isAnonymous()) {
        return AccessResult::forbidden();
    }
    return AccessResult::neutral();
}

/**
 * Add the node id to drupal settings to load edit form.
 *
 * @param array $variables
 * @return void
 */
function pagedesigner_preprocess_node(&$variables)
{
    $variables['#attached']['drupalSettings']['path']['nid'] = \Drupal::routeMatch()->getRawParameter('node');
}
