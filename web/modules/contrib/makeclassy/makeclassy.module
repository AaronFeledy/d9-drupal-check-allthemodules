<?php

/**
 * @file
 * Primary module hooks for MakeClassy! module.
 */

use Drupal\Component\Utility\Html;
use Drupal\user\EntityOwnerInterface;


/**
 * Implements hook_module_implements_alter().
 */
function makeclassy_module_implements_alter(&$implementations, $hook) {
  // Ensure we're last, almost always
  if (isset($implementations['makeclassy']) && $hook !== 'module_implements_alter') {
    $group = $implementations['makeclassy'];
    unset($implementations['makeclassy']);
    $implementations['makeclassy'] = $group;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_field(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2217731
  $element = $variables['element'];
  // Add default CSS classes. Since there can be many fields rendered on a page,
  // save some overhead by calling strtr() directly instead of
  // \Drupal\Component\Utility\Html::getClass().
  $variables['entity_type_css'] = strtr($element['#entity_type'], '_', '-');
  $variables['field_name_css'] = strtr($element['#field_name'], '_', '-');
  $variables['field_type_css'] = strtr($element['#field_type'], '_', '-');
  $variables['attributes']['class'] = array(
    'field',
    'field-' . $variables['entity_type_css'] . '--' . $variables['field_name_css'],
    'field-name-' . $variables['field_name_css'],
    'field-type-' . $variables['field_type_css'],
    'field-label-' . $element['#label_display'],
  );
  // Add a "clearfix" class to the wrapper since we float the label and the
  // field items in field.module.css if the label is inline.
  if ($element['#label_display'] == 'inline') {
    $variables['attributes']['class'][] = 'clearfix';
  }
  // Hide labels visually, but display them to screenreaders if applicable.
  if ($element['#label_display'] == 'visually_hidden') {
    $variables['title_attributes']['class'][] = 'visually-hidden';
  }

  if ($element['#field_type'] == 'comment') {
    $variables['attributes']['class'][] = 'comment-wrapper';
    $variables['title_attributes']['class'][] = 'title';
    $variables['content_attributes']['class'] = array('title', 'comment-form__title');
  }

  if ($element['#field_type'] == 'taxonomy_term_reference') {
    $variables['title_attributes']['class'][] = 'field-label';
    if ($variables['element']['#label_display'] == 'inline') {
      $variables['title_attributes']['class'][] = 'inline';
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_node(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2254153
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['elements']['#node'];

  // Gather node classes.
  $variables['attributes']['class'][] = 'node';
  $variables['attributes']['class'][] = Html::getClass('node--type-' . $node->bundle());
  if ($node->isPromoted()) {
    $variables['attributes']['class'][] = 'node--promoted';
  }
  if ($node->isSticky()) {
    $variables['attributes']['class'][] = 'node--sticky';
  }
  if (!$node->isPublished()) {
    $variables['attributes']['class'][] = 'node--unpublished';
  }
  if ($variables['view_mode']) {
    $variables['attributes']['class'][] = Html::getClass('node--view-mode-' . $variables['view_mode']);
  }
  if (isset($node->preview)) {
    $variables['attributes']['class'][] = 'node--preview';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_time(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2322287
  $variables['attributes']['class'][] = 'datetime';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_datetime_form(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2322287
  $variables['attributes']['class'][] = 'container-inline';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_datetime_wrapper(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2322287
  $variables['title_attributes']['class'][] = 'label';
  if (!empty($element['#required'])) {
    $variables['title_attributes']['class'][] = 'form-required';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_region(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2326423
  $variables['attributes']['class'][] = 'region';
  $variables['attributes']['class'][] = Html::getClass('region-' . $variables['region']);

}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_block(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2328913
  $variables['attributes']['class'][] = 'block';
  $variables['attributes']['class'][] = Html::getClass('block-' . $variables['configuration']['provider']);
  $variables['content_attributes']['class'][] = 'content';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_container(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329759
  $element['#attributes']['class'][] = 'form-wrapper';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_links(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329763
  // @fixme Care that we come after template_preprocess_links.
  foreach ($variables['links'] as $key => $link) {
    $variables['links'][$key]['attributes']['class'][] = Html::getClass($key);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_table(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329767
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_forum(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329769
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_image_style(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329771
  $variables['attributes']['class'][] = 'image-style-' . Html::getClass($variables['style_name']);

}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_taxonomy_term(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329775
  /** @var \Drupal\taxonomy\TermInterface $term */
  $term = $variables['term'];
  $variables['attributes']['class'][] = 'taxonomy-term';
  $vocabulary_name_css = str_replace('_', '-', $term->bundle());
  $variables['attributes']['class'][] = 'vocabulary-' . $vocabulary_name_css;

}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_user(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329779
  // Set up attributes.
  $variables['attributes']['class'][] = 'profile';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_username(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329779
  $variables['attributes']['class'] = array('username');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_ckeditor_settings_toolbar(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329781
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_comment(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329783
  /** @var \Drupal\comment\CommentInterface $comment */
  $comment = $variables['elements']['#comment'];
  $commented_entity = $comment->getCommentedEntity();

  // Gather comment classes.
  $variables['attributes']['class'][] = 'comment';
  // 'published' class is not needed, it is either 'preview' or 'unpublished'.
  if ($variables['status'] != 'published') {
    $variables['attributes']['class'][] = $variables['status'];
  }
  if (!$comment->getOwnerId()) {
    $variables['attributes']['class'][] = 'by-anonymous';
  }
  else {
    // @todo Use $entity->getAuthorId() after https://drupal.org/node/2078387
    if ($commented_entity instanceof EntityOwnerInterface && $comment->getOwnerId() == $commented_entity->getOwnerId()) {
      $variables['attributes']['class'][] = 'by-' . $commented_entity->getEntityTypeId() . '-author';
    }
  }
  // Add clearfix class.
  $variables['attributes']['class'][] = 'clearfix';
  $variables['content_attributes']['class'][] = 'content';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_rdf_metadata(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329787
  foreach ($variables['metadata'] as $key => $attributes) {
    // Add a class so that developers viewing the HTML source can see why there
    // are empty <span> tags in the document.
    $variables['metadata'][$key]['attributes']['class'][] = 'rdf-meta';
    $variables['metadata'][$key]['attributes']['class'][] = 'hidden';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_toolbar(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329789
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_aggregator_item(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329819
  $variables['attributes']['class'][] = 'feed-item';
  $variables['attributes']['class'][] = 'feed-source';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_update_project_status(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329829
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_filter_guidelines(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329837
  // @todo

}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_admin_block_content(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329851
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_status_report(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329851
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_system_themes_page(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329851
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_feed_icon(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329853
  $variables['attributes']['class'] = array('feed-icon');

}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_fieldset(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_radios(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_checkboxes(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_textarea(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_form_element(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_form_element_label(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329901
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_view(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329917
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_view_summary(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329917
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_view_unformatted(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329917
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_view_table(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329917
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_view_grid(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329917
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_views_ui_display_tab_setting(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2329919
  // @todo
}

/**
 * Implements hook_preprocess_HOOK().
 */
function makeclassy_preprocess_item_list(&$variables) {
  // https://www.drupal.org/project/drupal/issues/2495419
  // @todo
}
