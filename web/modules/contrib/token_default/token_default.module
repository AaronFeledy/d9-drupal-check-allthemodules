<?php

/**
 * @file
 * Allows a token to be given a default value in the event of no value being
 * found.
 * This can be altered per content type.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function token_default_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.token_default':
      $readme = __DIR__ . '/README.md';
      $text = file_get_contents($readme);
      $output = '';

      // If the Markdown module is installed, use it to render the README.
      if ($text && \Drupal::moduleHandler()->moduleExists('markdown') === TRUE) {
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        $output = $filter->process($text, 'en');
      }
      // Else the Markdown module is not installed output the README as text.
      else if ($text) {
        $output = '<pre>' . $text . '</pre>';
      }

      // Add a link to the Drupal.org project.
      $output .= '<p>';
      $output .= t('Visit the <a href=":project_link">project pages</a> on Drupal.org for more information.',[
        ':project_link' => 'https://www.drupal.org/project/token_default'
        ]);
      $output .= '</p>';

      return $output;
  }

}

/**
 * Implements hook_tokens_alter().
 */
function token_default_tokens_alter(array &$replacements, array $context, BubbleableMetadata $bubbleable_metadata) {
  if (!\Drupal::config('token_default.settings')->get('enabled')) {
    return;
  }
  $replacements = \Drupal::service('token_default.manager')->replaceMissingTokensWithDefaults($replacements, $context);
}
