<?php

/**
 * @file
 * Provides functionality for handling entity SCSS fields.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_entity_view_alter().
 */
function scss_field_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  $field_manager = Drupal::service('scss_field.manager');
  $scss_fields = $field_manager->getScssFields($entity);

  if (!count($scss_fields)) {
    // Nothing to do if there are no SCSS fields on this entity.
    return;
  }

  $entity_id = $entity->id();
  $entity_type_id = $entity->getEntityTypeId();

  $is_scoped = FALSE;

  foreach ($scss_fields as $field_name => $field) {
    if ($field->getSetting('scoped')) {
      $is_scoped = TRUE;
    }
    $delta = 0;
    foreach ($field as $field_item) {
      $css = $field_item->get('compiled')->getValue();
      $build['#attached']['html_head'][] = [
        [
          '#tag' => 'style',
          '#attributes' => [
            'data-scssfield-for' => "$entity_type_id-$entity_id-$field_name-$delta",
          ],
          '#value' => $css,
        ],
        'scss_field',
      ];

      $delta++;
    }
  }
  if ($is_scoped) {
    $build['#attributes']["data-scssfield-$entity_type_id-$entity_id"] = '';
  }
}
