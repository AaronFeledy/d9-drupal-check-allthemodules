<?php

/**
 * @file
 * Contains layout_kit.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Utility\Html;
use Drupal\Core\Render\Element;

/**
 * Implements hook_help().
 */
function layout_kit_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the layout_kit module.
    case 'help.page.layout_kit':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Layout Kit includes a set of layouts ready to use.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Helper function to preprocess all layout kit templates.
 *
 * @param array $variables
 *   Template variables.
 */
function _layout_kit_preprocess_layout(array &$variables) {
  // All elements are inside content and inside 'content' region.
  $layout_elements_raw = !empty($variables['content']) && !empty($variables['content']['content']) ? $variables['content']['content'] : [];

  // Init elements.
  $variables['layout_elements'] = [];
  // Iterate through childrens (vars without '#' prefix).
  foreach (Element::children($layout_elements_raw, TRUE) as $key) {
    // Add new element with required vars.
    $variables['layout_elements'][] = [
      // Title may be found in different ways, find and set.
      'title' => _layout_kit_element_get_title($layout_elements_raw[$key]),
      // Content is the complete element.
      'content' => $layout_elements_raw[$key],
      // Add unique ID.
      'id' => Html::getUniqueId('layout-kit'),
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK() for 'Layout Kit - accordion'.
 */
function layout_kit_preprocess_layout_kit__accordion(&$variables) {
  _layout_kit_preprocess_layout($variables);
}

/**
 * Implements hook_preprocess_HOOK() for 'Layout Kit - commutator'.
 */
function layout_kit_preprocess_layout_kit__commutator(&$variables) {
  _layout_kit_preprocess_layout($variables);
}

/**
 * Implements hook_preprocess_HOOK() for 'Layout Kit - Tabs: horizontal'.
 */
function layout_kit_preprocess_layout_kit__tabs_horizontal(&$variables) {
  _layout_kit_preprocess_layout($variables);
}

/**
 * Implements hook_preprocess_HOOK() for 'Layout Kit - Tabs: vertical'.
 */
function layout_kit_preprocess_layout_kit__tabs_vertical(&$variables) {
  _layout_kit_preprocess_layout($variables);
}

/**
 * Find and return title inside element.
 *
 * @param array $element
 *   Element.
 *
 * @return string
 *   Title.
 */
function _layout_kit_element_get_title(array &$element) {

  // Title (field groups).
  if (!empty($element['#title'])) {
    $title = $element['#title'];
  }
  // Label (Bricks).
  elseif (!empty($element['#label'])) {
    $title = $element['#label'];
  }
  // Field title (Paragraphs).
  elseif (!empty($element['#paragraph'])) {
    $paragraph = $element['#paragraph'];
    $title = $paragraph->hasField('field_title') ? $paragraph->get('field_title')->value : NULL;
  }
  else {
    $title = NULL;
  }
  return $title;
}

