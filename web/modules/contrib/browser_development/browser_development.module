<?php

/**
 * @file
 * Contains intelligencebank_newsletter.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;


/**
 * Implements hook_help().
 */
function browser_development_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.browser_development':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Inline form injected into a block to edit css') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_page_attachments().
 */
function browser_development_page_attachments(array &$attachments) {


  if (_browser_development_check_user_access() == FALSE) {
    return;
  }


  if (!is_dir('public://browser-development')) {
    \Drupal::service('file_system')->mkdir('public://browser-development');
  }
  $attachments['#attached']['library'][] = 'browser_development/browser-development';

}


/**
 * Implements hook_preprocess_html().
 */
function browser_development_preprocess_html(&$vars) {

  if (_browser_development_check_user_access() != FALSE) {
    $block = \Drupal\block\Entity\Block::load('browserdevelopmentblock');
    $vars['browser_development'] = \Drupal::entityTypeManager()
      ->getViewBuilder('block')
      ->view($block);

    $path = \Drupal::request()->getRequestUri();
    $path_args = explode('/', $path);
    unset($path_args['0']);

    if ($path_args[1] === 'admin' || $path_args[1] === 'node') {
      $vars['browser_development_class'] = 'editors-page';
    }
  }
}


/**
 * Implements hook_theme().
 */
function browser_development_theme($existing, $type, $theme, $path) {
  return [
    'block__browser_development' => [
      'path' => $path . '/templates',
      'template' => 'block--browser-development-block',
      'base hook' => 'block',
    ],
  ];
}

/**
 * Tests if the current theme is on going to see
 * the software and  does the same with the current
 * role allowing it to access the browsers developer
 * software
 *
 * False: means no access to the developer software
 * True: means you are able to access the software
 *
 * @todo the two arrays will get placed into the admin pages place in config
 *
 * @return bool
 */
function _browser_development_check_user_access() {
  $roles = [
    'editor',
    'admin',
    'root',
  ];

  $themes = [
    'seven'
  ];

  $current_theme = \Drupal::theme()->getActiveTheme()->getName();
  foreach ($themes as $theme) {
    if ($theme == $current_theme) {
      return FALSE;
    }
  }


  $current_role = \Drupal::currentUser()->getRoles();
  if (isset($current_role[1])) {
    foreach ($roles as $role) {
      if ($role == $current_role[1]) {
        \Drupal::logger('browser_development')
          ->error(print_r($current_role, TRUE));
        return TRUE;
      }
    }
  }
  return FALSE;
}
