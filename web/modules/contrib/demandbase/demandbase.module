<?php

/**
 * @file
 * Contains demandbase.module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function demandbase_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the demandbase module.
    case 'help.page.demandbase':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;
    default:
  }
}


/**
 * Implements hook_page_attachments().
 *
 * Insert JavaScript to the appropriate scope/region of the page.
 */
function demandbase_page_attachments(array &$page) {
  $config = \Drupal::config('demandbase.settings');

  $page['#cache']['tags'] = Cache::mergeTags(isset($page['#cache']['tags']) ? $page['#cache']['tags'] : [], $config->getCacheTags());
  // Add module cache tags.
 if(demandbase_attachment_evaluate()) {
    $page['#attached']['library'][] = 'demandbase/demandbase.tag';
    $page['#attached']['drupalSettings']['demandbase']['tag_id'] = $config->get('tag_id');
  }
}

function demandbase_attachment_evaluate() {
  $config = \Drupal::config('demandbase.settings');

  if(!empty($config->get('tag_id')) && $config->get('tag_enabled')) {
    $pages = mb_strtolower($config->get('tag_pages'));
    $op = $config->get('tag_pages_op');
    if(!$pages || !$op) {
      return TRUE;
    }
    $request = \Drupal::requestStack()->getCurrentRequest();
    // Compare the lowercase path alias (if any) and internal path.
    $path = \Drupal::service('path.current')->getPath($request);
    // Do not trim a trailing slash if that is the complete path.
    $path = $path === '/' ? $path : rtrim($path, '/');
    $path_alias = mb_strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($path));
    $path_matcher = \Drupal::service('path.matcher');
    $is_match = $path_matcher->matchPath($path_alias, $pages) || (($path != $path_alias) && $path_matcher->matchPath($path, $pages));
    if($is_match && $op == 'include') {
      return TRUE;
    }
    elseif (!$is_match && $op == 'exclude') {
      return TRUE;
    }
    else {
      return FALSE;
    }
  }
  return FALSE;
}