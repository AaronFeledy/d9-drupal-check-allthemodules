<?php

/**
 * @file
 * Creates term_revision table.
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 */
function term_revision_schema() {
  $schema['term_revision'] = [
    'fields' => [
      'trid' => [
        'type' => 'serial',
        'not null' => TRUE,
      ],
      'entity_id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'length' => 10,
      ],
      'revision_data' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => TRUE,
      ],
      'changed' => [
        'type' => 'int',
        'not null' => TRUE,
        'length' => 12,
      ],
      'langcode' => [
        'type' => 'varchar',
        'not null' => TRUE,
        'length' => 30,
      ],
      'revision_user' => [
        'type' => 'int',
        'not null' => TRUE,
        'length' => 11,
        'default' => -1,
      ],
    ],
    'primary key' => ['trid'],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function term_revision_install() {
  // To create an initial revision of all the existing taxonomy terms.
  $connection = Database::getConnection();
  // Database Schema.
  $schema = $connection->schema();
  $termstorage = \Drupal::entityManager()->getStorage('taxonomy_term');

  $terms = $termstorage->loadMultiple();
  foreach ($terms as $term) {
    // entity_id , tid.
    $entity_id = $term->id();

    // Changed.
    $changed = $term->getChangedTime();

    // Langcode.
    $langcode = $term->get('langcode')->value;

    // Fields.
    $fields = $term->getFields();

    // Serialized data.
    $serialized_data = serialize($fields);

    if ($schema->tableExists('term_revision')) {
      $values = [$entity_id, $serialized_data, $changed, $langcode];

      $connection->insert('term_revision')->fields([
        'entity_id', 'revision_data', 'changed', 'langcode',
      ], $values)
        ->execute();
    }
  }
}
