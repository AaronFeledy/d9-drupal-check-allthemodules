<?php

/**
 * @file
 * Client-side redirect based on the user-agent string.
 */

use Drupal\Component\Utility\Html;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Default value for devices list option.
 */
const MOBILE_JS_REDIRECT_REGEXP_DEVICES_LIST = 'iphone|ipad|ipod|android|blackberry|mini|windowssce|iemobile|palm';

/**
 * Implements hook_help().
 */
function mobile_js_redirect_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gss module.
    case 'help.page.mobile_js_redirect':
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This is a simple module that adds a JS in the HTML head to perform a redirect from a desktop site URL to a mobile one or the other way around.</br>This is useful when Varnish or any other reverse proxy cache is being used to cache
your site and keep a mobile vs desktop redirect working.') . '</p>';
      $output .= '<h3>' . t('Instructions') . '</h3>';
      $output .= '<p>' . t('Install this module like any other module and set the "Desktop site URL" and "Mobile site URL" for this to work.</br>To be able to access the administrative area or avoid redirection at any point, use the query string below.
') . '</p>';
      $output .= '<p>' . t('<strong>?stopredirect=true</strong>') . '</p>';
  }

  return $output;
}

/**
 * Implements hook_page_attachments().
 */
function mobile_js_redirect_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'mobile_js_redirect/mobile-js-redirect-js';
  $attachments['#attached']['html_head'][] = [
    [
      '#type' => 'html_tag',
      '#tag' => 'script',
      '#value' => mobile_js_get_urls(),
    ],
    'mobile-js-redirect-js',
  ];
}

/**
 * Get URLs for use on JS file.
 */
function mobile_js_get_urls() {

  global $base_root;
  $urls = \Drupal::config('mobile_js_redirect.settings')->get('mobile_js_redirect_urls');
  $current_url = $base_root . \Drupal::request()->getRequestUri();
  $current_devices_list = (!empty(\Drupal::config('mobile_js_redirect.settings')->get('mobile_js_redirect_regexp_devices_list'))) ? \Drupal::config('mobile_js_redirect.settings')->get('mobile_js_redirect_regexp_devices_list') : MOBILE_JS_REDIRECT_REGEXP_DEVICES_LIST;
  $devices_list = Html::escape($current_devices_list);

  // Set default values.
  $javascript = "var mobile_js_redirect_target_url = '';";
  $javascript .= "var mobile_js_redirect_desktop_url = '';";
  $javascript .= "var mobile_js_redirect_mobile_url = '';";

  $urls_arr = explode(PHP_EOL, $urls);

  foreach ($urls_arr as $value) {

    $url_line = explode('|', $value);
    $last_char = substr($url_line[0], -1);

    if ($last_char == '*') {
      $trated_url = substr($url_line[0], 0, -1);
      if (strpos($current_url, $trated_url) !== FALSE) {
        $javascript = mobile_js_update_urls($url_line);
        break;
      }
    }

    if ($url_line[0] == $current_url || $url_line[0] . '/' == $current_url) {
      $javascript = mobile_js_update_urls($url_line);
      break;
    }
  }
  $javascript .= "var mobile_js_redirect_devices_regexp = '$devices_list';";

  return $javascript;
}

/**
 * Update URL values.
 */
function mobile_js_update_urls($url_array) {
  $target_url = (!empty($url_array[0])) ? $url_array[0] : '';
  $last_char = substr($url_array[0], -1);

  if ($last_char == '*') {
    $target_url = substr($url_array[0], 0, -1);
  }

  $url_desktop = (!empty($url_array[1])) ? $url_array[1] : '';
  $url_mobile = (!empty($url_array[2])) ? $url_array[2] : '';

  $javascript = "var mobile_js_redirect_target_url = '$target_url';";
  $javascript .= "var mobile_js_redirect_desktop_url = '$url_desktop';";
  $javascript .= "var mobile_js_redirect_mobile_url = '$url_mobile';";

  return $javascript;
}
