# This declares the plugin manager to the service container. For background
# information on the service container, see https://www.drupal.org/node/2133171.
# Changes here require that the cache be cleared in order to have Drupal notice
# them.
services:
  # The machine name of the service. This is the string that must be passed to
  # Drupal::service() to get the instantiated plugin manager.
  plugin.manager.admin_status:
    # This tells the service container the name of our plugin manager class.
    class: Drupal\admin_status\AdminStatusPluginManager
    # The default parameters to pass to the class constructor,
    # AdminStatusPluginManager::__construct(). Arguments beginning with @ are
    # the names of other services that are being injected into this service.
    # Many common ones are found in /core/core.services.yml. See
    # https://drupal.org/node/2133171 for more detail.
    arguments: ['@container.namespaces', '@cache.default', '@module_handler']
  admin_status.admin_status_form:
    class: Drupal\admin_status\Form\AdminStatusForm
    arguments: ["@config.factory", "@plugin.manager.admin_status"]
  admin_status.eventsubscriber:
    class: Drupal\admin_status\EventSubscriber\AdminStatusEventSubscriber
    arguments: ["@plugin.manager.admin_status"]
    tags:
      - { name: event_subscriber }
