<?php

/**
 * @file
 * Isolates and delivers the header, footer, or both of any page.
 */

use Drupal\Core\Url;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_cron().
 */
function third_party_wrappers_cron() {
  // Only clean files older than the user-defined max age. If the max age is 0,
  // files will never be cleaned.
  $service = \Drupal::service('third_party_wrappers');
  $max_age = $service->getMaxAge();
  if ($max_age > 0) {
    $uri = $service->getUri();
    $service->cleanDirectory(\Drupal::service('file_system')->dirname($uri . '/css/'), $max_age);
    $service->cleanDirectory(\Drupal::service('file_system')->dirname($uri . '/js/'), $max_age);
  }
}

/**
 * Implements hook_help().
 */
function third_party_wrappers_help($route_name, RouteMatchInterface $route_match) {
  $admin_url = Url::fromRoute('third_party_wrappers.admin_form')->toString();

  switch ($route_name) {
    case 'third_party_wrappers.admin_form':
      $output = '<p>' . t('Configure settings that control the behavior of the Third Party Wrappers module.') . '</p>';

      return $output;

    case 'help.page.third_party_wrappers':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module is designed to take a page generated by your site and break it into a header and footer. This is useful when you have other sites providing content for you on their domain and you need your design wrapped around their content. Based on the capabilities of the other site, they can dynamically request the header and footer so that it is always up to date or you may cut and paste the generated HTML into their administrative systems when an update is required. This module takes care of modifying relative links and references to images/js/css files and will save a copy of aggregated JS and CSS files so that they remain available even after clearing the caches.') . '</p>';
      $output .= '<p>' . t('This module splits a page generated by your site by looking for a string that indicates where the split should be performed. The string to look for is configurable in the admin section and there are many options for placing the string in your page. It can be placed as the content element or added to a template file. This module makes no restrictions on how you mark the location for the split.') . '</p>';
      $output .= '<h3>' . t('Example of setting up a wrapper') . '</h3>';
      $output .= '<ol><li>' . t('Create a page on your site containing the string to split the wrapper on. It is recommended that the string take the form of an HTML comment to make it invisible to users.') . '</li>';
      $output .= '<li>' . t('Configure the <a href=":admin-settings">admin settings</a> to set the string to look for.', [':admin-settings' => $admin_url]) . '</li>';
      $output .= '<li>' . t('Note the URL of your page. For this example assume it is example.com/foo') . '</li>';
      $output .= '<li>' . t('To retrieve the header, make a request to example.com/third-party-wrappers/top?url=foo') . '</li>';
      $output .= '<li>' . t('To retrieve the footer, make a request to example.com/third-party-wrappers/bottom?url=foo') . '</li></ol>';
      $output .= '<p>' . t('There is a default wrapper page that contains no text other than the string to split the wrapper on. This page is at example.com/third-party-wrappers. To use it in the wrapper, make a request to example.com/third-party-wrappers/[action], where [action] is top, bottom, or all. The default page will be used if the URL parameter is not provided.') . '</p>';

      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function third_party_wrappers_theme($existing, $type, $theme, $path) {
  return [
    'third_party_wrappers' => [
      'render element' => 'elements',
      'variables' => [
        'marker' => '',
      ],
    ],
  ];
}
