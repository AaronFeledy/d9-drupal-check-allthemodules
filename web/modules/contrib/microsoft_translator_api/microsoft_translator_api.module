<?php

/**
 * @file
 * The main file of the Microsoft Translator API module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function microsoft_translator_api_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.microsoft_translator_api':
      $text = file_get_contents(dirname(__FILE__) . "/README.txt");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Translate a text with Microsoft Translator API.
 *
 * Params:
 *   $query - The text to be translated.
 *   $source - Language code of the text to be translated. Optional.
 *   $target - Language code of the target language. Required.
 *   $force - Use without the check of permission.
 */
function microsoft_translator_api_translate($query, $from = '', $to = '', $force = FALSE) {
  $return = '';
  if ($force || \Drupal::currentUser()->hasPermission('access microsoft translator api')) {
    try {
      $query = urlencode($query);
      $response = \Drupal::httpClient()->request('GET', "https://api.microsofttranslator.com/V2/Http.svc/Translate?text=$query&from=$from&to=$to", [
        'headers' => [
          'Ocp-Apim-Subscription-Key' => \Drupal::config('microsoft_translator_api.settings')->get('key'),
        ],
      ]);
      $return = strip_tags($response->getBody()->getContents());
    }
    catch (\Exception $e) {
      watchdog_exception('microsoft_translator_api', $e);
    }
  }
  return $return;
}

/**
 * Get the language code of the query from Microsoft Translator API.
 *
 * Params:
 *   $query - The text which for necessary the language code.
 *   $force - Use without the check of permission.
 */
function microsoft_translator_api_detect($query, $force = FALSE) {
  $return = '';
  if ($force || \Drupal::currentUser()->hasPermission('access microsoft translator api')) {
    try {
      $query = urlencode($query);
      $response = \Drupal::httpClient()->request('GET', "https://api.microsofttranslator.com/V2/Http.svc/Detect?text=$query", [
        'headers' => [
          'Ocp-Apim-Subscription-Key' => \Drupal::config('microsoft_translator_api.settings')->get('key'),
        ],
      ]);
      $return = strip_tags($response->getBody()->getContents());
    }
    catch (\Exception $e) {
      watchdog_exception('microsoft_translator_api', $e);
    }
  }
  return $return;
}
