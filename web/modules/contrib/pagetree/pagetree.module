<?php

use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Language\LanguageInterface;
use \Drupal\Core\Url;
use \Drupal\Node\Entity\Node;
use \Drupal\node\Entity\NodeType;
use Drupal\Core\Form\FormStateInterface;

/**
 * Hooks into node update.
 * Updates menu link content with the linkname set on the iqbm page.
 *
 * @param EntityInterface $entity
 * @return void
 */
function pagetree_node_update(EntityInterface $entity)
{
    $baseTypes = \Drupal::configFactory()->get('pagetree.settings')->get('contentTypes');
    if ($baseTypes != null && in_array($entity->getType(), $baseTypes)) {
        /* Publish a page and all rows, components and contents within from backend side. */
        if ($entity->isPublished() && $entity->original->isPublished() == false) {
            \Drupal::service('pagetree.state_change')->publish($entity, $entity->getRevisionLogMessage());
        }
    }
}

function pagetree_theme($existing, $type, $theme, $path)
{
    return [
        'pagetree' => [
            'variables' => [
                'menus' => [],
                'defaultLangcode' =>
                \Drupal::languageManager()
                    ->getDefaultLanguage()
                    ->getId(),
                'currentLangcode' =>
                \Drupal::languageManager()
                    ->getcurrentLanguage(LanguageInterface::TYPE_CONTENT)
                    ->getId(),
            ],
        ],
    ];
}

function pagetree_preprocess_node_add_list(&$vars)
{
    $parentEntry = \Drupal::request()->query->get('parentEntry');
    if (!empty($parentEntry)) {
        $types = \Drupal::configFactory()->get('pagetree.settings')->get('contentTypes');
        foreach ($types as $type) {
            if (!empty($vars['types'][$type])) {
                $vars['types'][$type]['add_link'] = \Drupal::l(
                    $vars['content'][$type]->label(),
                    new Url(
                        'node.add',
                        array('node_type' => $vars['content'][$type]->id()),
                        ['query' => ['parentEntry' => $parentEntry]]
                    )
                );
            }
        }
    }
}

/**
 * Hooks into edit page form.
 * Adds the copy form to copy content and layout.
 *
 * @param array $form
 * @param FormStateInterface $formState
 * @param string $form_id
 * @return void
 */
function pagetree_form_node_form_alter(&$form, FormStateInterface $formState, $form_id)
{

    $baseTypes = \Drupal::configFactory()->get('pagetree.settings')->get('contentTypes');
    $entity = $formState->getFormObject()->getEntity();
    if ($entity != null && in_array($entity->getType(), $baseTypes)) {
        $parentEntry = \Drupal::request()->query->get('parentEntry');
        if ($parentEntry) {
            /** @var \Drupal\pagetree\Service\MenuHelper $menuHelper */
            $menuHelper = Drupal::service('pagetree.menu_helper');
            $menuLink = $menuHelper->loadMenuLink($parentEntry);
            $form['menu']['link']['menu_parent']['#default_value'] = $menuLink->getMenuName() . ':menu_link_content:' . $parentEntry;
        }
    }

}
