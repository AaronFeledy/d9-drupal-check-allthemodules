<?php

/**
 * @file
 * Allows users to see recently viewed products.
 *
 * Module port to Drupal 8 done by Joshua Fernandes.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Get recently viewed products based on user from database.
 */
function uvrp_get() {
  $nids = [];
  $config = \Drupal::config('uvrp.settings');
  $limit = $config->get('uvrp_limit');
  $query = db_select('uvrp', 'rp');
  $query->innerJoin('node_field_data', 'n', 'n.nid = rp.nid');
  $query->distinct();
  $query->fields('rp', ['nid', 'created']);
  if (\Drupal::currentUser()->id()) {
    $query->condition('rp.uid', \Drupal::currentUser()->id());
  }
  else {
    $query->condition('rp.sid', $_COOKIE['uvrp']);
    $query->condition('rp.uid', 0);
  }
  $query->condition('n.status', 1);
  $query->orderBy('rp.created', 'DESC');
  $query->range(0, $limit);
  $result = $query->execute()->fetchAll();

  foreach ($result as $row) {
    $nids[] = $row;
  }
  return $nids;
}

/**
 * Output block view.
 */
function uvrp_block_display() {
  $output = '';
  $nodeIds = uvrp_get();
  if (!empty($nodeIds)) {
    foreach ($nodeIds as $nodeId) {
      $node = node_load($nodeId->nid);
      if (!empty($node)) {
        $node_view = node_view($node, 'teaser');
        $output .= drupal_render($node_view);
      }
    }
  }
  else {
    $output = 'No recently viewed products to display.';
  }

  return $output;
}

/**
 * Implements hook_cron().
 */
function uvrp_cron() {
  $config = \Drupal::config('uvrp.settings');
  $expireInterval = $config->get('uvrp_expire_interval');
  $expireTime = REQUEST_TIME - (int) $expireInterval;

  db_delete('uvrp')
    ->condition('created', $expireTime, '<')
    ->execute();
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function uvrp_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.uvrp':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Get current user id.
 */
function uvrp_current_user_id() {
  return \Drupal::currentUser()->id();
}

/**
 * Get client ip.
 */
function uvrp_client_ip() {
  return \Drupal::request()->getClientIp();
}

/**
 * Get current node.
 */
function uvrp_get_current_node() {
  return \Drupal::routeMatch()->getParameter('node');
}
