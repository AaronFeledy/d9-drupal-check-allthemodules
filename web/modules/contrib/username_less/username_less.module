<?php

use Drupal\Component\Utility\Unicode;
use Drupal\Core\Render\Element\Email;
use Drupal\Core\Form\FormStateInterface;

/**
 *
 * @param type $username
 * @param type $uid
 *   0 defautl value for visitors.
 * @return type username
 *   username
 */
function username_less_unique_username($username, $uid = 0) {
  $i = 0;
  $database = \Drupal::database();
  do {
    $new_username = empty($i) ? $username : $username . '_' . $i;
    $found = $database->select('users_field_data', 'ufd')
            ->fields('ufd', ['uid'])
            ->condition('name', $new_username, '=')
            ->condition('uid', $uid, '<>')
            ->execute()->fetchAll();
    $i++;
  } while (!empty($found));

  return $new_username;
}

/**
 * @param type $name.
 * @return type string.
 *   get clear username.
 */
function username_less_cleanup_username($name) {
  // Strip illegal characters.
  $name = preg_replace('/[^\x{80}-\x{F7} a-zA-Z0-9@_.\'-]/', '', $name);

  // Strip leading and trailing spaces.
  $name = trim($name);

  // Convert any other series of spaces to a single underscore.
  $name = preg_replace('/\s+/', '_', $name);

  // If there's nothing left use a default.
  $name = ('' === $name) ? t('user') : $name;

  // Truncate to a reasonable size.
  $name = (Unicode::strlen($name) > (USERNAME_MAX_LENGTH - 10)) ? Unicode::substr($name, 0, USERNAME_MAX_LENGTH - 11) : $name;
  return $name;
}

/**
 * Implements hook_form_alter().
 */
function username_less_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $time = \time();
  $settings = get_usernameless_configuration();
  if ($form_id == "user_register_form") {
    if ($settings['user_register'] == 1) {
      $form['account']['name']['#type'] = 'hidden';
      $form['account']['name']['#default_value'] = "usernameless{$time}";
      $form['#validate'][] = 'username_less_registration_page_validation';
    }
    if ($settings['confirm'] == "1") {
      $form['account']['pass']['#type'] = "password";
      $form['account']['pass']['#title'] = t("Password");
    }
  }
  if ($form_id == "user_login") {
    if ($settings['user_login'] == 0) {
      $form['name']['#title'] = t('E-mail');
      $form['name']['#description'] = t('Enter your e-mail address.');
      $form['name']['#element_validate'][] = 'username_less_user_login_validate';
      $form['name']['#type'] = 'email';
    }
    if ($settings['user_login'] == 1) {
      $form['name']['#title'] = t('Username');
    }
    if ($settings['user_login'] == 2) {
      $form['name']['#title'] = t('Username / Email');
      $form['name']['#element_validate'][] = 'username_less_user_login_validate';
    }
    $form['name']['#maxlength'] = Email::EMAIL_MAX_LENGTH;
  }
}

/**
 * Form element validation handler for the user login form.
 */
function username_less_user_login_validate($form, FormStateInterface $form_state) {
  $mail = $form_state->getValue('name');
  if (!empty($mail) && ($user = user_load_by_mail($mail))) {
    $form_state->setValue('name', $user->getAccountName());
  }
}

/**
 * Set the username from the email address.
 */
function username_less_registration_page_validation(&$form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $new_username = preg_replace('/@.*$/', '', $values['mail']);
  $new_username = username_less_cleanup_username($new_username);
  $new_username = username_less_unique_username($new_username);
  $form['account']['name']['#default_value'] = $new_username;
  $form_state->setValue('name', $new_username);
}

/**
 * Load the configuration.
 * @return saved configuraration arrray
 *   configuration settings array.
 */
function get_usernameless_configuration() {
  $settings = array();
  $user_register = 'user_register';
  $user_login = 'user_login';
  $confirm = 'confirm';
  $domain_id = NULL;
  $ismodule_enable = \Drupal::moduleHandler()->moduleExists('domain');
  if ($ismodule_enable == TRUE) {
    $negotiator = \Drupal::service('domain.negotiator');
    $domain = $negotiator->getActiveDomain();
    if (isset($domain)) {
      $domain_id = $domain->id();
    }
  }
  $config = \Drupal::config('usernameless.settings');
  if ($domain_id != NULL) {
    $settings = array(
      'user_register' => $config->get($domain_id . "." . $user_register, 1),
      'confirm' => $config->get($domain_id . "." . $confirm, null),
      'user_login' => $config->get($domain_id . "." . $user_login, 2)
    );
  } else {
    $settings = array(
      'user_register' => $config->get($user_register, 1),
      'confirm' => $config->get($confirm, NULL),
      'user_login' => $config->get($user_login, 2)
      );
  }
  return $settings;
}
