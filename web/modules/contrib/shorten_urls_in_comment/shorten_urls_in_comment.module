<?php

/**
 * @file
 * Contains shorten_urls_in_comment.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function shorten_urls_in_comment_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the shorten_urls_in_comment module.
    case 'help.page.shorten_urls_in_comment':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Shorten URLs in comment automatically') . '</p>';
      return $output;

    default:
  }
}

/**
 * {@inheritdoc}
 */
function shorten_urls_in_comment_form_comment_form_alter(&$form, &$form_state) {
  if (array_key_exists('#submit', $form) && is_array($form['#submit'])) {
    array_unshift($form['actions']['submit']['#submit'], 'shorten_urls_in_comment_submit');
  }
}

/**
 * {@inheritdoc}
 */
function shorten_urls_in_comment_submit(&$form, FormStateInterface $form_state) {
  $body = $form_state->getValue('comment_body');
  $comment = $body['0']['value'];
  $pattern = "/(?i)\b((?:https?:\/\/|www\d{0,3}[.]|[a-z0-9.\-]+";
  $pattern .= "[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+";
  $pattern .= "|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\".,<>?«»“”‘’]))/";
  $text = preg_replace_callback($pattern, function ($matches) {
    if (!empty($matches)) {
      $find = 'goo.gl';
      $pos = stripos($matches[0], $find);
      if ($pos === FALSE) {
        $short_url = shorten_urls_in_comment_response($matches[0]);
        $new_link = '<a href=' . $short_url . ' target=_blank> ' . $short_url . '</a>';
      }
      else {
        $new_link = $matches[0];
      }
      return $new_link;
    }
    else {
      return FALSE;
    }
  }, $comment);
  $body['0']['value'] = $text;
  $form_state->setValue('comment_body', $body);
}

/**
 * Generate shorten URLs from Google Shorten API.
 *
 * @param string $longUrl
 *   The long URLs.
 *
 * @return mixed
 *   Shorten URLS.
 */
function shorten_urls_in_comment_response($longUrl) {
  $config = \Drupal::configFactory()->getEditable('shorten.settings');
  $google_api_key = $config->get('google_api_key');
  if (!empty($google_api_key)) {
    $curl_connection = curl_init(
      sprintf('%s/url?key=%s', 'https://www.googleapis.com/urlshortener/v1', $google_api_key)
    );
    curl_setopt($curl_connection, CURLOPT_RETURNTRANSFER, TRUE);
    $requestData = array(
      'longUrl' => $longUrl,
    );
    curl_setopt($curl_connection, CURLOPT_POST, TRUE);
    curl_setopt($curl_connection, CURLOPT_HTTPHEADER, array('Content-type: application/json'));
    curl_setopt($curl_connection, CURLOPT_POSTFIELDS, json_encode($requestData));
    $data = curl_exec($curl_connection);
    curl_close($curl_connection);
    $response = json_decode($data, TRUE);
    return $response['id'];
  }
  else {
    return FALSE;
  }
}
