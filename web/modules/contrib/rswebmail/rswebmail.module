<?php

/**
 * @file
 * Drupal hooks and uses nusoap for Rackspace Webmail API integration.
 *
 * This module integrates with rackspace webmail and provides
 * a single sign-on for users.
 */

define('RSWEBMAIL_ADMIN_WSDL_PATH', 'https://admin.webmail.us/mailaccounts/mailaccounts.wsdl');
define('RSWEBMAIL_WSDL_PATH', 'https://email.rackspace.com/mail6/ext/soap/soap_server.php?wsdl');
use Drupal\Core\Url;


/**
 * Implements hook_help().
 */
function rswebmail_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.rswebmail':

      return '<pre>' . file_get_contents(dirname(__FILE__) . '/README.txt') . '</pre>';
  }
}

/**
 * Function to fetch the rackspace webmail information from db.
 */
function rswebmail_details() {
  $result = db_select('rswebmail_config', 'rs')
          ->fields('rs', array(
          'org_name',
          'host_name',
          'rs_uname',
          'rs_pass',
          ))
          ->execute()
          ->fetch();

  return $result;
}

/**
 * Define rackspace webmail block content.
 *
 * Function to call rackspace webmail api to show new messages count
 * and render webmail.
 */
function rswebmail_block_content() {
  $library_exist = rswebmail_nusoap_library_exists();
  if ($library_exist) {
    // Load the current user.
    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $user_name = $user->get('name')->value;
    global $base_url;
    $rsweb = rswebmail_details();
    $logged_in = \Drupal::currentUser()->isAuthenticated();
    if (!empty($rsweb)) {
      if ($logged_in) {
        if (rswebmail_check_user_exists($user_name) == 1) {
          $client = new nusoap_client(RSWEBMAIL_WSDL_PATH, array('trace' => TRUE, 'exceptions' => TRUE));
          $num_messages_response = $client->Call('GetUserNumMessages', array(
          'ResellerUsername' => $rsweb->rs_uname,
          'ResellerPassword' => $rsweb->rs_pass,
          'HostName' => $rsweb->host_name,
          'UserID' => $user_name,
          )
          );

          if ($client->fault) {
            drupal_set_message(t('Could not get the number of messages, error: @fault. Response: @new_messages.', array(
              '@fault' => $client->fault,
              '@new_messages' => $num_messages_response,
            )));
            return array(
              '#type' => 'markup',
              '#markup' => t(''),
            );
          }
          $email = $user_name . '@' . $rsweb->host_name;
          $res1 = $client->call('LoginUserWebmail', array(
            'ResellerUsername' => $rsweb->rs_uname,
            'ResellerPassword' => $rsweb->rs_pass,
            'HostName' => $rsweb->host_name,
            'UserID' => $user_name,
            )
          );

          if ($client->fault) {
            drupal_set_message(t('Could not get the number of messages, error: @fault', array(
              '@fault' => $client->fault,
            )));

	    return array(
              '#type' => 'markup',
              '#markup' => t(''),
            );
	  }
          $src = 'https://secure.webmail.us/mail/src/redirect.php?user_name=' . $email . '&emailaddress=' . $email . '&sessionID=' . $res1['SessionID'];
          if ($num_messages_response['NewMessages'] != 0 && $num_messages_response['NewMessages'] != '') {
            $message_count = t('<strong>@total_mail</strong> New emails in <a href="@inbox_url" target="_blank">inbox</a>.', array(
              '@total_mail' => $num_messages_response['NewMessages'],
              '@inbox_url' => $src,
            ));
          }
          else {
            $message_count = t('No unread emails in <a href="@inbox_url" target="_blank">inbox</a>.', array(
              '@inbox_url' => $src,
            ));
          }
          $img_path = $base_url . '/' . drupal_get_path('module', 'rswebmail') . '/images/icon-mail.png';

          return array(
            'email_count' => array(
              '#markup' => '<table><tr><td class="mail_icon"><img src="' . $img_path . '" /></td><td class="email_message"><span>' . $message_count . '</span></td></tr></table>',
              '#prefix' => '<p class="email_message">',
              '#suffix' => '</p>',
            ),
          );
        }
        else {
          return array(
            'no_email_user' => array(
              '#markup' => t('Email user does not exist.'),
              '#prefix' => '<p class="email_message">',
              '#suffix' => '</p>',
            ),
          );
        }
      }
    }
    else {
      drupal_set_message(t('Rackspace webmail information is not properly inserted. Enter the information  <a href=":url">here</a> .', [':url' => Url::fromRoute('rswebmail.settings')->toString()]), 'warning');
      return array(
        '#type' => 'markup',
        '#markup' => t(''),
      );
    }
  }
  else {
    return array(
        '#type' => 'markup',
        '#markup' => t(''),
    );
  }
}

/**
 * Implements hook_user_insert().
 */
function rswebmail_user_insert($account) {
  $userName = $account->getUsername();
  $library_exist = rswebmail_nusoap_library_exists();
  if ($library_exist) {
    $client = new nusoap_client(RSWEBMAIL_ADMIN_WSDL_PATH, array('trace' => TRUE, 'exceptions' => TRUE));
    $rsweb = rswebmail_details();
    if (!empty($rsweb)) {
      if (rswebmail_check_user_exists($userName, $client) == 0) {
        $name = array();
        if (stripos($userName, ".")) {
          $name = explode('.', $userName);
        }
        elseif (stripos($userName, " ")) {
          $name = explode(' ', $userName);
        }
        elseif (stripos($userName, "_")) {
          $name = explode('_', $userName);
        }
        elseif (stripos($userName, "-")) {
          $name = explode('-', $userName);
        }
        else {
          $name[0] = $userName;
          $name[1] = $userName;
        }
        $client->Call('AddUser', array(
          'ResellerUsername' => $rsweb->rs_uname,
          'ResellerPassword' => $rsweb->rs_pass,
          'HostName' => $rsweb->host_name,
          'UserID' => $userName,
          'Password' => $account->getPassword(),
          'SetActive' => '1',
          'FirstName' => $name[0],
          'LastName' => $name[1],
          'StreetAddress' => '',
          'City' => '',
          'State' => '',
          'Country' => '',
          'PostalCode' => '',
          'Telephone' => '',
          'Organization' => $rsweb->org_name,
          'Department' => '',
          )
        );
      }
    }
  }
}

/**
 * Implements hook_user_update().
 */
function rswebmail_user_update($account) {
  $library_exist = rswebmail_nusoap_library_exists();
  $userName = $account->getUsername();
  if ($library_exist) {
    $rsweb = rswebmail_details();
    if (!empty($rsweb)) {
      // This also explains why we get the names from $account below.
      if (!empty($account->getPassword())) {
        $client = new nusoap_client(RSWEBMAIL_ADMIN_WSDL_PATH, array('trace' => TRUE, 'exceptions' => TRUE));
        $name = array();
        if (stripos($userName, ".")) {
          $name = explode('.', $userName);
        }
        elseif (stripos($userName, " ")) {
          $name = explode(' ', $userName);
        }
        elseif (stripos($userName, "_")) {
          $name = explode('_', $userName);
        }
        elseif (stripos($userName, "-")) {
          $name = explode('-', $userName);
        }
        else {
          $name[0] = $userName;
          $name[1] = $userName;
        }
        if (rswebmail_check_user_exists($userName, $client) == 1) {
          $client->Call('ModifyUser', array(
            'ResellerUsername' => $rsweb->rs_uname,
            'ResellerPassword' => $rsweb->rs_pass,
            'HostName' => $rsweb->host_name,
            'UserID' => $userName,
            'Password' => $account->getPassword(),
            'SetActive' => '1',
            'FirstName' => $name[0],
            'LastName' => $name[1],
            'StreetAddress' => '',
            'City' => '',
            'State' => '',
            'Country' => '',
            'PostalCode' => '',
            'Telephone' => '',
            'Organization' => $rsweb->org_name,
            'Department' => '',
            )
          );
        }
        else {
          $client->Call('AddUser', array(
            'ResellerUsername' => $rsweb->rs_uname,
            'ResellerPassword' => $rsweb->rs_pass,
            'HostName' => $rsweb->host_name,
            'UserID' => $userName,
            'Password' => $account->getPassword(),
            'SetActive' => '1',
            'FirstName' => $name[0],
            'LastName' => $name[1],
            'StreetAddress' => '',
            'City' => '',
            'State' => '',
            'Country' => '',
            'PostalCode' => '',
            'Telephone' => '',
            'Organization' => $rsweb->org_name,
            'Department' => '',
            )
          );
        }
      }
    }
  }
}

/**
 * Function to check user exists and return client details in $res.
 */
function rswebmail_check_user_exists($name, $client = NULL) {
  $rsweb = rswebmail_details();
  if (!is_a($client, 'nusoap_client')) {
    $client = new nusoap_client(RSWEBMAIL_ADMIN_WSDL_PATH, array('trace' => TRUE, 'exceptions' => TRUE));
  }
  $res = $client->call('CheckUserExists', array(
    'ResellerUsername' => $rsweb->rs_uname,
    'ResellerPassword' => $rsweb->rs_pass,
    'HostName' => $rsweb->host_name,
    'UserID' => $name,
    )
  );

  return $res;
}

/**
 * Function to check nusoap library exists and Get nusoap.php file.
 */
function rswebmail_nusoap_library_exists() {
  $path = FALSE;
  // Add libraries supported path.
  $path = function_exists('libraries_get_path') ? libraries_get_path('rswebmail_nusoap') : 'libraries/rswebmail_nusoap';
  if (!empty($path) && file_exists($path . '/lib/nusoap.php')) {
    include_once $path . '/lib/nusoap.php';
  }
  else {
    drupal_set_message(t("NuSOAP library for Rackspace webmail integration is not properly installed. For details check the 'Requirements' section of README.txt."), 'warning');
    $path = FALSE;
  }
  return $path;
}
