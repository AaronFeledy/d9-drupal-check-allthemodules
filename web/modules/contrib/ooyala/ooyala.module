<?php

/**
 * @file
 * Ooyala module provides integration with the Ooyala video service.
 *
 * Ooyala integrates with to provide a field, widget, and formatters to
 * upload video directly to the Ooyala service and display it.
 */

use Drupal\ooyala\OoyalaManager;

/**
 * Implements hook_theme().
 */
function ooyala_theme() {
  return [
    // Implement a fancy textarea element that can capture and validate
    // JSON or JS object literal notation
    'ooyala_json_textarea' => [
      'render element' => 'element',
      'function' => 'theme_ooyala_json_textarea',
      'variables' => [
        'name' => NULL,
        'title' => NULL,
        'rows' => NULL,
        'default_value' => NULL,
        'placeholder' => NULL,
        'description' => NULL,
        'children' => NULL,
        'states' => NULL,
      ],
    ],
    'ooyala_player' => [
      'variables' => [
        'embed_code' => NULL,
        'container_id' => NULL,
        'params' => NULL,
      ],
    ],
  ];
}

/**
 * Theme function to output the Ooyala JSON textarea input
 */
function theme_ooyala_json_textarea($vars) {
  $name = $vars['name'];

  $element = [
    $name => [
      '#type' => 'hidden',
      '#name' => $name,
      '#attributes' => ['data-for' => $name . '_raw'],
      '#value' => $vars['default_value'],
    ],
    $name . '_raw' => [
      '#attributes' => [
        'class' => ['ooyala-json-input'],
        'placeholder' => t('Key/value pairs in JSON or JavaScript object literal notation'),
      ],
      '#title' => $vars['title'],
      '#type' => 'textarea',
      '#rows' => $vars['rows'],
      '#description' => $vars['description'],
      '#default_value' => $vars['default_value'],
      '#value' => $vars['default_value'],
      '#states' => $vars['states'],
      '#name' => $name . '_raw',
      '#id' => $name,
    ],
  ];

  return drupal_render($element);
}

/**
 * Theme function to output an Ooyala video player.
 */
function theme_ooyala_player($variables) {
  \Drupal::getContainer()->get('ooyala.ooyala_manager')->render($variables);
}

/**
 * Implements hook_library_info_alter().
 */
function ooyala_library_info_alter(&$libraries, $extension) {
  if ($extension !== 'ooyala') {
    return;
  }

  \Drupal::getContainer()->get('ooyala.ooyala_manager')->alterLibraries($libraries);
}
