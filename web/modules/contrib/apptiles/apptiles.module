<?php

/**
 * @file
 * Application Tiles.
 */

const APPTILES_MODULE_NAME = 'apptiles';
const APPTILES_BROWSERCONFIG = 'public://browserconfig.xml';
const APPTILES_IMAGE_EXTENSION = 'png';

/**
 * Get "apptiles" service.
 *
 * @return \Drupal\apptiles\ApplicationTiles\ManagerInterface
 *   Application tiles manager.
 */
function apptiles() {
  return \Drupal::service(__FUNCTION__);
}

/**
 * Implements hook_page_attachments().
 *
 * @internal
 */
function apptiles_page_attachments(array &$attachments) {
  $apptiles = apptiles();

  $metatag = function ($name, $content) use (&$attachments) {
    $attachments['#attached']['html_head'][] = [
      [
        '#tag' => 'meta',
        '#attributes' => [
          'name' => $name,
          'content' => $content,
        ],
      ],
      $name,
    ];
  };

  $link = function ($rel, $href, array $attributes = []) use (&$attachments) {
    $attachments['#attached']['html_head'][] = [
      [
        '#tag' => 'link',
        '#attributes' => $attributes + [
          'rel' => $rel,
          'href' => file_url_transform_relative($href),
        ],
      ],
      "$rel-$href",
    ];
  };

  if ($apptiles->isAvailable()) {
    $tiles = $apptiles->getUrls();

    $metatag('application-name', \Drupal::config('system.site')->get('name'));
    $metatag('mobile-web-app-capable', 'yes');

    if (file_exists(APPTILES_BROWSERCONFIG)) {
      $metatag('msapplication-config', file_url_transform_relative(file_create_url(APPTILES_BROWSERCONFIG)));
    }

    /* @see https://developer.chrome.com/multidevice/android/installtohomescreen */
    foreach ($tiles['android'] as $dimension => $file) {
      $link('icon', $file, [
        'type' => 'image/png',
        'sizes' => $dimension,
      ]);
    }

    /* @link https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html */
    foreach ($tiles['ios'] as $dimension => $file) {
      $link('apple-touch-icon', $file, [
        'sizes' => $dimension,
      ]);
    }
  }
}

/**
 * Implements hook_cache_flush().
 *
 * @internal
 */
function apptiles_cache_flush() {
  $apptiles = apptiles();
  $tiles = $apptiles->getUrls();

  if (!empty($tiles['windows'])) {
    $browserconfig = simplexml_load_file(drupal_get_path('module', APPTILES_MODULE_NAME) . '/' . basename(APPTILES_BROWSERCONFIG));
    $msapplication = $apptiles->getSetting('msapplication', [
      'tile' => [],
      'notification' => [],
    ]);

    /* @link https://msdn.microsoft.com/en-us/library/dn455106(v=vs.85).aspx */
    foreach ($tiles['windows'] as $dimension => $file) {
      list($width, $height) = explode('x', $dimension);

      $msapplication['tile'][($width > $height ? 'wide' : 'square') . $dimension . 'logo'] = [
        'src' => $file,
      ];
    }

    foreach ($msapplication as $group => $elements) {
      if (!empty($elements)) {
        $browserconfig->msapplication->addChild($group);

        foreach ($elements as $element => $data) {
          $value = is_array($data) ? NULL : $data;
          $browserconfig->msapplication->{$group}->addChild($element, $value);

          if (NULL === $value) {
            foreach ($data as $attribute => $value) {
              $browserconfig->msapplication->{$group}->{$element}->addAttribute($attribute, $value);
            }
          }
        }
      }
    }

    $browserconfig->saveXML(APPTILES_BROWSERCONFIG);
  }
}

/**
 * Implements hook_form_system_theme_settings_alter().
 *
 * @internal
 */
function apptiles_form_system_theme_settings_alter(array &$form) {
  if ('theme_settings' === $form['var']['#value']) {
    $form[APPTILES_MODULE_NAME] = [
      '#tree' => TRUE,
      '#open' => TRUE,
      '#type' => 'details',
      '#title' => t('Application tiles'),
    ];

    $form[APPTILES_MODULE_NAME]['allowed_for_admin_theme'] = [
      '#type' => 'checkbox',
      '#title' => t('Use for administrative UI?'),
      '#description' => t('Use existing tiles on administrative pages.'),
      '#default_value' => apptiles()->getSetting('allowed_for_admin_theme', FALSE),
    ];
  }
}
