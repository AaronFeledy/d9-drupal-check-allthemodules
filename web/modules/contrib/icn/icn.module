<?php

/**
 * @file
 * Contains icn.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\ContentEntityTypeInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_theme().
 */
function icn_theme() {
  return [
    'icn_item' => [
          'variables' =>[
                 'value' => 'null', 
                 'anchor' => 'null',
                 'hide' => '',
          ]
    ],
    'icn_nav' => [],
  ];
}

/**
 * Implements hook_form_alter() on behalf of icn.module.
 */
function icn_form_alter(&$form, FormStateInterface $form_state, $form_id){
    
    // Generate all interceptable formids
    $form_ids = get_possible_icn_formids();
  
    if (in_array($form_id, array_keys($form_ids))) {
       
       $data = $form_ids[$form_id];
       
       $default_config = \Drupal::config('icn.bundles')->get($data['entity_type']);
       $current_bundle = $form[$data['bundle_key']]['#default_value'];
   
       $default_show = (isset($default_config[$current_bundle]['show'])) ? $default_config[$current_bundle]['show'] : NULL ;
       $default_sticky = (isset($default_config[$current_bundle]['sticky'])) ? $default_config[$current_bundle]['sticky'] : NULL ;
       
       $form['icn'] = [
           "#type" => 'details',
           "#title" => 'In Content Navigation',
           "#group" => 'additional_settings'
       ];
       
       $form['icn']['icn_show'] = [
            '#type' => 'checkbox',
            '#title' => t('Show Content Navigation'),
            '#description' => t('If bundle or rendered entities inside ( like paragraphs ) use icn_formater, show a In Content Navigation menu on default view mode'),
            '#default_value' => $default_show,
            ];
       
        $form['icn']['icn_sticky'] = [
            '#type' => 'checkbox',
            '#title' => t('In Content Navigation should be sticky'),
            '#default_value' => $default_sticky,
            '#description' => t('Note : The sticky effect are only on anonymous navigation (searching for JS-Drupal expert)'),
            '#states' => array(
                'visible' => array(
                    ':input[name="icn_show"]' => array('checked' => TRUE),
                    ),
                ),
            ];
        
        // Transmit data to custom submit
        $form['icn']['icn_entity_type'] = [
            '#type' => 'hidden',
            '#value' => $data['entity_type']
        ];
        $form['icn']['icn_bundle_key'] = [
            '#type' => 'hidden',
            '#value' => $data['bundle_key']
        ];
        $form['actions']['submit']['#submit'][] = 'icn_form_alter_submit';
    }
}

/**
 * Save Icn data
 */
function icn_form_alter_submit(&$form, FormStateInterface $form_state) {
    $icn_show = $form_state->getValue('icn_show');
    $icn_sticky = $form_state->getValue('icn_sticky');
    $entity_type = $form_state->getValue('icn_entity_type');
    $bundle_key = $form_state->getValue('icn_bundle_key');
    $config = \Drupal::service('config.factory')->getEditable('icn.bundles');
    
    // Get bundle key
    $bundle = $form_state->getValue($bundle_key);
  
    // Save data
    $data = $config->get($entity_type);
    $data[$bundle] = ['show' => $icn_show, 'sticky' => $icn_sticky];
    $config->set($entity_type, $data)->save();   
}

/**
 * Generate all possible form_ids and extract entity information 
 */
function get_possible_icn_formids() {
    $output = [];
    
    // Get all entity Types
    $entity_types = \Drupal::entityTypeManager()->getDefinitions();
    foreach($entity_types as $entity_type => $entity_data) {
        // Work only on Content Entities
        if(!($entity_data instanceof ContentEntityTypeInterface)) {
            continue;
        }
        
        // Work only with bundleable entities
        $bundle_entity_type = $entity_data->get('bundle_entity_type');
        if($bundle_entity_type === NULL) {
            continue;
        }
      
        $entity_bundle_key = $entity_data->get('entity_keys')['bundle'];
        $output[$bundle_entity_type . '_edit_form'] = [
              'entity_type' => $entity_type,
              'bundle_key' => $entity_bundle_key,
        ];
    }
 
  return $output;
}

/**
 * Inject the In Content Navigation JS and tpl
 */
function icn_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {

    if($display->getMode() != "default" && $display->getMode() != "full") {
        // Only in default / full mode
        return;
    }
    
    $config = \Drupal::config('icn.bundles');    
    $entity_type = $entity->getEntityTypeId();
    $entity_type_config = $config->get($entity_type, NULL);
    
    if(!is_array($entity_type_config)) {
        // No ICN set for this entity type
        return;
    }
    
    $bundle = $entity->bundle();
    if(!isset($entity_type_config[$bundle]) || $entity_type_config[$bundle]['show'] != 1) {
        // No ICN if not set
        return;
    }

    // Print ICN
    $build['icn']['#theme'] = 'icn_nav';
    $build['icn']['#attached']['drupalSettings']['icn']['default'] = \Drupal::config('icn.default')->get('default');
    $build['icn']['#attached']['drupalSettings']['icn']['sticky'] = $entity_type_config[$bundle]['sticky'];
    $build['icn']['#attached']['library'][] = 'icn/navigation';
}
