<?php
/**
 * @file
 * This module holds functions useful for Drupal form theming.
 */

use Drupal\Component\Utility\UrlHelper;
use Drupal\Core\Render\Element;

/**
 * Implements hook_theme.
 */
function whippy_forms_theme($existing, $type, $theme, $path) {

  // Meta theme for all site forms.
  $hooks['whippy_forms'] = [
    'render element' => 'element',
  ];

  return $hooks;
}

/**
 * Implements hook_form_alter().
 */
function whippy_forms_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (!is_array($form['#theme'])) {
    $form['#theme'] = [$form['#theme']];
  }

  array_unshift($form['#theme'], 'whippy_forms');
}

/**
 * Preprocess whippy_form, threat forms like entities.
 */
function whippy_forms_preprocess_whippy_forms(&$variables) {

  $element = &$variables['element'];
  if (isset($element['#action'])) {
    $element['#attributes']['action'] = UrlHelper::stripDangerousProtocols($element['#action']);
  }
  Element::setAttributes($element, ['method', 'id']);
  if (empty($element['#attributes']['accept-charset'])) {
    $element['#attributes']['accept-charset'] = "UTF-8";
  }

  $variables['attributes'] = $element['#attributes'];
  $variables['children'] = $element;

  // Check if we need to react on this form.
  $available_themes = _whippy_forms_is_enabled();

  foreach ($available_themes as $theme_name) {
    // Run specific preprocess function.
    if ($theme_name) {
      $preprocess = $theme_name . '_preprocess_form__' . $element['#form_id'];
      if (function_exists($preprocess)) {
        $preprocess($variables);
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function whippy_forms_theme_suggestions_whippy_forms_alter(array &$suggestions, array $variables) {
  // Check if we need to react on this form.
  $available_themes = _whippy_forms_is_enabled();
  $form_id = $variables['element']['#form_id'];

  // Add common and specific hook suggestion.
  $suggestions[] = 'whippy_forms__' . $form_id;
  foreach ($available_themes as $theme_name) {
    if ($theme_name) {
      $suggestions[] = 'whippy_forms__' . $theme_name . '__' . $form_id;
    }
  }
}

/**
 * Helper function to get available themes for preprocess,
 */
function _whippy_forms_is_enabled() {

  // Get list of available themes.
  $config = \Drupal::config('whippy_forms.settings');
  $available_themes = $config->get('available_themes') ? $config->get('available_themes') : [];

  return $available_themes;
}

/**
 * Implements hook_entity_type_build.
 */
function whippy_forms_entity_type_build(array &$entity_types) {
  /** @var \Drupal\Core\Entity\EntityDisplayRepository[] $display_modes_list */
  $form_modes = \Drupal::service('entity_display.repository')->getAllFormModes();
  foreach ($form_modes as $entity_type => $display_modes) {

    /* @var \Drupal\Core\Entity\EntityTypeInterface $entity */
    $entity = $entity_types[$entity_type];
    foreach ($display_modes as $machine_name => $form_display) {
      if ($machine_name != 'register') {

        // Get the correct canonical path to add operation.
        $default_handler_class = $entity->getHandlerClasses()['form']['default'];
        $entity->setFormClass($machine_name, $default_handler_class);
      }
    }
  }
}

