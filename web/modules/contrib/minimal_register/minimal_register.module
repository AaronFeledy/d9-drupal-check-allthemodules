<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function minimal_register_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  //set Name field description and title
  $form['name']['#description'] = t('Use your email address to login');
  $form['name']['#title'] = t('Email');
  array_unshift($form['#validate'], 'minimal_register_validation');
}

/**
 * Custom validate function to enable email address login.
 */
function minimal_register_validation($form, FormStateInterface &$form_state) {
  $mail = $form_state->getValue('name');
  if (!empty($mail)) {
    if ($user = user_load_by_mail($mail)) {
      //Load user by mail, and set account name to form state
      $form_state->setValue('name', $user->getAccountName());
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function minimal_register_form_user_register_form_alter(&$form, FormStateInterface $form_state) {
  // Hide name field, and set default_value for name field
  $form['account']['name']['#default_value'] = 'simple_login_' . user_password();
  $form["account"]["name"]["#access"] = false;
}


/**
 * Implements hook_ENTITY_TYPE_insert().
 *
 * Alter the user name (after entity being stored).
 */
function minimal_register_user_insert(UserInterface $account) {
  //Get user name
  $name = $account->getAccountName();

  //If name does not contain simple_login as part of the string, return
  if (!empty($name) && strpos($name, 'simple_login_') !== 0) {
    //TODO TBD What to do in this case
    return;
  }

  // Replace @ in account getEmail
  $new_name = _minimal_register_get_new_name($account);
  // Set the username with the new value
  $account->setUsername($new_name);
  $account->save();
}


/**
 * Generating a new user name from account email by replacing
 * "@" char to ".", and adding account id at the end
 * @param \Drupal\user\UserInterface $account
 *
 * @return string, generated name
 */
function _minimal_register_get_new_name(UserInterface $account) {
  $name = str_replace("@", '.', $account->getEmail());
  //Adding user id as part of the name
  $name .= '.' . $account->id();
  return $name;
}


/**
 * Only display welcome block to authenticated users
 * Implements hook_block_view_alter().
 */
function minimal_register_block_view_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block)
{
  if ($build["#id"] == "welcomeblock") {
    $route_name = \Drupal::routeMatch()->getRouteName();
    $current_user = \Drupal::currentUser();
    $user_roles = $current_user->getRoles();
    //Do not display welcome block if it's admin, anonymous or different role from authenticated
    if ($route_name != "entity.user.canonical"
      || $current_user->isAnonymous()
      || $current_user->id() == 1
      || sizeof($user_roles) > 1){
      $build = array();
    }
    #Disabling cache-block
    $build['#cache'] = [
      'max-age' => 0,
    ];
  }
}