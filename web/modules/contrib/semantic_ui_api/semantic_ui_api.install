<?php

/**
 * @file
 * Requirements page for Semantic UI
 */

/**
 * Implements hook_requirements().
 */
function semantic_ui_api_requirements($phase) {
  $requirements = array();

  // Report the version of Font Awesome.
  if ($phase == 'runtime') {
    if(\Drupal::config('semantic_ui.settings')->get('semantic_ui_api_use_cdn')) {
      $requirements['semantic_ui']['severity'] = REQUIREMENT_OK;
      $requirements['semantic_ui']['value'] = t('Using CDN version: ') . SEMANTIC_UI_CDN_URL;
    } else if(function_exists('libraries_detect')) {
      // Make sure Libraries is loaded before loading Font Awesome.
      $semantic_ui = libraries_detect('semantic_ui');

      $requirements['semantic_ui'] = array(
        'title' => $semantic_ui['name'],
      );
      $requirements['semantic_ui']['severity'] = $semantic_ui['installed'] ? REQUIREMENT_OK : REQUIREMENT_WARNING;
      $requirements['semantic_ui']['value'] = $semantic_ui['installed'] ? $semantic_ui['version'] : $semantic_ui['error message'];
    }
  }

  return $requirements;
}

/**
* Implementation of hook_install
*
*/
function semantic_ui_api_uninstall(){
  // Delete set variables.
  db_query("DELETE FROM {variable} WHERE name like 'semantic_ui_%'");
  
  //Icon API module : Delete semantic_ui icon bundle & clear cache
  if(\Drupal::moduleHandler()->moduleExists('icon') && ($cache = \Drupal::cache()->get('icon_bundles')) && !empty($cache->data)){
    $fa_icon_bundle = isset($cache->data['semantic_ui']) ? $cache->data['semantic_ui'] : array();
    $fa_icon_bundle['path'] = isset($fa_icon_bundle['path']) ? $fa_icon_bundle['path'] : 'semantic_ui';
    icon_bundle_delete($fa_icon_bundle);
  }
}

/**
* Update the semantic_ui module from 1.x to 2.x version
*/
function semantic_ui_api_update_7001(&$sandbox) {
  registry_rebuild();
}