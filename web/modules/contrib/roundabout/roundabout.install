<?php

/**
 * @file
 * Installation actions for Roundabout.
 */

/**
 * Implements hook_requirements().
 */
function roundabout_requirements($phase) {
  $requirements = [];
  // Check to see if the roundabout library is available.
  if ($phase == 'runtime') {
    $library = libraries_detect('roundabout');
    if ($library && !empty($library['installed'])) {
      if ($library['version']) {
        $description = t('Version %i installed', ['%i' => $library['version']]);
      }
      else {
        $description = t('Unable to detect version.');
      }
      $requirements['roundabout'] = [
        'title' => t('Roundabout'),
        'description' => $description,
        'severity' => REQUIREMENT_OK,
      ];
    }
    else {
      $requirements['roundabout'] = [
        'title' => t('Roundabout'),
        'description' => t('Roundabout library not found. Please consult the README.md for installation instructions.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
    $library = libraries_detect('easing');
    if ($library && !empty($library['installed'])) {
      if ($library['version']) {
        $description = t('Library installed');
      }
      else {
        $description = t('Unable to detect version.');
      }
      $requirements['easing'] = [
        'title' => t('Easing'),
        'description' => $description,
        'severity' => REQUIREMENT_OK,
      ];
    }
    else {
      $requirements['easing'] = [
        'title' => t('Easing'),
        'description' => t('Easing library not found. Please consult the README.md for installation instructions.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }
  return $requirements;
}
