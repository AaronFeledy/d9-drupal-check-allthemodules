<?php

/**
 * @file
 * User need to pay first than only they would be able to login to the system.
 *
 * This module enables registering users with stripe payment gateway.
 */
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function register_user_with_stripe_payment_help($route_name, RouteMatchInterface $route_match) {
  $output = '';
  switch ($route_name) {
    case 'help.page.register_user_with_stripe_payment':
      $stripe_configuration_page = \Drupal::url('register_user_with_stripe_payment.config_form');
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("By using this module, the user, trying to register to the application has to
      pay first to the administrator by using stripe payment gateway. After successful payment they will be
      considered as valid user to the application.") . '</p>';
      $output .= '<dt>' . t('<a href=":configuration_page_link">Stripe payment configuration page</a>', array(':configuration_page_link' => $stripe_configuration_page)) . '</dt>';
  }
  return $output;
}

/**
 * Implements hook_permission().
 */
function register_user_with_stripe_payment_permission() {
  return array(
    'administer register payment api' => array(
      'title' => t('Administer Payment API'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function register_user_with_stripe_payment_theme($existing, $type, $theme, $path) {
  return array(
    'register_user_with_stripe_payment_charge_form' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function register_user_with_stripe_payment_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['submit']['#submit'][] = 'register_user_with_stripe_payment_submit';
}

/**
 * Submit handler for user register form.
 */
function register_user_with_stripe_payment_submit($form, FormStateInterface $form_state) {
  $values = $form_state->getValues();
  $user_id = $values['uid'];
  $user = \Drupal::entityManager()->getStorage('user')->load($user_id);
  $user->status = 0;
  $user->save();

  $message = $_SESSION['messages']['status'][0];
  if ($message instanceof \Drupal\Component\Render\MarkupInterface) {
    if ((string) $message == (string) t("Registration successful. You are now logged in.")) {
      unset($_SESSION['messages']['status']);
    }
  }
  $form_state->setRedirect('register_user_with_stripe_payment.start', ['uid' => $user->id()], ['absolute' => TRUE]);
}
