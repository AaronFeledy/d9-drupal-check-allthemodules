<?php

/**
 * @file
 * Module file for domain_login_filter.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function domain_login_filter_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['user_login_form', 'user_pass'])) {
    $new_validate = [];
    foreach ($form['#validate'] as $source_id => $value) {
      $new_validate[] = $value;
      if ($source_id == 0) {
        $new_validate[] = '_domain_login_filter_domain_check';
      }
    }
    $form['#validate'] = $new_validate;
  }
}

/**
 * Form validator.
 *
 * @param array $form
 *   Form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 */
function _domain_login_filter_domain_check(array &$form, FormStateInterface $form_state) {
  $name = $form_state->getValue('name');
  $user = user_load_by_name($name);

  if (!$user) {
    $user = user_load_by_mail($name);
  }

  if (!$user) {
    return;
  }

  if ($user->id() == 1) {
    return;
  }

  $domainAccessManager = \Drupal::service('domain_access.manager');
  $available_domains = $domainAccessManager->getAccessValues($user);
  $active_domain = \Drupal::service('domain.negotiator')->getActiveDomain()->getDomainId();

  if (array_search($active_domain, $available_domains, TRUE) === FALSE) {
    $form_state->setErrorByName('name', t('The username %name has not been activated or is blocked on this domain.', ['%name' => $form_state->getValue('name')]));
  }
}
