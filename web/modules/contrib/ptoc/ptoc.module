<?php

/**
 * @file
 * Hook implementations for the ptoc module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function ptoc_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ptoc module.
    case 'help.page.ptoc':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Use the ptoc view mode to create an in-page table of contents.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Add an id attribute to each paragraph's default view mode so that you can
 * link to it from the table of contents.
 */
function ptoc_preprocess_paragraph(&$variables) {
  if ('default' == $variables['elements']['#view_mode']) {
    $variables['attributes']['id'] = 'paragraph-' . $variables['paragraph']->id();
  }
  if (Drupal::config('ptoc.settings')->get('debug')) {
    $variables['attributes']['class'][] = 'ptoc-debug';
    $variables['#attached']['library'][] = 'ptoc/ptoc-debug';
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Use our Twig template for paragraphs in the table of contents.
 */
function ptoc_theme_suggestions_paragraph(array $variables) {
  $suggestions = [];
  if ('ptoc' == $variables['elements']['#view_mode']) {
    $suggestions[] = 'ptoc_paragraph';
  }

  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Use our Twig template for the ptoc node view.
 */
function ptoc_theme_suggestions_node(array $variables) {
  $suggestions = [];
  if ('ptoc' == $variables['elements']['#view_mode']) {
    $suggestions[] = 'ptoc_node';
  }

  return $suggestions;
}

/**
 * Implements hook_theme().
 *
 * Create a theme hook for our ToC paragraph template.
 */
function ptoc_theme() {
  $items = [];

  $items['ptoc_paragraph'] = [
    'base hook' => 'paragraph',
  ];

  $items['ptoc_node'] = [
    'base hook' => 'node',
  ];

  return $items;
}

/**
 * Implements template_preprocess_HOOK().
 *
 * Call default preprocess function.
 * According to the docs on hook_theme(), this should not be needed.
 */
function template_preprocess_ptoc_paragraph(&$variables) {
  template_preprocess_paragraph($variables);
}

/**
 * Implements template_preprocess_HOOK().
 *
 * Call default preprocess function.
 * According to the docs on hook_theme(), this should not be needed.
 */
function template_preprocess_ptoc_node(&$variables) {
  template_preprocess_node($variables);
}
