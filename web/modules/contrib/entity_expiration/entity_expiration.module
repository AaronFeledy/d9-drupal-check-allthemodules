<?php
/**
 * @file
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\entity_expiration\Entity\EntityExpirationPolicy;

/**
 * Implements hook_help().
 */
function entity_expiration_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.entity_expiration':
      $ret = '<h2>' . t('Entity Entity Expiration') . '</h2>';
      $ret .= '<h3>' . t('Todo: Add help') . '</h3>';
      return $ret;
  }
}

/**
 * Implements hook_cron().
 */
function entity_expiration_cron() {
  $plugin_manager = \Drupal::service('plugin.manager.entity_expiration_method');
  $plugin_definitions = $plugin_manager->getDefinitions();

  // Get list of active policies
  $query = Drupal::entityQuery('entity_expiration_policy');
  $query->condition('active', '1');
  $result = array_keys($query->execute());

  $policies = EntityExpirationPolicy::loadMultiple($result);

  foreach ($policies as $policy) {
    $select_method = isset($policy->get('select_method')->getValue()[0]['value']) ? $policy->get('select_method')->getValue()[0]['value'] : '';
    $expire_method = isset($policy->get('expire_method')->getValue()[0]['value']) ? $policy->get('expire_method')->getValue()[0]['value'] : '';
    if ($select_method && $expire_method) {
      // Select the expirable entities
      $expire_list = array();
      foreach($plugin_definitions as $pd) {
        if(in_array($select_method, array_keys($pd['select_options']))) {
          $expire_list = $pd['class']::select_expiring_entities($select_method, $policy);
        }
      }
      if (!empty($expire_list)) {
        foreach($plugin_definitions as $pd) {
          if(in_array($expire_method, array_keys($pd['expire_options']))) {
            $pd['class']::expire_entities($expire_method, $expire_list);
          }
        }
      }
    }
  }
}