<?php

/**
 * @file
 * MessageBird install file.
 */

use Drupal\Core\Url;

/**
 * Implements hook_requirements().
 */
function messagebird_requirements($phase) {
  $requirements = array();

  $config = \Drupal::config('messagebird.settings');

  if ($phase == 'install') {
    return;
  }

  if (class_exists('\MessageBird\Client')) {
    $requirements['messagebird'] = array(
      'title' => t('MessageBird PHP REST API'),
      'value' => t('Installed'),
      'severity' => REQUIREMENT_OK,
    );

    if (empty($config->get('api.key'))) {
      $description = t('API key not set.');
      $requirements['messagebird']['severity'] = REQUIREMENT_ERROR;
    }
    elseif (empty($config->get('default.originator'))) {
      $description = t('Default originator not set.');
      $requirements['messagebird']['severity'] = REQUIREMENT_ERROR;
    }
    elseif ($config->get('debug.mode') == 1) {
      $description = t('Debug mode active.');
      $requirements['messagebird']['severity'] = REQUIREMENT_WARNING;
    }

    if (isset($description)) {
      $requirements['messagebird']['description'] = $description;
    }
  }
  else {
    $requirements['messagebird'] = array(
      'title' => t('MessageBird PHP REST API'),
      'value' => t('Not found'),
      'description' => t('Use <a href=":composer_manager">Composer Manager</a> or other composer package manager to download <a href=":messagebird_api">MessageBird PHP REST API</a>', array(
        ':composer_manager' => Url::fromUri('https://wwww.drupal.org/project/composer_manager')->getUri(),
        ':messagebird_api' => Url::fromUri('https://github.com/messagebird/php-rest-api')->getUri(),
      )),
      'severity' => REQUIREMENT_ERROR,
    );
  }

  if (in_array($phase, array('runtime', 'update')) && $requirements['messagebird']['severity'] != REQUIREMENT_ERROR) {

    /** @var \Drupal\messagebird\MessageBirdBalance $balance */
    $balance = \Drupal::service('messagebird.balance');

    if ($balance) {
      $requirements['messagebird_balance'] = array(
        'title' => t('MessageBird balance'),
        'value' => t('Postpaid'),
        'severity' => REQUIREMENT_OK,
      );

      if ($balance->getPayment() == 'prepaid') {
        $requirements['messagebird_balance']['value'] = t('@balance @type', array(
          '@balance' => $balance->getAmount(),
          '@type' => $balance->getType(),
        ));

        $requirements['messagebird_balance']['description'] = t('Your current MessageBird account balance.');

        if ($balance->getAmount() <= 0) {
          $requirements['messagebird_balance']['severity'] = REQUIREMENT_ERROR;
        }
        elseif ($balance->getAmount() < $config->get('credit.balance.warning')) {
          $requirements['messagebird_balance']['severity'] = REQUIREMENT_WARNING;
        }
      }
    }
  }

  return $requirements;
}
