<?php

/**
 * @file
 * Main file for hooks and custom functions.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */

/**
 * Setting default value for field "vk_authentication_redirect".
 *
 * @param array &$form
 *   Form array.
 */
function vk_authentication_form_vk_authentication_form_alter(array &$form) {
  // Getting Drupal config.
  $config = \Drupal::config('vk_authentication.admin_settings');

  if (empty($config->get('vk_authentication_redirect'))) {
    $protocol = (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off'
      || $_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";
    $absolutePath = $protocol . $_SERVER['HTTP_HOST'] . '/user/vk/login/response';
  }
  else {
    $absolutePath = $config->get('vk_authentication_redirect');
  }
  $form['vk_authentication_redirect']['#default_value'] = $absolutePath;
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function vk_authentication_help($route_name) {
  switch ($route_name) {
    case 'help.page.vk_authentication':
      $text = file_get_contents(dirname(__FILE__) . '/README.md');
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}
