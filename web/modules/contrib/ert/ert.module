<?php

/**
 * @file
 * Displays the time it will take to read content on your site.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Config\Entity\ConfigEntityType;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\node\Entity\NodeType;

/**
 * Implements hook_help().
 */
function ert_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ert':
      return t('
        <h2>Entity read time.</h2>
        <h3>Instructions</h3>
        <p>Unpack in the <em>modules</em> folder (currently in the root of your Drupal 8 installation) and enable in <strong>/admin/modules</strong>.</p>
        <h3>Attention</h3>
        <p>Please report bugs and suggestions</p>
      ');
  }
}

/**
 * Implements hook_entity_type_alter().
 *
 * Adds the Read time tab to the entity configuration page.
 */
function ert_entity_type_alter(array &$entity_types) {
  $module_handler = \Drupal::moduleHandler();
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  foreach ($entity_types as $entity_type_id => $entity_type) {
    // Support node/paragraph entity types only. @todo Add support for more content/field entites via hook.
    $supported_entity = FALSE;
    $module_name = $entity_type->getProvider();
    
    if(in_array($module_name, ['node', 'paragraphs'])){
      $supported_entity = TRUE;
    }
    
    if ($supported_entity && $entity_type instanceof ConfigEntityType && $entity_type->hasLinkTemplate('edit-form')) {
      $entity_type->setLinkTemplate('read-time', $entity_type->getLinkTemplate('edit-form') . "/read-time");
    }
  }
}

/**
 * Implements hook_entity_operation().
 */
function ert_entity_operation(EntityInterface $entity) {
  $operations = array();
  $entity_type = $entity->getEntityType();
  $entity_type_id = $entity_type->id();
  $entity_id = $entity->id();
  if ($entity->hasLinkTemplate('read-time') &&
      \Drupal::currentUser()->hasPermission('administer ' . $entity_type_id . ' read time')) {
        
        $operations['read-time'] = array(
            'title' => t('Manage entity read time'),
            'weight' => 100,
            'url' => Url::fromRoute("entity.{$entity_type_id}.read_time", array($entity_type_id => $entity_id)),
        );
      }
      
      return $operations;
}

/**
 * Implements hook_entity_extra_field_info().
 * 
 * Add read_time field to renderable entity array
 */
function ert_entity_extra_field_info() {
  $extra = [];
  $config = \Drupal::config('ert.settings');

  /* @var $bundle \Drupal\Core\Config\Entity\ConfigEntityBundleBase */
  foreach (NodeType::loadMultiple() as $bundle) {
    $entity_type_id = $bundle->getEntityType()->getBundleOf();
    $bundle_id = $bundle->id();
    if($config->get($bundle->getEntityType()->getBundleOf() . '__' . $bundle->id() . '_status')){
      $extra['node'][$bundle->id()]['display']['read_time'] = [
        'label' => t('Read time'),
        'description' => t('Read time'),
        'weight' => 0,
      ];
    }
  }
  
  return $extra;
}

/**
 * Implements hook_entity_view().
 *
 * Add read_time field to renderable entity array
 */
function ert_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('read_time')) {
    
    /* @var \Drupal\ert\ReadTimeManagerInterface $readtime_manager */
    $readtime_manager = \Drupal::service('ert.manager');
    
    $build['read_time'] = array(
        '#type' => 'markup',
        '#markup' => $readtime_manager->getReadTime($entity),
    );
  }
}