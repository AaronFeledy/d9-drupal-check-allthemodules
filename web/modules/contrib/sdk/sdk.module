<?php

/**
 * @file
 * SDK API.
 */

/**
 * Derive an instance of SDK.
 *
 * @param string $type
 *   One of SDK types.
 *
 * @return object
 *   An instance of SDK.
 */
function sdk($type) {
  return sdk_plugin_manager()->createInstance($type)->derive();
}

/**
 * Returns an instance of the "plugin.manager.sdk" service.
 *
 * @return \Drupal\sdk\SdkPluginManager
 *   Service instance.
 */
function sdk_plugin_manager() {
  return Drupal::service('plugin.manager.sdk');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function sdk_preprocess_page(array &$variables) {
  if (Drupal::currentUser()->isAuthenticated() && Drupal::service('router.admin_context')->isAdminRoute()) {
    $sdk_manager = sdk_plugin_manager();

    foreach ($sdk_manager->getDefinitions() as $type => $plugin) {
      $plugin = $sdk_manager->createInstance($type);
      $config = $plugin->getConfig();

      if (NULL === $config || !$plugin->isLoginCallbackOverridden()) {
        continue;
      }

      $expiration = $plugin->getTokenExpiration();

      if ($expiration instanceof DateTime) {
        $date_diff = date_diff($expiration, date_create(NULL, $expiration->getTimezone()));

        if ($date_diff->days < 7) {
          drupal_set_message(t('Access token for @label will be expired in @days days. Click on "@button" button <a href=":url">here</a> to renew it!', [
            ':url' => $config->url('edit-form'),
            '@days' => $date_diff->days,
            '@label' => $config->label(),
            '@button' => t('Save'),
          ]), 'warning');
        }
      }
      elseif (NULL === $expiration) {
        drupal_set_message(t('Access token is not set or expired for @label. Click on "@button" button <a href=":url">here</a> to create it!', [
          ':url' => $config->url('edit-form'),
          '@label' => $config->label(),
          '@button' => t('Save'),
        ]), 'warning');
      }
    }
  }
}
