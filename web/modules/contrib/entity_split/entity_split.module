<?php

/**
 * @file
 * The Entity split module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\ContentEntityBase;
use Drupal\entity_split\Entity\EntitySplit;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\ContentEntityFormInterface;

/**
 * Implements hook_theme().
 */
function entity_split_theme() {
  $theme = [];

  $theme['entity_split'] = [
    'render element' => 'elements',
    'file' => 'entity_split.page.inc',
    'template' => 'entity_split',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function entity_split_theme_suggestions_entity_split(array $variables) {
  $suggestions = [];
  /** @var \Drupal\Core\Entity\EntityInterface $entity */
  $entity = $variables['elements']['#entity_split'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'entity_split__' . $sanitized_view_mode;
  $suggestions[] = 'entity_split__' . $entity->bundle();
  $suggestions[] = 'entity_split__' . $entity->bundle() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Implements hook_entity_insert().
 */
function entity_split_entity_insert(EntityInterface $entity) {
  entity_split_entity_update($entity);
}

/**
 * Implements hook_entity_update().
 */
function entity_split_entity_update(EntityInterface $entity) {
  // Create required entity splits if they are not added yet.
  if ($entity instanceof ContentEntityBase) {
    EntitySplit::createRequiredEntitySplitsForEntity($entity);
  }
}

/**
 * Implements hook_entity_delete().
 */
function entity_split_entity_delete(EntityInterface $entity) {
  if ($entity instanceof ContentEntityBase) {
    EntitySplit::deleteEntitySplitsForEntity($entity);
  }
}

/**
 * Implements hook_form_alter().
 */
function entity_split_form_alter(array &$form, FormStateInterface $form_state) {
  $form_object = $form_state->getFormObject();

  if (!($form_object instanceof ContentEntityFormInterface)) {
    return;
  }

  $entity = $form_object->getEntity();

  if (($entity instanceof ContentEntityBase) && !$entity->isNew() && in_array($form_object->getOperation(), ['edit', 'default'], TRUE)) {
    // Add entity split edition links.
    EntitySplit::alterEntityForm($form, $entity, $form_object->getFormLangcode($form_state));
  }
}
