<?php
use Symfony\Component\HttpKernel\Exception;
use Drupal\Core\Routing\TrustedRedirectResponse;
/**
 * Implementation of hook form_alter()
 * Adds a url field to the form
 * This information is then used by ezproxy_user_login()
 */
function ezproxy_form_alter(&$form, $form_state, $form_id) {
  global $_ezproxy_url;
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    $form['ezproxy_url'] = array(
      '#type' => 'hidden',
      '#value' => $_ezproxy_url,
    );
    if (isset($form['#action']) && preg_match('@^([^?]*)/(ezproxylogin)\\?(?!destination=)(.+)$@i', $form['#action'], $parts)) {
      $form['#action'] = sprintf('%s/%s?destination=%s', $parts[1], $parts[2], urlencode($parts[2] . '?' . $parts[3]));
    }
  }
}

/**
 * Implementation of hook_user_login
 * Used as part of the CGI authentication method
 */
function ezproxy_user_login(&$edit, $account) {
  if (!empty($edit['ezproxy_url'])) {
    $_ezproxy_url = $edit['ezproxy_url'];

    if ($account->uid && $account->hasPermission('access ezproxy content')) { //user is already logged in has permission to access ezproxy content
     $url = ezproxy_create_ticket($_ezproxy_url);
     return new TrustedRedirectResponse($url);
    }
    else {
      drupal_set_message(t("You do not have permission to access EZProxy content"));
      throw new AccessDeniedHttpException();
      exit();
    }
  }
}

/**
 * Generates a HTML link to the EZProxy database using tickets
 * This is used in the same way as the l() function
 * except that an ezproxy URL is returned, with the appropriate 
 * ticket attached.
 *
 * @param $text the Text to use in the link
 * @param $path the URL of the database to connect to
 * @param the options array that you would usually pass into the l() function
 * @return Decorated URL to use with ezproxy authentication.
 */
function ezproxy_l($text, $path, $options = array()) {
  $user = \Drupal::currentUser();
  
  if (!$user->hasPermission('access ezproxy content')) {
    return '';
  }
  
  $url = ezproxy_create_ticket($path);

  return l($text, $url, $options);
}


/**
 * Generates the URL to use with EZProxy tickets
 *
 * @param $path the URL of the database to connect to
 * @return Decorated URL to use with ezproxy authentication.
 */
function ezproxy_create_ticket($path) {
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  include_once('ezproxyticket.php');
   
  if ($user->id() == 0) {
    return FALSE;
  }
  $ezproxy_host = \Drupal::config('ezproxy.settings')->get('ezproxy_host');
  $ezproxy_port = \Drupal::config('ezproxy.settings')->get('ezproxy_port');
  $ezproxy_ticket_secret = \Drupal::config('ezproxy.settings')->get('ezproxy_ticket_secret');
  $url = $ezproxy_host . ':' . $ezproxy_port;
  $ezproxy = new EZproxyTicket($url, $ezproxy_ticket_secret, $user->getUsername());

  return $ezproxy->url($path);
}
?>