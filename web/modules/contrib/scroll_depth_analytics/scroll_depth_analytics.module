<?php

/**
 * @file
 * Google Analytics Scroll Depth.
 */

use Drupal\Component\Utility\Unicode;

/**
 * Implements hook_help().
 */
function scroll_depth_analytics_help($path, $arg) {
  switch ($path) {
    case 'admin/help#scroll_depth_analytics':
      $output = '<h3>' . t('Scroll Depth Analytics') . '</h3>';
      $output .= '<p>' . t('Scroll Depth Analytics module provides an additional scroll tracking functionality to Google Analytics using <a href="@sd_plugin_url">scroll depth JQuery plugin</a>. This will allow to measure how far users are scrolling a page. It monitors the 25%, 50%, 75%, and 100% scroll points. The <a href="@analytics">Google Analytics administration page</a> Scroll tab provides an interface for enabling scroll tracking for all or specific pages and enable elements tracking.', ['@analytics' => url('admin/config/system/googleanalytics'), '@sd_plugin_url' => 'http://scrolldepth.parsnip.io/']) . '</p>';
      return $output;
  }
}

/**
 * Implements hook_page_attachments().
 *
 * Insert JavaScript to the appropriate scope/region of the page.
 */
function scroll_depth_analytics_page_attachments(array &$page) {
  $config = \Drupal::config('scroll_depth_analytics.admin_settings');
  $scroll_depth_analytics_page_match = _scroll_depth_analytics_visibility_pages();
  if ($scroll_depth_analytics_page_match && $config->get('visibility.tracking_options')) {
    $page['#attached']['library'][] = 'scroll_depth_analytics/scroll.ga.js';
    $page['#attached']['library'][] = 'scroll_depth_analytics/scroll_depth_analytics';
    $page['#attached']['drupalSettings']['scroll_depth_analytics']['scroll_elements'] = $config->get('elements.scroll_elements');
  }
}

/**
 * Tracking visibility check for pages.
 *
 * Based on visibility setting this function returns TRUE if JS code should
 * be added to the current page and otherwise FALSE.
 */
function _scroll_depth_analytics_visibility_pages() {
  static $page_match;
  // Cache visibility result if function is called more than once.
  if (!isset($page_match)) {
    $config = \Drupal::config('scroll_depth_analytics.admin_settings');
    $visibility_request_path_pages = $config->get('visibility.request_path_pages');
    $visibility_request_path_mode = $config->get('visibility.visibility_mode');
    // Match path if necessary.
    if (!empty($visibility_request_path_pages)) {
      // Convert path to lowercase. This allows comparison of the same path
      // with different case. Ex: /Page, /page, /PAGE.
      $pages = Unicode::strtolower($visibility_request_path_pages);
      // Compare the lowercase path alias (if any) and internal path.
      $path = \Drupal::service('path.current')->getPath();
      $path_alias = Unicode::strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($path));
      $page_match = \Drupal::service('path.matcher')->matchPath($path_alias, $pages) || (($path != $path_alias) && \Drupal::service('path.matcher')->matchPath($path, $pages));
      // When $visibility_request_path_mode has a value of 0, the tracking
      // code is displayed on all pages except those listed in $pages. When
      // set to 1, it is displayed only on those pages listed in $pages.
      $page_match = !($visibility_request_path_mode xor $page_match);
    }
    else {
      $page_match = TRUE;
    }
  }
  return $page_match;
}
