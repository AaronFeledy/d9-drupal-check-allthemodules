<?php
define('ASF_STATUS_PENDING', 'PEN');
define('ASF_STATUS_EXECUTED', 'EXE');
define('ASF_STATUS_DELETED', 'DEL');
define('ASF_ACTION_PUBLISH', 'publish');
define('ASF_ACTION_UNPUBLISH', 'unpublish');

define('ASF_TYPE_NOTHING', 'nothing');
define('ASF_TYPE_START_END', 'start_to_end_date');
define('ASF_TYPE_START', 'start_date');
define('ASF_TYPE_AMOUNT', 'start_date_to_amount');
define('ASF_TYPE_ITERATE', 'iterate');
define('ASF_TYPE_ITERATE_AMOUNT', 'iterate_amount');
define('ASF_TYPE_INHERIT', 'inherit');

define('ASF_ITERATION_ENDDATE', 0);
define('ASF_ITERATION_MAX', 1);
//define('ASF_ITERATION_FIRST', 2);
//define('ASF_ITERATION_INFINITE', 3);
//define('ASF_ITERATION_INHERIT', 4);

use Drupal\asf\AsfCron;
/**
 * @file
 * Asf module
 */

/**
 * Validate an iso date.
 */
function _asf_field_validate_ISO_date($element, &$form_state, $form) {
  $value = $element['#value'];
  if (!preg_match("/([0-9]{4})-([0-9]{1,2})-([0-9]{1,2}\s[0-9]{1,2}\:[0-9]{1,2})/", $value)) {
    form_error($element, t('Invalid date/time value.'));
  }
}


/**
 * Implements hook_cron().
 * You should be using ultimate cron though...
 */
function asf_cron() {
  _asf_publish_unpublish();
  _asf_cleanup_executed_schemas();
}

/**
 * Implements hook_cronapi().
 */
function asf_cronapi($op, $job = NULL) {
  $items['asf_publish_unpublish'] = array(
    'title' => 'Do the publication actions.',
    'callback' => '_asf_publish_unpublish',
    'scheduler' => array(
      'name' => 'crontab',
      'crontab' => array(
        'rules' => array('*/2 * * * *'),
      ),
    ),
  );

  $items['asf_recalculate_infinite_cron'] = array(
    'title' => 'Cleanup old actions',
    'callback' => '_asf_cleanup_executed_schemas',
    'scheduler' => array(
      'name' => 'crontab',
      'crontab' => array(
        'rules' => array('1 1 1 * *'),
      ),
    ),
  );
  return $items;
}




function _asf_publish_unpublish() {
  $c = new AsfCron();
  $c->runCron();
}

function _asf_cleanup_executed_schemas(){
  $c = new AsfCron();
  $c->cleanup();
}