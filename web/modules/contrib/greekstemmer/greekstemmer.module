<?php
/*
 * Copyright (c) 2009 Vassilis Spiliopoulos (http://www.psychfamily.gr),
 * Pantelis Nasikas under GNU General Public License Version 3
 * Updated for Drupal 6, 7 and Drupal 8 by
 * Yannis Karampelas (info@netstudio.gr) in 2011 and 2017 respectively.
 * This is a port of the php implementation of
 * Spyros Saroukos into Drupal CMS. Spyros Saroukos implementation 
 * was based on the work of Panos Kyriakakis (http://www.salix.gr) and
 * Georgios Ntais (Georgios.Ntais@eurodyn.com)
 * Georgios firstly developed the stemmer's javascript implementation for his
 * master thesis at Royal Institute of Technology [KTH], Stockholm Sweden
 * http://www.dsv.su.se/~hercules/papers/Ntais_greek_stemmer_thesis_final.pdf 
 *
 * !!!!!The encoding of this file is iso-8859-7 instead of UTF-8 on purpose!!!!!!!
 */

/**
* Implementation of hook_search_preprocess
*/
function greekstemmer_search_preprocess($text) {
    $en_changed= FALSE;
    if(mb_check_encoding($text,"UTF-8")){
        $en_changed=TRUE;
        $text=mb_convert_encoding($text,"ISO-8859-7","UTF-8");
    }
    $words = preg_split('/[^(a-zA-ZАБЦДЕФГХИЙКЛМНОПЯСТУЖВЬЫабцдефгхийклмнопястужвьыРэщЭъЩЧчЗШюЮ╒╦╪╨╬©╧зш\d)]+/', str_replace("'", '', $text), -1, PREG_SPLIT_DELIM_CAPTURE);

    // Process each word
    foreach ($words as $k => $word) {
            $stemmed_array = stemWord($word);
            $words[$k] = $stemmed_array[0];
    }

    // Put it all back together
    $to_return_string = implode(" ", $words);
    if($en_changed==TRUE){
        $to_return_string=mb_convert_encoding($to_return_string,"UTF-8","ISO-8859-7");
    }
    return $to_return_string;
}

/**
* returns an array called returnResults[]
* returnResults[0]= the stem
* returnResults[1]= the number of executed rules, for debugging testing purposes
*/
function stemWord($w) {
    $numberOfRulesExamined = 0; //this is the number of rules examined. for deubugging and testing purposes

    // it is better to convert the input into iso-8859-7 in case it is in utf-8
    // this way we dont have any problems with length counting etc
    $encoding_changed= FALSE;
    $w_CASE=array(strlen($w));//1 for changed case in that position, 2 especially for Р

    //first we must find all letters that are not in Upper case and store their position
    $unacceptedLetters=array("А","Б","Ц","Д","Е","Ф","Г","Х","И","Й","К","Л","М","Н","О","П","Я","С","Т","У","Ж","В","Ь","Ы","э","щ","ч","ъ","Э","Щ","Р","Ч","З");
    $acceptedLetters=array("а","б","ц","д","е","ф","г","х","и","й","к","л","м","н","о","п","я","с","т","у","ж","в","ь","ы","а","е","г","и","о","у","с","ы","и");

    for($k=0;$k<=32;$k=$k+1){
        for ($i=0;$i<=strlen($w)-1;$i++){
            if($w[$i]==$unacceptedLetters[$k])
            {
                if ($w[$i]=="Р"){$w[$i]="с";$w_CASE[$i]=2;}
                else{$w[$i]=$acceptedLetters[$k];
                    $w_CASE[$i]="1";}
            }
        }
    }
    //stop-word removal
    $numberOfRulesExamined++;
    $stop_words='/^(ейо|аба|аца|ацг|ацы|адг|ады|ае|аеи|ахы|аи|аий|айг|айола|айолг|айяибыс|ака|акгхеиа|акгхима|аккавоу|аккиыс|аккиытийа|аккоиыс|аккоиытийа|аккоте|акт|акы|ала|але|алеса|алесыс|алы|ам|ама|амалеса|амалетану|амеу|амти|амтипеяа|амтис|амы|амытеяы|анажма|ап|апемамти|апо|апоье|апы|аяа|аяаце|аяе|аяй|аяйета|аяк|аял|аят|аяу|аяы|ас|аса|асо|ата|ате|атг|ати|атл|ато|ауяио|ажг|ажотоу|ажоу|ав|аве|аво|аьа|аье|аьг|аьу|аые|аыо|бам|бат|бав|беа|бебаиотата|бгн|биа|бие|биг|био|бог|боы|бяе|ца|цаб|цая|цем|цес||цг|цгм|ци|циа|цие|цим|цио|цйи|циати|цйу|цог|цоо|цягцояа|цяи|цяу|цуг|цуяы|да|де|дег|деи|дем|дес|дг|дгхем|дгкадг|дгы|ди|диа|диаяйыс|диокоу|дис|дивыс|док|дом|дяа|дяу|дяв|дуе|дуо|ды|еал|еам|еая|ехг|еи|еиделг|еихе|еилаи|еиласте|еимаи|еис|еисаи|еисасте|еисте|еите|еива|еивале|еивам|еивате|еиве|еивес|ей|ейеи|ека|еки|елп|ем|емтекыс|емтос|емтылетану|емы|ен|енажма|ени|енисоу|ены|еой|епамы|епеидг|епеита|епг|епи|еписгс|еполемыс|еяа|ес|есас|есе|есеис|есема|есг|есты|есу|есы|ети|етси|еу|еуа|еуце|еухус|еутувыс|еже|еженгс|ежт|еве|евеи|евеис|евете|евхес|еволе|евоуле|евоум|евтес|евы|еыс|феа|фег|феи|фем|фгм|фы|г|гдг|гду|гхг|гко|гли|гпа|гсасте|гсоум|гта|гтам|гтаме|гтои|гттом|гы|ха|хуе|хыя|и|иа|ибо|идг|идиыс|ие|ии|иии|ийа|ико|ила|има|имы|ине|ино|ио|иои|иса|исале|исе|исг|исиа|исо|исыс|иыб|иым|иыс|иам|йах|йахе|йахети|йахокоу|йахыс|йаи|йам|йапоте|йапоу|йапыс|йат|йата|йати|йатити|йатопим|йаты|йаы|йбо|йеа|йеи|йем|йи|йил|йиокас|йит|йив|ййе|йкисе|йкп|йой|йомта|йов|йтк|йуя|йуяиыс|йы|йым|ка|кеа|кем|кео|киа|кицайи|кицоукайи|кицо|кицытеяо|кио|кия|коцы|коипа|коипом|кос|кс|куы|ла|лафи|лайаяи|лакиста|лакком|лам|лан|лас|лат|ле|лехауяио|леи|леиом|лек|лекеи|леккетаи|лелиас|лем|лес|леса|лет|лета|летану|левяи|лг|лгде|лгм|лгпыс|лгте|ли|лин|лис|лле|лма|лоб|локис|локомоти|ломава|ломолиас|лиа|лоу|лпа|лпояеи|лпояоум|лпяабо|лпяос|лпы|лу|луа|лум|ма|мае|маи|мао|мд|мею|меа|мее|мео|ми|миа|мий|мик|мим|мио|мта|мте|мти|мто|мум|мые|мыяис|нама|нажмийа|неы|ни|о|оа|оап|одо|ое|офо|оге|ои|оиа|оиг|ойа|окоцуяа|окомем|окотека|окысдиокоу|олыс|ом|оме|омо|опа|опе|опг|опо|опоиадгпоте|опоиамдгпоте|опоиасдгпоте|опоидгпоте|опоиесдгпоте|опоиодгпоте|опоиомдгпоте|опоиосдгпоте|опоиоудгпоте|опоиоусдгпоте|опоиымдгпоте|опотедгпоте|опоу|опоудгпоте|опыс|ояа|ояе|ояг|ояо|ояж|ояы|оса|осадгпоте|осе|осесдгпоте|осгдгпоте|осгмдгпоте|осгсдгпоте|осодгпоте|осоидгпоте|осомдгпоте|ососдгпоте|осоудгпоте|осоусдгпоте|осымдгпоте|отам|оте|оти|отидгпоте|оу|оуде|оуй|оус|оуте|оуж|ови|оьа|оье|оьг|оьи|оьо|па|паки|пам|памтоте|памтоу|памтыс|пап|пая|паяа|пеи|пея|пеяа|пеяи|пеяипоу|пеяси|пеяуси|пес|пи|пиа|пихамом|пий|пио|писы|пит|пиы|пкаи|пкеом|пкгм|пкы|пл|поа|пое|пок|поку|поп|поте|поу|поухе|поухема|пяепеи|пяи|пяим|пяо|пяойеилемоу|пяойеитаи|пяопеяси|пяос|пяотоу|пяовхес|пяовтес|пяытутеяа|пуа|пун|пуо|пуя|пв|пы|пык|пыс|яа|яаи|яап|яас|яе|яеа|яее|яеи|ягс|яхы|яио|яо|яою|яое|яоф|яог|яох|яои|яой|яок|яом|яос|яоу|саи|сам|сао|сас|се|сеис|сей|сен|сея|сет|сеж|сглеяа|си|сиа|сица|сий|сив|сйи|сои|сой|сок|сом|сос|соу|сяи|ста|стг|стгм|стгс|стис|сто|стом|стоу|стоус|стым|су|суцвяомыс|сум|сумала|сумепыс|сумгхыс|сведом|сыста|та|таде|тай|там|тао|тау|тава|тавате|те|теи|тек|текийа|текийыс|тес|тет|тфо|тг|тгк|тгм|тгс|ти|тий|тил|типота|типоте|тис|тмт|то|тои|той|тол|том|топ|тос|тос?м|тоса|тосес|тосг|тосгм|тосгс|тосо|тосои|тосом|тосос|тосоу|тосоус|тоте|тоу|тоукависто|тоукавистом|тоус|тс|тса|тсе|тувом|ты|тым|тыяа|уас|уба|убо|уие|уио|ука|укг|уми|уп|упея|упо|упоьг|упоьим|устеяа|ужг|уьг|жа|жаю|жае|жам|жан|жас|жаы|жеф|жеи|жетос|жеу|жи|жик|жис|жон|жпа|жяи|ва|ваг|вак|вам|важ|ве|веи|вхес|ви|виа|вик|вио|вкл|вл|вог|вок|вяы|втес|выяис|выяиста|ьес|ьгка|ьи|ьит|ы|ыа|ыас|ыде|ыес|ыхы|ыла|ыле|ым|ыо|ыом|ыоу|ыс|ысам|ысг|ысотоу|ыспоу|ысте|ыстосо|ыта|ыв|ыым)$/';

    if (preg_match($stop_words,$w)){
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }

    // step1list is used in Step 1. 41 stems
    $step1list =  Array();
    $step1list["жациа"]="жа";
    $step1list["жациоу"]="жа";
    $step1list["жациым"]="жа";
    $step1list["сйациа"]="сйа";
    $step1list["сйациоу"]="сйа";
    $step1list["сйациым"]="сйа";
    $step1list["окоциоу"]="око";
    $step1list["окоциа"]="око";
    $step1list["окоциым"]="око";
    $step1list["социоу"]="со";
    $step1list["социа"]="со";
    $step1list["социым"]="со";
    $step1list["татоциа"]="тато";
    $step1list["татоциоу"]="тато";
    $step1list["татоциым"]="тато";
    $step1list["йяеас"]="йяе";
    $step1list["йяеатос"]="йяе";
    $step1list["йяеата"]="йяе";
    $step1list["йяеатым"]="йяе";
    $step1list["пеяас"]="пея";
    $step1list["пеяатос"]="пея";
    $step1list["пеяатг"]="пея"; //Added by Spyros . also at $re in step1
    $step1list["пеяата"]="пея";
    $step1list["пеяатым"]="пея";
    $step1list["теяас"]="тея";
    $step1list["теяатос"]="тея";
    $step1list["теяата"]="тея";
    $step1list["теяатым"]="тея";
    $step1list["жыс"]="жы";
    $step1list["жытос"]="жы";
    $step1list["жыта"]="жы";
    $step1list["жытым"]="жы";
    $step1list["йахестыс"]="йахест";
    $step1list["йахестытос"]="йахест";
    $step1list["йахестыта"]="йахест";
    $step1list["йахестытым"]="йахест";
    $step1list["цецомос"]="цецом";
    $step1list["цецомотос"]="цецом";
    $step1list["цецомота"]="цецом";
    $step1list["цецомотым"]="цецом";

    $v = '(а|е|г|и|о|у|ы)';	// vowel
    $v2 = '(а|е|г|и|о|ы)'; //vowel without Y

    $test1 = true;


    //Step S1. 14 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(ифа|ифес|ифе|ифале|ифате|ифам|ифаме|ифы|ифеис|ифеи|ифоуле|ифете|ифоум|ифоуме)$/';
    $exceptS1 = '/^(амалпа|елпа|епа|намапа|па|пеяипа|ахяо|сумахяо|даме)$/';
    $exceptS2 = '/^(лаяй|йоям|алпая|аяя|бахуяи|баяй|б|бокбоя|цйя|цкуйоя|цкуйуя|илп|к|коу|лая|л|пя|лпя|покуя|п|я|пипеяоя)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w = $w . 'I';
        }
        if( preg_match($exceptS2,$w) ) {
            $w = $w . 'Iф';
        }

        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }

    //Step S2. 7 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(ыхгйа|ыхгйес|ыхгйе|ыхгйале|ыхгйате|ыхгйам|ыхгйаме)$/';
    $exceptS1 = '/^(ак|би|ем|уь|ки|фы|с|в)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w = $w . 'ым';
        }

        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }

    //Step S3. 7 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(иса|исес|исе|исале|исате|исам|исаме)$/';
    $exceptS1 = '/^(амалпа|ахяо|елпа|есе|есыйке|епа|намапа|епе|пеяипа|ахяо|сумахяо|даме|йке|ваятопа|енаява|летепе|апойке|апейке|ейке|пе|пеяипа)$/';
    $exceptS2 = '/^(ам|аж|це|цицамтоаж|цйе|дглойяат|йол|цй|л|п|поуйал|око|кая)$/';

    if ($w=="иса"){$w="ис";return $w;}
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w = $w . 'и';
        }

        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }


    //Step S4. 7 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(исы|исеис|исеи|исоуле|исете|исоум|исоуме)$/';
    $exceptS1 = '/^(амалпа|елпа|есе|есыйке|епа|намапа|епе|пеяипа|ахяо|сумахяо|даме|йке|ваятопа|енаява|летепе|апойке|апейке|ейке|пе|пеяипа)$/';

    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w = $w . 'и';
        }
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }
    //Step S5. 11 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(истос|истоу|исто|исте|истои|истым|истоус|истг|истгс|иста|истес)$/';
    $exceptS1 = '/^(л|п|ап|ая|гд|йт|сй|св|уь|жа|вя|вт|айт|аоя|асв|ата|авм|авт|цел|цуя|елп|еуп|евх|гжа|╧жа|йах|йай|йук|куц|лай|лец|тав|жик|выя)$/';
    $exceptS2 = '/^(даме|сумахяо|йке|се|есыйке|асе|пке)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w = $w . 'ист';
        }
        if( preg_match($exceptS2,$w) ) {
            $w = $w . 'и';
        }
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }
    //Step S6. 6 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(исло|ислои|ислос|ислоу|ислоус|ислым)$/';
    $exceptS1 = '/^(ацмыстий|атолий|цмыстий|ехмий|ейкейтий|сйептий|топий)$/';
    $exceptS2 = '/^(се|летасе|лийяосе|ецйке|апойке)$/';
    $exceptS3 = '/^(даме|амтидаме)$/';
    $exceptS4 = '/^(акенамдяим|буфамтим|хеатяим)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem ;
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w=str_replace('ий',"",$w);
        }
        if( preg_match($exceptS2,$w) ) {
            $w=$w."исл";
        }
        if( preg_match($exceptS3,$w) ) {
            $w=$w."и";
        }
        if( preg_match($exceptS4,$w) ) {
            $w=str_replace('им',"",$w);
        }
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }

    //Step S7. 4 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(аяайи|аяайиа|оудайи|оудайиа)$/';
    $exceptS1 = '/^(с|в)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem ;
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w=$w."Aяай";
        }

        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }



    //Step S8. 8 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(айи|айиа|итса|итсас|итсес|итсым|аяайи|аяайиа)$/';
    $exceptS1 = '/^(амхя|балб|бя|йаил|йом|йоя|кабя|коук|лея|лоуст|мацйас|пк|я|яу|с|сй|сой|спам|тф|жаял|в|йапай|акисж|албя|амхя|й|жук|йатяап|йкил|лак|скоб|ж|сж|тсевоскоб)$/';
    $exceptS2 = '/^(б|бак|циам|цк|ф|гцоулем|йаяд|йом|лайяум|муж|патея|п|сй|тос|тяипок)$/';
    $exceptS3 = '/(йоя)$/';// for words like пкоусиойояитса, пакиойояитса etc
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem ;
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w=$w."ай";
        }
        if( preg_match($exceptS2,$w) ) {
            $w=$w."итс";
        }
        if( preg_match($exceptS3,$w) ) {
            $w=$w."итс";
        }
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }

    //Step S9. 3 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(идио|идиа|идиым)$/';
    $exceptS1 = '/^(аижм|ия|око|ьак)$/';
    $exceptS2 = '/(е|паивм)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem ;
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w=$w."ид";
        }
        if( preg_match($exceptS2,$w) ) {
            $w=$w."ид";
        }
        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }



    //Step S10. 4 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(исйос|исйоу|исйо|исйе)$/';
    $exceptS1 = '/^(д|иб|лгм|я|жяацй|куй|обек)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem ;
        $test1 = false;
        if( preg_match($exceptS1,$w) ) {
            $w=$w."исй";
        }

        return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
    }






    //Step1
    $numberOfRulesExamined++;
    $re = '/(.*)(жациа|жациоу|жациым|сйациа|сйациоу|сйациым|окоциоу|окоциа|окоциым|социоу|социа|социым|татоциа|татоциоу|татоциым|йяеас|йяеатос|йяеата|йяеатым|пеяас|пеяатос|пеяатг|пеяата|пеяатым|теяас|теяатос|теяата|теяатым|жыс|жытос|жыта|жытым|йахестыс|йахестытос|йахестыта|йахестытым|цецомос|цецомотос|цецомота|цецомотым)$/';





    if (preg_match($re,$w,$match)) {
        $stem = $match[1];
        $suffix = $match[2];
        $w = $stem . $step1list[$suffix];
        $test1 = false;

    }


    // Step 2a. 2 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(адес|адым)$/';
    if( preg_match($re,$w,$match) ) {
        $stem = $match[1];
        $w = $stem;
        $re = '/(ой|лал|лам|лпалп|патея|циаци|мтамт|йуя|хеи|пехея)$/';
        if( !preg_match($re,$w) ) {
            $w = $w . "ад";
        }


    }

    //Step 2b. 2 stems
    $numberOfRulesExamined++;
    $re = '/^(.+?)(едес|едым)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $exept2 = '/(оп|ип|елп|уп|цгп|дап|йяасп|лик)$/';
        if( preg_match($exept2,$w) ) {
            $w = $w . 'ед';
        }

    }

    //Step 2c
    $numberOfRulesExamined++;
    $re = '/^(.+?)(оудес|оудым)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;

        $exept3 = '/(аяй|йакиай|петак|кив|пкен|сй|с|жк|жя|бек|коук|вм|сп|тяац|же)$/';
        if( preg_match($exept3,$w) ) {
            $w = $w . 'оуд';
        }

    }

    //Step 2d
    $numberOfRulesExamined++;
    $re = '/^(.+?)(еыс|еым)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept4 = '/^(х|д|ек|цак|м|п|ид|пая)$/';
        if( preg_match($exept4,$w) ) {
            $w = $w . 'е';
        }

    }

    //Step 3
    $numberOfRulesExamined++;
    $re = '/^(.+?)(иа|иоу|иым)$/';
    if( preg_match($re,$w,$fp) ) {
        $stem = $fp[1];
        $w = $stem;
        $re = '/'.$v.'$/';
        $test1 = false;
        if( preg_match($re,$w) ) {
            $w = $stem . 'и';
        }
    }

    //Step 4
    $numberOfRulesExamined++;
    $re = '/^(.+?)(ийа|ийо|ийоу|ийым)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;

        $test1 = false;
        $re = '/'.$v.'$/';
        $exept5 = '/^(ак|ад|емд|алам|алловак|гх|амгх|амтид|жус|бяыл|цея|еныд|йакп|йакким|йатад|лоук|лпам|лпациат|лпок|лпос|мит|ний|сумолгк|петс|питс|пийамт|пкиатс|постекм|пяытод|сеят|сумад|тсал|упод|жиком|жукод|вас)$/';
        if( preg_match($re,$w) || preg_match($exept5,$w) ) {
            $w = $w . 'ий';
        }
    }

    //step 5a
    $numberOfRulesExamined++;
    $re = '/^(.+?)(але)$/';
    $re2 = '/^(.+?)(ацале|гсале|оусале|гйале|гхгйале)$/';
    if ($w == "ацале") {
        $w = "ацал";

    }

    if( preg_match($re2,$w) ) {
        preg_match($re2,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;
    }
    $numberOfRulesExamined++;
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept6 = '/^(амап|апох|апой|апост|боуб|нех|оук|пех|пийя|пот|сив|в)$/';
        if( preg_match($exept6,$w) ) {
            $w = $w . "ал";
        }
    }

    //Step 5b
    $numberOfRulesExamined++;
    $re2 = '/^(.+?)(аме)$/';
    $re3 = '/^(.+?)(ацаме|гсаме|оусаме|иомтаме|иотаме|иоумтаме|омтаме|отаме|оумтаме|гйаме|гхгйаме)$/';

    if( preg_match($re3,$w) ) {
        preg_match($re3,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $re3 = '/^(тя|тс)$/';
        if( preg_match($re3,$w) ) {
            $w = $w .  "ацам";
        }
    }
    $numberOfRulesExamined++;
    if( preg_match($re2,$w) ) {
        preg_match($re2,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $re2 = '/'.$v2.'$/';
        $exept7 = '/^(бетея|боукй|бяавл|ц|дяадоул|х|йакпоуф|йастек|йоялоя|каопк|лыалех|л|лоусоукл|м|оук|п|пекей|пк|покис|пояток|саяайатс|соукт|тсаякат|ояж|тсицц|тсоп|жытостеж|в|ьувопк|ац|ояж|цак|цея|дей|дипк|алеяийам|оуя|пих|поуяит|с|фымт|ий|йаст|йоп|кив|коухгя|лаимт|лек|сиц|сп|стец|тяац|тсац|ж|ея|адап|ахицц|алгв|амий|амояц|апгц|апих|атсицц|бас|басй|бахуцак|биолгв|бяавуй|диат|диаж|емояц|хус|йапмобиолгв|йатацак|йкиб|йоикаяж|киб|лецкобиолгв|лийяобиолгв|мтаб|нгяойкиб|окицодал|окоцак|пемтаяж|пеягж|пеяитя|пкат|покудап|покулгв|стеж|таб|тет|упеягж|упойоп|валгкодап|ьгкотаб)$/';
        if( preg_match($re2,$w) || preg_match($exept7,$w) ){
            $w = $w .  "ам";
        }
    }

    //Step 5c
    $numberOfRulesExamined++;
    $re3 = '/^(.+?)(ете)$/';
    $re4 = '/^(.+?)(гсете)$/';

    if( preg_match($re4,$w) ) {
        preg_match($re4,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;
    }
    $numberOfRulesExamined++;
    if( preg_match($re3,$w) ) {
        preg_match($re3,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $re3 = '/'.$v2.'$/';
        $exept8 =  '/(од|аия|жоя|тах|диах|св|емд|еуя|тих|упеях|яах|емх|яох|сх|пуя|аим|сумд|сум|сумх|выя|пом|бя|йах|еух|ейх|мет|яом|аяй|бая|бок|ыжек)$/';
        $exept9 = '/^(абая|бем|емая|абя|ад|ах|ам|апк|баяом|мтя|сй|йоп|лпоя|миж|пац|паяайак|сеяп|сйек|суяж|той|у|д|ел|хаяя|х)$/';

        if( preg_match($re3,$w) || preg_match($exept8,$w) || preg_match($exept9,$w) ){
            $w = $w .  "ет";
        }
    }

    //Step 5d
    $numberOfRulesExamined++;
    $re = '/^(.+?)(омтас|ымтас)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept10 = '/^(аяв)$/';
        $exept11 = '/(йяе)$/';
        if( preg_match($exept10,$w) ){
            $w = $w . "омт";
        }
        if( preg_match($exept11,$w) ){
            $w = $w . "ымт";
        }
    }

    //Step 5e
    $numberOfRulesExamined++;
    $re = '/^(.+?)(оласте|иоласте)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept11 = '/^(ом)$/';
        if( preg_match($exept11,$w) ){
            $w = $w .  "оласт";
        }
    }

    //Step 5f
    $numberOfRulesExamined++;
    $re = '/^(.+?)(есте)$/';
    $re2 = '/^(.+?)(иесте)$/';

    if( preg_match($re2,$w) ) {
        preg_match($re2,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $re2 = '/^(п|ап|сулп|асулп|айатап|алеталж)$/';
        if( preg_match($re2,$w) ) {
            $w = $w . "иест";
        }
    }
    $numberOfRulesExamined++;
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept12 = '/^(ак|ая|ейтек|ф|л|н|паяайак|ая|пяо|мис)$/';
        if( preg_match($exept12,$w) ){
            $w = $w . "ест";
        }
    }

    //Step 5g
    $numberOfRulesExamined++;
    $re = '/^(.+?)(гйа|гйес|гйе)$/';
    $re2 = '/^(.+?)(гхгйа|гхгйес|гхгйе)$/';

    if( preg_match($re2,$w) ) {
        preg_match($re2,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;
    }
    $numberOfRulesExamined++;
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept13 = '/(сйык|сйоук|маях|сж|ох|пих)$/';
        $exept14 = '/^(диах|х|паяайатах|пяосх|сумх|)$/';
        if( preg_match($exept13,$w) || preg_match($exept14,$w) ){
            $w = $w . "гй";
        }
    }


    //Step 5h
    $numberOfRulesExamined++;
    $re = '/^(.+?)(оуса|оусес|оусе)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept15 = '/^(жаялай|вад|ацй|амаяя|бяол|ейкип|калпид|кев|л|пат|я|к|лед|лесаф|употеим|ал|аих|амгй|деспоф|емдиажея|де|деутеяеу|йахаяеу|пке|тса)$/';
        $exept16 = '/(подая|бкеп|памтав|жяуд|ламтик|лакк|йулат|кав|кгц|жац|ол|пяыт)$/';
        if( preg_match($exept15,$w) || preg_match($exept16,$w) ){
            $w = $w . "оус";
        }
    }

    //Step 5i
    $re = '/^(.+?)(аца|ацес|аце)$/';
    $numberOfRulesExamined++;
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept17 = '/^(ьож|мауков)$/';
        $exept20 = '/(йокк)$/';
        $exept18 = '/^(абаст|покуж|адгж|палж|я|асп|аж|алак|алакки|амуст|апея|аспая|авая|деябем|дяосоп|неж|меоп|молот|окоп|олот|пяост|пяосыпоп|сулп|сумт|т|упот|вая|аеип|аилост|амуп|апот|аятип|диат|ем|епит|йяойакоп|сидгяоп|к|мау|оукал|оуя|п|тя|л)$/';
        $exept19 = '/(ож|пек|воят|кк|сж|яп|жя|пя|ков|слгм)$/';

        if( (preg_match($exept18,$w) || preg_match($exept19,$w))
            && !(preg_match($exept17,$w) || preg_match($exept20,$w)) ) {
            $w = $w . "ац";
        }
    }


    //Step 5j
    $numberOfRulesExamined++;
    $re = '/^(.+?)(гсе|гсоу|гса)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept21 = '/^(м|веясом|дыдейам|еяглом|лецаком|ептам)$/';
        if( preg_match($exept21,$w) ){
            $w = $w . "гс";
        }
    }

    //Step 5k
    $numberOfRulesExamined++;
    $re = '/^(.+?)(гсте)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept22 = '/^(асб|сб|авя|вя|апк|аеилм|дусвя|еувя|йоимовя|пакиль)$/';
        if( preg_match($exept22,$w) ){
            $w = $w . "гст";
        }
    }

    //Step 5l
    $numberOfRulesExamined++;
    $re = '/^(.+?)(оуме|гсоуме|гхоуме)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept23 = '/^(м|я|спи|стяаболоутс|йайолоутс|еным)$/';
        if( preg_match($exept23,$w) ){
            $w = $w . "оум";
        }
    }

    //Step 5l
    $numberOfRulesExamined++;
    $re = '/^(.+?)(оуле|гсоуле|гхоуле)$/';
    if( preg_match($re,$w) ) {
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
        $test1 = false;

        $exept24 = '/^(паяасоус|ж|в|ыяиопк|аф|аккосоус|асоус)$/';
        if( preg_match($exept24,$w) ){
            $w = $w . "оул";
        }
    }

    // Step 6
    $numberOfRulesExamined++;
    $re = '/^(.+?)(лата|латым|латос)$/';
    $re2 = '/^(.+?)(а|ацате|ацам|аеи|алаи|ам|ас|асаи|атаи|аы|е|еи|еис|еите|есаи|ес|етаи|и|иелаи|иеласте|иетаи|иесаи|иесасте|иоластам|иолоум|иолоума|иомтам|иомтоусам|иосастам|иосасте|иосоум|иосоума|иотам|иоула|иоуласте|иоумтаи|иоумтам|г|гдес|гдым|гхеи|гхеис|гхеите|гхгйате|гхгйам|гхоум|гхы|гйате|гйам|гс|гсам|гсате|гсеи|гсес|гсоум|гсы|о|ои|олаи|оластам|олоум|олоума|омтаи|омтам|омтоусам|ос|осастам|осасте|осоум|осоума|отам|оу|оулаи|оуласте|оум|оумтаи|оумтам|оус|оусам|оусате|у|ус|ы|ым)$/';
    if( preg_match($re,$w,$match))  {
        $stem = $match[1];
        $w = $stem . "ла";
    }
    $numberOfRulesExamined++;
    if( preg_match($re2,$w) && $test1 ) {
        preg_match($re2,$w,$match);
        $stem = $match[1];
        $w = $stem;
    }

    // Step 7 (паяахетийа)
    $numberOfRulesExamined++;
    $re = '/^(.+?)(естея|естат|отея|отат|утея|утат|ытея|ытат)$/';
    if( preg_match($re,$w) ){
        preg_match($re,$w,$match);
        $stem = $match[1];
        $w = $stem;
    }



    return returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined);exit;
}


function returnStem($w,$w_CASE,$encoding_changed,$numberOfRulesExamined){;
    //convert case back to initial by reading $w_CASE
    $unacceptedLetters=array("А","Б","Ц","Д","Е","Ф","Г","Х","И","Й","К","Л","М","Н","О","П","Я","С","Т","У","Ж","В","Ь","Ы","э","щ","ч","ъ","Э","Щ","Р","Ч","З");
    $acceptedLetters=array("а","б","ц","д","е","ф","г","х","и","й","к","л","м","н","о","п","я","с","т","у","ж","в","ь","ы","а","е","г","и","о","у","с","ы","и");
    for($i=0;$i<=strlen($w)-1;$i++){
        if (@$w_CASE[$i]==1){
            for($k=0;$k<=32;$k=$k+1){
                if ($w[$i]== $acceptedLetters[$k]){
                    $w[$i]= $unacceptedLetters[$k];
                }
            }
        }
        else if (@$w_CASE[$i]==2){$w[$i]="Р";}
    }

    $returnResults=array();
    $returnResults[0]=$w;
    $returnResults[1]=$numberOfRulesExamined;
    return $returnResults ;
}
