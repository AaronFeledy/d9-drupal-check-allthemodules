<?php

/**
 * @file
 * The module file.
 */

use Drupal\ad_entity\TargetingCollection;
use Symfony\Cmf\Component\Routing\RouteObjectInterface;

/**
 * Implements hook_page_attachments().
 */
function ad_entity_smart_page_attachments(&$build) {
  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('smart');
    if (!empty($settings['site_id'])) {
      $build['#attached']['drupalSettings']['ad_entity_smart']['site_id'] = $settings['site_id'];
      $build['#attached']['drupalSettings']['ad_entity_smart']['domain'] = $settings['domain'];
      $build['#attached']['drupalSettings']['ad_entity_smart']['network_id'] = $settings['network_id'];
    }

    $title = '';
    $request = \Drupal::request();
    if ($route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT)) {
      $title = \Drupal::service('title_resolver')->getTitle($request, $route);
      /** @var \Drupal\Core\Render\RendererInterface $renderer */
      $renderer = \Drupal::service('renderer');
      $title = is_array($title) ? (string) $renderer->renderPlain($title) : (string) $title;
    }
    $build['#attached']['drupalSettings']['ad_entity_smart']['page_name'] = $title;

    $targeting_collection = new TargetingCollection();
    // Allow modules to alter data with hook_ad_entity_smart_targeting_alter().
    \Drupal::moduleHandler()->alter('ad_entity_smart_targeting', $targeting_collection);
    $build['#attached']['drupalSettings']['ad_entity_smart']['targeting'] = $targeting_collection->toArray();
  }
}

/**
 * Implements hook_library_info_build().
 */
function ad_entity_smart_library_info_build() {
  $libraries = [];

  if ($config = \Drupal::config('ad_entity.settings')) {
    $settings = $config->get('smart');
    if (!empty($settings['library_url'])) {
      $src = $settings['library_url'];
    }
    elseif (!empty($settings['network_id'])) {
      $src = '//ced.sascdn.com/tag/' . $settings['network_id'] . '/smart.js';
    }

    if (!empty($src)) {
      $libraries['provider'] = [
        'header' => TRUE,
        'js' => [
          $src => [
            'type' => 'external',
          ],
        ],
      ];
    }
  }

  return $libraries;
}

/**
 * Implements hook_theme().
 */
function ad_entity_smart_theme($existing, $type, $theme, $path) {
  return [
    'smart_default' => [
      'variables' => ['ad_entity' => NULL],
      'file' => 'ad_entity_smart.theme.inc',
    ],
  ];
}
