<?php

/**
 * @file
 * Install and updates for aws_cloud.
 */

/**
 * Removed obsolete cloud_pricing interrupts update from beta1 to beta2.
 *
 * See also: https://www.drupal.org/node/2487215.
 */
function cloud_update_8101() {
  \Drupal::database()->delete('key_value')
    ->condition('collection', 'system.schema')
    ->condition('name', 'cloud_pricing')
    ->execute();
}

/**
 * Update cloud_list and server_template_listing view's yml files.
 */
function cloud_update_8102() {
  cloud_update_yml_definitions([
    'views.view.cloud_listing.yml',
    'views.view.server_template_listing.yml',
  ]);
}

/**
 * Change the field name of user_id to uid.
 */
function cloud_update_8103() {
  $db = \Drupal::database();

  $tables = [
    'cloud_config_field_data',
    'cloud_server_template_field_data',
  ];
  $old_data = [];
  foreach ($tables as $table) {
    $old_data[$table] = [];
    if ($db->schema()->fieldExists($table, 'user_id')) {
      $result = $db->select($table, 't')
        ->fields('t', ['id', 'user_id'])
        ->execute()
        ->fetchAll();
      foreach ($result as $row) {
        $old_data[$table][] = $row;
      }

      $db->update($table)
        ->fields(['user_id' => NULL])
        ->execute();
    }
  }

  aws_cloud_update_entity_definitions();

  foreach ($tables as $table) {
    foreach ($old_data[$table] as $row) {
      $db->update($table)
        ->fields(['uid' => $row->user_id])
        ->condition('id', $row->id)
        ->execute();
    }
  }
}

/**
 * Update cloud_listing view.
 */
function cloud_update_8104() {
  cloud_update_yml_definitions([
    'views.view.cloud_listing.yml',
  ]);
}

/**
 * Migrate cloud server template entity to cloud module.
 *
 * Backup database before performing this update!
 */
function cloud_update_8110() {
  // Flush the cache first.
  drupal_flush_all_caches();

  // Clear the definition cache.
  \Drupal::service('config.typed')->clearCachedDefinitions();
  $update_manager = \Drupal::entityDefinitionUpdateManager();

  // Update the server template configuration entity.
  $server_template_type = $update_manager->getEntityType('cloud_server_template_type');
  $server_template_type->set('class', 'Drupal\cloud\Entity\CloudServerTemplateType');
  $server_template_type->set('originalClass', 'Drupal\cloud\Entity\CloudServerTemplateType');
  $handlers = [
    'list_builder' => 'Drupal\cloud\CloudServerTemplateTypeListBuilder',
    'form' => [
      'add' => 'Drupal\cloud\Form\CloudServerTemplateTypeForm',
      'edit' => 'Drupal\cloud\Form\CloudServerTemplateTypeForm',
      'delete' => 'Drupal\cloud\Form\CloudServerTemplateTypeDeleteForm',
    ],
  ];
  $server_template_type->set('handlers', $handlers);
  $route_provider = [
    'html' => 'Drupal\cloud\Routing\CloudServerTemplateTypeHtmlRouteProvider',
  ];
  $server_template_type->set('route_provider', $route_provider);
  $server_template_type->set('provider', 'cloud');
  $update_manager->updateEntityType($server_template_type);

  // Update the server template definition.
  $server_template = $update_manager->getEntityType('cloud_server_template');
  $server_template->set('class', 'Drupal\cloud\Entity\CloudServerTemplate');
  $server_template->set('originalClass', 'Drupal\cloud\Entity\CloudServerTemplate');

  $handlers = [
    'storage' => 'Drupal\cloud\CloudServerTemplateStorage',
    'list_builder' => 'Drupal\cloud\Controller\CloudServerTemplateListBuilder',
    'views_data' => 'Drupal\cloud\Entity\CloudServerTemplateViewsData',
    'translation' => 'Drupal\cloud\CloudServerTemplateTranslationHandler',
    'form' => [
      'default' => 'Drupal\cloud\Form\CloudServerTemplateForm',
      'add' => 'Drupal\cloud\Form\CloudServerTemplateForm',
      'edit' => 'Drupal\cloud\Form\CloudServerTemplateForm',
      'delete' => 'Drupal\cloud\Form\CloudServerTemplateDeleteForm',
      'launch' => 'Drupal\cloud_server_template\Form\CloudServerTemplateLaunchConfirm',
    ],
    'access' => 'Drupal\cloud\Controller\CloudServerTemplateAccessControlHandler',
    'route_provider' => [
      'html' => 'Drupal\cloud_server_template\Routing\CloudServerTemplateHtmlRouteProvider',
    ],
  ];
  $server_template->set('handlers', $handlers);
  $server_template->set('provider', 'cloud');
  $update_manager->updateEntityType($server_template);

  // Update the configurations.
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('cloud_server_template.cloud_server_template_type.aws_cloud');
  $config->setName('cloud.cloud_server_template_type.aws_cloud');
  $config->save();

  \Drupal::service('config.typed')->clearCachedDefinitions();
  drupal_flush_all_caches();

  // Update the yml files.
  cloud_update_yml_definitions(cloud_get_server_template_yml_to_update(), 'aws_cloud');

}

/**
 * Remove the old cloud_server_template definition.
 */
function cloud_update_8111() {
  // Delete the old cloud_server_template.cloud_server_template_type.aws_cloud.
  \Drupal::configFactory()
    ->getEditable('cloud_server_template.cloud_server_template_type.aws_cloud')
    ->delete();
  // Uninstall the cloud_server_template module.
  \Drupal::service('module_installer')->uninstall(['cloud_server_template']);
}

/**
 * Update the server template and cloud listing views.
 */
function cloud_update_8112() {
  cloud_update_yml_definitions([
    'views.view.cloud_listing.yml',
    'views.view.server_template_listing.yml',
  ]);
}

/**
 * Yml files to update for server template move.
 *
 * @return array
 *   An array of ymls
 */
function cloud_get_server_template_yml_to_update() {
  return [
    'cloud.cloud_server_template_type.aws_cloud.yml',
    'core.entity_form_display.cloud_server_template.aws_cloud.default.yml',
    'core.entity_view_display.cloud_server_template.aws_cloud.default.yml',
    'field.field.cloud_server_template.aws_cloud.field_availability_zone.yml',
    'field.storage.cloud_server_template.field_availability_zone.yml',
    'field.field.cloud_server_template.aws_cloud.field_description.yml',
    'field.storage.cloud_server_template.field_description.yml',
    'field.field.cloud_server_template.aws_cloud.field_iam_role.yml',
    'field.storage.cloud_server_template.field_iam_role.yml',
    'field.field.cloud_server_template.aws_cloud.field_image_id.yml',
    'field.storage.cloud_server_template.field_image_id.yml',
    'field.field.cloud_server_template.aws_cloud.field_instance_shutdown_behavior.yml',
    'field.storage.cloud_server_template.field_instance_shutdown_behavior.yml',
    'field.field.cloud_server_template.aws_cloud.field_instance_type.yml',
    'field.storage.cloud_server_template.field_instance_type.yml',
    'field.field.cloud_server_template.aws_cloud.field_kernel_id.yml',
    'field.storage.cloud_server_template.field_kernel_id.yml',
    'field.field.cloud_server_template.aws_cloud.field_max_count.yml',
    'field.storage.cloud_server_template.field_max_count.yml',
    'field.field.cloud_server_template.aws_cloud.field_min_count.yml',
    'field.storage.cloud_server_template.field_min_count.yml',
    'field.field.cloud_server_template.aws_cloud.field_monitoring.yml',
    'field.storage.cloud_server_template.field_monitoring.yml',
    'field.field.cloud_server_template.aws_cloud.field_network.yml',
    'field.storage.cloud_server_template.field_network.yml',
    'field.field.cloud_server_template.aws_cloud.field_ram.yml',
    'field.storage.cloud_server_template.field_ram.yml',
    'field.field.cloud_server_template.aws_cloud.field_schedule.yml',
    'field.storage.cloud_server_template.field_schedule.yml',
    'field.field.cloud_server_template.aws_cloud.field_security_group.yml',
    'field.storage.cloud_server_template.field_security_group.yml',
    'field.field.cloud_server_template.aws_cloud.field_ssh_key.yml',
    'field.storage.cloud_server_template.field_ssh_key.yml',
    'field.field.cloud_server_template.aws_cloud.field_subnet.yml',
    'field.storage.cloud_server_template.field_subnet.yml',
    'field.field.cloud_server_template.aws_cloud.field_tags.yml',
    'field.storage.cloud_server_template.field_tags.yml',
    'field.field.cloud_server_template.aws_cloud.field_termination_protection.yml',
    'field.storage.cloud_server_template.field_termination_protection.yml',
    'field.field.cloud_server_template.aws_cloud.field_test_only.yml',
    'field.storage.cloud_server_template.field_test_only.yml',
    'field.field.cloud_server_template.aws_cloud.field_user_data.yml',
    'field.storage.cloud_server_template.field_user_data.yml',
    'field.field.cloud_server_template.aws_cloud.field_vpc.yml',
    'field.storage.cloud_server_template.field_vpc.yml',
  ];
}

/**
 * Update cloud_list and server_template_listing view's yml files.
 */
function cloud_update_8113() {
  cloud_update_yml_definitions([
    'views.view.cloud_listing.yml',
    'views.view.server_template_listing.yml',
  ]);
}
