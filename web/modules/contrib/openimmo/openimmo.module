<?php

/**
 * @file
 * Contains openimmo.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function openimmo_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the openimmo module.
    case 'help.page.openimmo':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Integration with OpenImmo.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Batch callback.
 *
 * @param bool $success
 *   TRUE if the batch operation was successful;
 *   FALSE if there were errors.
 * @param array $results
 *   An associative array of results from the batch operation.
 */
function openimmo_fetch_data_finished($success, array $results) {
  if ($success) {
    if (!empty($results)) {
      if (!empty($results['updated'])) {
        drupal_set_message(\Drupal::translation()->formatPlural($results['updated'], 'Loaded openimmo data for one query.', 'Loaded openimmo data for @count queries.'));
      }
      if (!empty($results['failures'])) {
        drupal_set_message(\Drupal::translation()->formatPlural($results['failures'], 'Failed to get openimmo data for one query.', 'Failed to get openimmo data for @count queries.'), 'error');
      }
    }
  }
  else {
    drupal_set_message(t('An error occurred trying to get openimmo data.'), 'error');
  }
}

/**
 * Implements hook_cron().
 */
function openimmo_cron() {

  $update_config = \Drupal::config('openimmo.settings');
  $frequency = $update_config->get('check.interval_days');
  $interval = 3600 * 24 * $frequency;

  $last_fetch_time = \Drupal::state()->get('openimmo.last_fetch_time') ?: 0;

  if ((REQUEST_TIME - $last_fetch_time) > $interval) {

    // Refresh items in que.
    \Drupal::service('openimmo.manager')->refreshUpdateData();

    // Fetch data.
    \Drupal::service('openimmo.processor')->fetchData();
  }

  // todo: clear temporary directories.
}
