<?php

/**
 * @file
 * Field Template module code.
 */

/**
 * Implements hook_field_formatter_info_alter().
 */
function field_template_field_formatter_info_alter(array &$info) {
  $definitions = \Drupal::service('plugin.manager.field.field_type')->getDefinitions();
  $info['field_template']['field_types'] = array_keys($definitions);
}

/**
 * Implements hook_theme().
 */
function field_template_theme() {
  $theme['field_template'] = array(
    'render element' => 'item',
  );

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function field_template_theme_suggestions_field_template(array $variables) {
  $suggestions = array();

  if (empty($variables['item']['#field'])) {
    return $suggestions;
  }

  if ($variables['item']['#field'] instanceof \Drupal\Core\Field\FieldDefinitionInterface) {
    $field_name = $variables['item']['#field']->getName();
    $entity_type = $variables['item']['#field']->getTargetEntityTypeId();
    $bundle = $variables['item']['#field']->getTargetBundle();

    $suggestions[] = "field_template__{$field_name}";
    $suggestions[] = "field_template__{$entity_type}__{$field_name}";
    $suggestions[] = "field_template__{$entity_type}__{$bundle}_{$field_name}";
  }

  return $suggestions;
}

/**
 * Implements template_preprocess_HOOK().
 */
function template_preprocess_field_template(&$variables) {
  $variables['values'] = $variables['item']['#item']->getValue();

  // Determine the value of the item.
  if (isset($variables['values']['value'])) {
    $key = 'value';
  } else {
    $keys = array_keys($variables['values']);
    $key = reset($keys);
  }

  $variables['key'] = $key;
  $variables['value'] = $variables['values'][$key];
}
