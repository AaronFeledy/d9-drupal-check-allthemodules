<?php

/**
 * @file
 * Code for the custom tokens.
 */

use Drupal\Core\Render\BubbleableMetadata;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function webform_ip_track_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.webform_ip_track':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Webform Ip track module is used to track user details on
        submitting a webform based on the Ip location. These details are available as
        custom tokens and can be used anywhere like a global token.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_token_info().
 */
function webform_ip_track_token_info() {
  $types['location'] = [
    'name' => t('Location'),
    'description' => t('Define custom token type for tracking location in webform'),
  ];
  $tokens['location_country'] = [
    'name' => t('Country'),
    'description' => t('Custom token for Country'),
  ];
  $tokens['location_city'] = [
    'name' => t('City'),
    'description' => t('Custom token for City'),
  ];
  $tokens['location_state'] = [
    'name' => t('State'),
    'description' => t('Custom token for State'),
  ];
  $tokens['location_latitude'] = [
    'name' => t('Latitude'),
    'description' => t('Custom token for Latitude'),
  ];
  $tokens['location_longitude'] = [
    'name' => t('Longitude'),
    'description' => t('Custom token for Longitude'),
  ];
  $tokens['location_zip'] = [
    'name' => t('Zip Code'),
    'description' => t('Custom token for Zip Code'),
  ];
  $tokens['location_timezone'] = [
    'name' => t('Time zone'),
    'description' => t('Custom token for Time zone'),
  ];
  return [
    'types' => $types,
    'tokens' => [
      'location' => $tokens,
    ],
  ];
}

/**
 * Implements hook_token().
 */
function webform_ip_track_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];

  // Get client ip.
  $ip = \Drupal::request()->getClientIp();

  // Retrieving location details as json.
  $result = file_get_contents('https://ipapi.co/'.$ip.'/json');
  $data = json_decode($result, TRUE);

  $city = $data['city'];
  $country = $data['country_name'];
  $state = $data['region'];
  $latitude = $data['latitude'];
  $longitude = $data['longitude'];
  $zip = $data['postal'];
  $timezone = $data['timezone'];
  foreach ($tokens as $name => $original) {
    switch ($name) {
      case 'location_country':
        $value = $country;
        $replacements[$original] = $value;
        break;

      case 'location_state':
        $value = $state;
        $replacements[$original] = $value;
        break;

      case 'location_city':
        $value = $city;
        $replacements[$original] = $value;
        break;

      case 'location_latitude':
        $value = $latitude;
        $replacements[$original] = $value;
        break;

      case 'location_longitude':
        $value = $longitude;
        $replacements[$original] = $value;
        break;

      case 'location_zip':
        $value = $zip;
        $replacements[$original] = $value;
        break;

      case 'location_timezone':
        $value = $timezone;
        $replacements[$original] = $value;
        break;
    }
  }

  drupal_flush_all_caches();
  return $replacements;
}
