<?php

/**
 * @file
 * Module file for last_login.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Datetime\time;

/**
 * Implements hook_help().
 */
function last_login_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // For help overview pages we use the route help.page.$moduleName.
    case 'admin/help#last_login':
      $output = '';
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('This module is used to display the last login time for current logged in user.
        It is a lightweight module which do not create an extra table in a database. <br>
        This module stores the last login time in a session variable. <br>
        To display the last login time for current logged in user, You have to go to
        admin/structure/modules and enable the Last login time block by assigning
        a specific region.') . '</p>';

      $output .= '<h3>' . t('Installation:') . '</h3>';
      $output .= '<ol>';
      $output .= '<li>' . t('Download the module and place in sites/all/modules directory.') . '</li>';
      $output .= '<li>' . t('Enable the module in admin/modules.') . '</li>';
      $output .= '<li>' . t('Now goto admin/structure/block.') . '</li>';
      $output .= '<li>' . t('Follow only one of the both ways mention below:-') . '</li>';
      $output .= '<li>' . t('Enable the Last login time block and assign a specific region') . '</li>';
      $output .= '<li>' . t('OR') . '</li>';
      $output .= '<li>' . t('You can directly print session variable
                          (<b> $_SESSION["user_last_login"] </b>) in your template file.') . '</li>';
      $output .= '<li>' . t('You need to logout and login again to see the last login time.') . '</li>';
      $output .= '</ol>';

      return $output;
  }
}

/**
 * Implements hook_form_alter().
 */
function last_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login' || $form_id == 'user_login_block' || $form_id == 'user_login_form') {
    array_unshift($form['#validate'], 'last_login_user_time');
  }
}

/**
 * Callback to fetch last login and store in a session variable.
 */
function last_login_user_time($form, FormStateInterface $form_state) {
  $name = $form_state->getValue('name');

  try {
    $query = \Drupal::database()->select('users_field_data', 'ufd');
    $query->addField('ufd', 'login');
    $query->condition('ufd.name', $name);
    $query->range(0, 1);
    $last_login = $query->execute()->fetchField();

    if ($last_login) {
      \Drupal::service('session')->set('last_login', date('Y-m-d H:i', $last_login));
    }
    else {
      \Drupal::service('session')->set('last_login', date('Y-m-d H:i', time()));
    }
  }
  catch (\Exception $e) {
    $msg = t('Unable to execute query, Message: %msg.', ['%msg' => $e]);
    \Drupal::logger('last_login')->error($msg);
  }

}
