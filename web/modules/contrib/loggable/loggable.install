<?php

/**
 * @file
 * Install, uninstall, and update hooks and functions.
 */

use Drupal\Core\Url;

/**
 * Implements hook_requirements().
 */
function loggable_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime') {
    // Load the settings.
    $settings = \Drupal::config('loggable.settings');

    // Check if either the API key or channel ID is missing.
    if (!$settings->get('api_key') || !$settings->get('channel_id')) {
      // Report an error.
      $requirements['loggable_config'] = [
        'title' => t('Loggable'),
        'value' => t('Not configured'),
        'description' => t('Loggable is missing the required <a href=":url">configuration</a> in order for it operate properly. Logs will not be processed until the required configuration is set.', [':url' => Url::fromRoute('loggable.settings_form')->toString()]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }

    // Get a count of loggable filters.
    $count = \Drupal::entityTypeManager()
      ->getStorage('loggable_filter')
      ->getQuery()
      ->count()
      ->execute();

    // Check if there are no filters.
    if ($count === 0) {
      // Report an error.
      $requirements['loggable_filters'] = [
        'title' => t('Loggable'),
        'value' => t('Missing filters'),
        'description' => t('Loggable is missing the required <a href=":url">filters</a> in order for it operate properly. Logs will not be processed unless there are filters that match incoming logs.', [':url' => Url::fromRoute('entity.loggable_filter.collection')->toString()]),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }

  return $requirements;
}
