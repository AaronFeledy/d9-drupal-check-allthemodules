<?php

/**
 * @file
 * A module to display blocks selected by terms in a taxonomy vocabulary.
 *
 * The module defines one block for each term in designated vocabularies.
 *
 * Settings allows the administrator to choose
 *   - the vocabularies to be used to select nodes
 *   - the number of days nodes are considered for display
 *
 * Blocks without matching nodes do not appear on pages, although they can
 * be configured.
 *
 * @copyright (c) 2005-2013 Ouest Systèmes Informatiques (OSInet)
 * @author Frédéric G. MARAND <fgm@osinet.fr>
 *
 * @license Licensed under the CeCILL 2.0 and General Public License version 2 and later
 *
 * @link http://www.cecill.info/licences/Licence_CeCILL_V2-en.html
 *
 * @link http://drupal.org/project/taxonews Project page
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\TermInterface;
use Drupal\taxonomy\VocabularyInterface;

/**
 * Preprocess function for taxonews_block_view.
 *
 * @see taxonomy_menu()
 *
 * @return void
 */
function template_preprocess_taxonews_block_view(&$variables) {
  $taxonews = taxonews();
  $term = taxonomy_term_load($variables['tid']); // safe: valid or NULL
  $variables['empty_message'] = $taxonews->getEmptyMessages($variables['delta']);
  $variables['archive_exists'] = $taxonews->archiveExists($variables['tid'], $variables['ar_items']);
  $variables['show_archive'] = $taxonews->configGet(Taxonews::VAR_SHOW_ARCHIVE); // , Taxonews::VAR_SHOW_ARCHIVE);
  $variables['show_feed'] = $taxonews->configGet(Taxonews::VAR_FEED); // , Taxonews::DEF_FEED);

  $uri = $term->uri();
  $variables['term_path'] = $uri['path'];
  $variables['feed_url']  = $uri['path'] . '/feed';
  $variables['feed_name'] = $term->label();

  $head_feeds = $taxonews->configGet(Taxonews::VAR_HEAD_FEEDS); // , Taxonews::DEF_HEAD_FEEDS);
  $variables['head_feed'] = isset($head_feeds[$variables['delta']]) ? $head_feeds[$variables['delta']] : FALSE;
}

function X_____code_below_this_line_is_ported___________________________________() {}

/**
 * Shortcut to get the Taxonews manager service.
 *
 * @return \Drupal\taxonews\Taxonews
 */
function taxonews() {
  return \Drupal::service('taxonews.manager');
}

/**
 * Implements hook_help().
 *
 * @return string
 */
function taxonews_help($route_name, RouteMatchInterface $route_match) {
  $output = NULL;
  $doc_path = drupal_get_path('module', 'taxonews') . '/doc/doxygen/html';

  $help = t('<p>Publish node teasers into blocks based on a taxonomy vocabulary.</p>') ;
  switch ($route_name) {
    case 'help.page.taxonews':
      $url = Url::fromUri("base://$doc_path");
      $link = \Drupal::l($url->toString(), $url);
      $output = $help
        . t('<p>This module creates blocks containing a selection of node titles, linking to the node themselves. Blocks are created for each taxonomy term in the vocabularies enabled for block generation.</p>')
        . t('<p>Settings allow the administrator to choose the age limit for nodes included in the blocks, as well as various settings to handle special cases like empty blocks.</p>')
        . t('<p>By default, nodes are displayed in reverse chronological order. If statistics.module is enabled and node counts are active, nodes can also be displayed by descending order of total views or daily views since their creation. The node selection process by creation date is not affected by these sorting rules.</p>')
        . '<p>' . t('If the site has run %doxygen (development systems only), developer documentation is available at !doc.', array(
          '%doxygen' => 'doxygen taxonews.dox',
          '!doc' => $link,
        )) . '</p>';
      break;
  }

  return $output;
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function taxonews_taxonomy_term_delete(TermInterface $term) {
  taxonews()->onTermDelete($term);
}

/**
 * Implements hook_taxonomy_term_insert().
 */
function taxonews_taxonomy_term_insert(TermInterface $term) {
  taxonews()->onTermCreate($term);
}

/**
 * Implements hook_taxonomy_term_update().
 */
function taxonews_taxonomy_term_update(TermInterface $term) {
  taxonews()->onTermUpdate($term);
}

/**
 * Implements hook_taxonomy_vocabulary_delete().
 */
function taxonews_taxonomy_vocabulary_delete(VocabularyInterface $vocabulary) {
  taxonews()->onVocabularyDelete($vocabulary);
}

/**
 * Implements hook_taxonomy_vocabulary_insert().
 */
function taxonews_taxonomy_vocabulary_insert(VocabularyInterface $vocabulary) {
  taxonews()->onVocabularyCreate($vocabulary);
}

/**
 * Implements hook_taxonomy_vocabulary_update().
 */
function taxonews_taxonomy_vocabulary_update(VocabularyInterface $vocabulary) {
  taxonews()->onVocabularyUpdate($vocabulary);
}

/**
 * Implements hook_theme().
 */
function taxonews_theme($existing = array(), $type = 'module', $theme = 'taxonews') {
  $ret = array(
    'taxonews_block_view' => array(
      'variables' => array(
        'delta'     => NULL,
        'ar_items'  => array(),
        'tid'       => 0,
      ),
      'template' => 'taxonews-block-view',
    ),
    'taxonews_list' => array(
      'variables' => array(
        'nodes' => array(),
      ),
      'template' => 'taxonews-list',
    ),
    'taxonews_more_link' => array(
      'variables' => array(
        'route'   => '<front>',
        'route_parameters' => array(),
        'title'   => t('More'),
        'options' => array(),
      ),
      'template' => 'taxonews-more-link',
    ),
  );
  return $ret;
}

/**
 * Implements hook_preprocess_taxonews_list().
 *
 * - Extract node titles as links to nodes as an array called "links".
 */
function template_preprocess_taxonews_list(&$variables) {
  $nodes = &$variables['nodes'];

  $titles = array_map(function (NodeInterface $node) {
    return $node->link($node->title->value);
  }, $nodes);

  $variables['links'] = $titles;
}

/**
 * Implements hook_preprocess_taxonews_more_link().
 */
function template_preprocess_taxonews_more_link(&$variables) {
  $variables['link'] = \Drupal::l($variables['title'], Url::fromRoute($variables['route'], $variables['route_parameters']), $variables['options']);
}
