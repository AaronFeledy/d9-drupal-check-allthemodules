<?php
declare(strict_types=1);

use Drupal\better_register\Controller\ConfirmationEmailController;
use Drupal\better_register\Form\UserRegisterForm;
use Drupal\Core\Entity\ContentEntityType;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\BubbleableMetadata;
use Drupal\user\Entity\User;
use Drupal\user\UserInterface;

function better_register_entity_type_build(array &$entity_types) {
  /* @var $entity_types[] ContentEntityType */
  $entity_types['user']->setFormClass('register', 'Drupal\better_register\Form\UserRegisterForm');
}

function better_register_form_user_login_form_alter(&$form, FormStateInterface $form_state) {
  $form['name']['#title'] = t('Email address');
  $form['name']['#description'] = t('Enter your email address.');
  $form['pass']['#description'] = t('Enter the password for your account.');
  $form['#submit'][] = 'better_register_user_login_submit';
}

function better_register_form_user_pass_alter(&$form, FormStateInterface $form_state) {
  $form['name']['#title'] = t('Email address');
}

function better_register_user_login_submit(array &$form, FormStateInterface &$form_state) {
  $user = User::load($form_state->get('uid'));

  if ($user->hasRole(UserRegisterForm::EMAIL_CONFIRMED_ROLE)) {
    drupal_set_message(t('Welcome @user, you are now logged in.', [
      '@user' => $user->getDisplayName(),
    ]));
    $form_state->setRedirect('<front>');
  }
  else {
    $form_state->setRedirect('better_register.confirmation_email_controller_not_confirmed', [
      'account' => $user->id(),
    ]);
  }
}

function better_register_menu_local_tasks_alter(&$data, $route_name) {
  if ($route_name == 'user.login' || $route_name == 'user.register' || $route_name == 'user.pass') {
    unset($data['tabs'][0]);
  }
}

/**
 * Implements hook_token_info().
 */
function better_register_token_info() {
  $types['better-register'] = array(
    'name' => t('Better register'),
    'description' => t('Tokens related to user registration.'),
    'needs-data' => 'user',
  );

  $user['confirm-email-url'] = array(
    'name' => t('Confirm email URL'),
    'description' => t('URL to confirm the user email address.'),
  );

  return array(
    'types' => $types,
    'tokens' => array('better-register' => $user),
  );
}

/**
 * Implements hook_tokens().
 */
function better_register_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];

  if ($type == 'better-register' && !empty($data['user'])) {
    /** @var UserInterface $account */
    $account = $data['user'];

    foreach ($tokens as $name => $original) {
      switch ($name) {
        // Basic user account information.
        case 'confirm-email-url':
          // In the case of hook user_presave uid is not set yet.
          $replacements[$original] = ConfirmationEmailController::getActivationUrl($account)->toString();
          break;
      }
    }
  }

  return $replacements;
}
